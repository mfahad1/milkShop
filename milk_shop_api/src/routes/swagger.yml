components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    BadRequestError:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: Validation failed
    UnauthorizedError:
      description: Token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: Token is required
    PaymentRequired:
      description: Payment is required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: Payment is required
    ForbiddenError:
      description: Access is not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: You do not have access to this resource
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: This resource does not exist
    ConflictError:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: Resource already exist
    PreconditionFailedError:
      description: Precondition failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: Precondition failed
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: Unexpected error occurred
    NoContentResponse:
      description: No Content success status response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
          example:
            message: Request has succeeded
  parameters:
    offset:
      in: query
      name: offset
      description: The number of items to skip before starting to collect the result set
      schema:
        type: integer
        minimum: 0
        default: '0'
    limit:
      in: query
      name: limit
      description: The numbers of items to return
      schema:
        type: integer
        minimum: 0
        default: 10
    query:
      in: query
      name: q
      description: Query
      schema:
        type: string
    userId:
      in: path
      name: userId
      description: User ID
      required: true
      schema:
        type: string
        format: uuid
    clientId:
      in: path
      name: clientId
      description: Client ID
      required: true
      schema:
        type: string
        format: uuid
    keywordlistId:
      in: path
      name: keywordlistId
      description: Keywordlist ID
      required: true
      schema:
        type: string
        format: uuid
    targetId:
      in: path
      name: targetId
      description: Target ID
      required: true
      schema:
        type: string
        format: uuid
    tagId:
      in: path
      name: tagId
      description: Tag ID
      required: true
      schema:
        type: string
        format: uuid
    reportId:
      in: path
      name: reportId
      description: Report ID
      required: true
      schema:
        type: string
        format: uuid
    searchQueryId:
      in: path
      name: searchQueryId
      description: Search Query ID
      required: true
      schema:
        type: string
        format: uuid
    invitationToken:
      in: query
      name: token
      description: User Invitation Token
      required: true
      schema:
        type: string
    resetPasswordToken:
      in: query
      name: token
      description: Reset Password Token
      required: true
      schema:
        type: string
    clientInvitationAccepted:
      in: query
      name: accepted
      description: Filter clients with accepted invitations only
      required: false
      schema:
        type: boolean
    clientInvitationPending:
      in: query
      name: pending
      description: Filter clients with pending invitations only
      required: false
      schema:
        type: boolean
  schemas:
    Message:
      properties:
        message:
          type: string
    Authenticate:
      properties:
        token:
          type: string
    UserInvitation:
      required:
        - id
        - email
        - role
        - invitationAccepted
      properties:
        id:
          description: User ID
          type: string
          format: uuid
        email:
          description: E-mail
          type: string
        role:
          description: Role
          type: string
        invitationAccepted:
          description: Invitation accepted?
          type: string
    User:
      required:
        - id
        - email
        - firstName
        - lastName
        - role
        - invitationAccepted
      properties:
        id:
          description: User ID
          type: string
          format: uuid
        email:
          description: E-mail
          type: string
        firstName:
          description: First name
          type: string
        lastName:
          description: Last name
          type: string
        role:
          description: Role
          type: string
        invitationAccepted:
          description: Invitation accepted?
          type: string
    ClientUser:
      required:
        - id
        - email
        - firstName
        - lastName
        - role
        - clientRole
        - invitationAccepted
      properties:
        id:
          description: User ID
          type: string
          format: uuid
        email:
          description: E-mail
          type: string
        firstName:
          description: First name
          type: string
        lastName:
          description: Last name
          type: string
        role:
          description: Role
          type: string
        clientRole:
          description: Client Role
          type: string
        invitationAccepted:
          description: Invitation accepted?
          type: string
    Client:
      required:
        - id
        - name
      properties:
        id:
          description: Client ID
          type: string
          format: uuid
        name:
          description: Name
          type: string
        clientRole:
          description: Client Role (optional -- Only visible to Client User)
          type: string
        settings:
          description: Settings
          type: object
          items:
            $ref: '#/components/schemas/ClientSettings'
    ClientSettings:
      required:
        - userLimit
        - targetLimit
      properties:
        userLimit:
          description: User limit
          type: integer
          minimum: 1
        targetLimit:
          description: Target limit
          type: integer
          minimum: 1
    Target:
      required:
        - id
        - platform
        - identifier
        - profile
      properties:
        id:
          description: Target ID
          type: string
          format: uuid
        platform:
          description: Platform
          type: string
        identifier:
          description: Platform specific identifier
          type: string
        profile:
          type: object
          properties:
            name:
              description: Name
              type: string
            handle:
              description: Handle
              type: string
            photoURL:
              description: Photo URL
              type: string
            dataStatus:
              description: Data Status
              type: string
              enum: [exist, fetching]
    TargetSearch:
      required:
        - platform
        - identifier
        - profile
      properties:
        platform:
          description: Platform
          type: string
        identifier:
          description: Platform specific identifier
          type: string
        profile:
          type: object
          properties:
            name:
              description: Name
              type: string
            handle:
              description: Handle
              type: string
            photoURL:
              description: Photo URL
              type: string
    Tag:
      required:
        - id
        - name
        - targets
      properties:
        id:
          description: Tag ID
          type: string
          format: uuid
        name:
          description: Name
          type: string
        targets:
          description: Targets
          type: array
          items:
            $ref: '#/components/schemas/Target'
        scope:
          description: Scope of the tag
          type: string
          enums: [global, client, user]
    TagSmall:
      required:
        - id
        - name
        - targetCount
        - fewTargets
      properties:
        id:
          description: Tag ID
          type: string
          format: uuid
        name:
          description: Name
          type: string
        targetCount:
          description: Target Count
          type: integer
        fewTargets:
          description: Few Targets
          type: array
          items:
            $ref: '#/components/schemas/Target'
        scope:
          description: Scope of the tag
          type: string
          enums: [global, client, user]
    Keywordlist:
      required:
        - id
        - name
        - keywords
      properties:
        id:
          description: Keywordlist ID
          type: string
          format: uuid
        name:
          description: Name
          type: string
        keywords:
          description: Keywords
          type: array
          items:
            type: string
        scope:
          description: Scope of the keywordlist
          type: string
          enums: [global, client, user]
    KeywordlistSmall:
      required:
        - id
        - name
        - keywordCount
        - fewKeywords
      properties:
        id:
          description: Keywordlist ID
          type: string
          format: uuid
        name:
          description: Name
          type: string
        keywordCount:
          description: Keyword Count
          type: integer
        fewKeywords:
          description: Few Keywords
          type: array
          items:
            type: string
        scope:
          description: Scope of the keywordlist
          type: string
          enums: [global, client, user]
    SearchResult:
      required:
        - id
        - text
        - target
      properties:
        id:
          description: Result ID
          type: string
          format: uuid
        text:
          description: Text
          type: string
        date:
          description: Date
          type: string
        extras:
          description: Platform specific extras
          type: object
        target:
          $ref: '#/components/schemas/Target'
    Report:
      required:
        - id
        - name
        - documents
        - createdAt
      properties:
        id:
          description: Report ID
          type: string
          format: uuid
        name:
          description: Name
          type: string
        createdAt:
          description: Creation Date
          type: string
        documents:
          description: Documents
          type: array
          items:
            type: object
            properties:
              format:
                description: Document format
                type: string
              url:
                description: Document URL
                type: url
    Alert:
      required:
        - frequency
        - type
        - attributes
      properties:
        id:
          description: Alert ID
          type: string
          format: uuid
        frequency:
          description: Frequency
          type: string
          enum: [DAILY, AS_IT_HAPPENS]
        type:
          description: Alert Type
          type: string
          enum: [EMAIL, NOOP]
        attributes:
          description: Attributes
          type: object
          properties:
            emailAddresses:
              description: Email addresses
              type: array
              items:
                description: Email address
                type: string
                format: email
    SearchQuery:
      required:
        - id
        - name
        - query
        - alerts
      properties:
        id:
          description: Search Query ID
          type: string
          format: uuid
        name:
          description: Name
          type: string
        query:
          description: Query
          type: object
          properties:
            targetIds:
              description: Target IDs
              type: array
              items:
                description: Target ID
                type: string
                format: uuid
            tagIds:
              description: Tag IDs
              type: array
              items:
                description: Tag ID
                type: string
                format: uuid
            keywords:
              description: Keywords
              type: array
              items:
                description: Keyword
                type: string
            keywordlistIds:
              description: Keywordlist IDs
              type: array
              items:
                description: Keywordlist ID
                type: string
                format: uuid
        alerts:
          description: alerts
          type: array
          items:
            $ref: '#/components/schemas/Alert'
    SearchQuerySmall:
      required:
        - id
        - name
        - query
      properties:
        id:
          description: Search Query ID
          type: string
          format: uuid
        name:
          description: Name
          type: string
        query:
          description: Query
          type: object
          properties:
            targetIds:
              description: Target IDs
              type: array
              items:
                description: Target ID
                type: string
                format: uuid
            tagIds:
              description: Tag IDs
              type: array
              items:
                description: Tag ID
                type: string
                format: uuid
            keywords:
              description: Keywords
              type: array
              items:
                description: Keyword
                type: string
            keywordlistIds:
              description: Keywordlist IDs
              type: array
              items:
                description: Keywordlist ID
                type: string
                format: uuid
