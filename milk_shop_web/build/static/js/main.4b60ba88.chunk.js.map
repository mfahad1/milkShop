{"version":3,"sources":["helpers/localStorageService.ts","shared/contexts/session.tsx","shared/contexts/toast.tsx","helpers/history.ts","shared/components/layout/spinner.tsx","hooks/api.tsx","services/api-services/config/axios.ts","services/api-services/config/HttpRequest.ts","config/constants.ts","services/api-services/auth.ts","services/api-services/invitation.ts","services/api-services/user.ts","shared/components/formik/InputField.tsx","modules/accept-user-invitation/accept-user-invitation.tsx","services/role-management/roles.ts","modules/landing/landing.container.tsx","services/api-services/client.ts","modules/login-form/login-form.tsx","services/api-services/keywordlist.ts","services/api-services/tag.ts","services/api-services/target.ts","shared/components/ActionButtons.tsx","shared/components/EntityStatBox.tsx","shared/components/InlineListMore.tsx","shared/components/ScopeIcon.tsx","shared/components/KeywordlistView/KeywordlistView.tsx","modules/client-dashboard/dashboard.container.tsx","shared/components/formik/Checkbox.tsx","shared/components/formik/ChipsField.tsx","modules/client-keywordlist/components/create-keywordlist.tsx","hooks/delete-modal.tsx","shared/components/tables/pagination-bar.tsx","shared/components/tables/table.tsx","shared/components/tables/paginated-table.tsx","modules/client-keywordlist/components/list-keywordlists.tsx","modules/client-keywordlist/client-keywordlist.container.tsx","shared/components/TargetView/TargetView.tsx","shared/components/formik/TypeAheadField.tsx","shared/components/formik/TargetField.tsx","modules/client-tag/components/create-tag.tsx","shared/components/TagView/TagView.tsx","modules/client-tag/components/list-tag.tsx","modules/client-tag/client-tag.container.tsx","modules/client-target/components/add-target.tsx","modules/client-target/components/list-target.tsx","modules/client-target/client-target.container.tsx","modules/client/components/create-client.tsx","shared/components/ClientView/ClientView.tsx","modules/client/components/list-clients.tsx","modules/client/client.container.tsx","modules/dashboard/dashboard.container.tsx","modules/keywordlist/components/create-keywordlist.tsx","modules/keywordlist/components/list-keywordlists.tsx","modules/keywordlist/keywordlist.container.tsx","shared/components/formik/DatePickerField.tsx","shared/components/formik/KeywordlistField.tsx","shared/components/formik/TagField.tsx","modules/power-search/components/power-search-query.tsx","modules/power-search/power-search-query.container.tsx","services/api-services/search-query.ts","services/api-services/report.ts","shared/components/formik/FormModal.tsx","modules/power-search/components/create-report-button.tsx","shared/components/formik/Dropdown.tsx","modules/search-query/components/search-query-form.tsx","modules/power-search/components/create-search-query-button.tsx","modules/power-search/components/power-search-action-box.tsx","services/api-services/power-search.ts","shared/components/PostView/FakePost.tsx","shared/components/PostView/retweet.svg","shared/components/PostView/TwitterPost.tsx","shared/components/PostView/PostView.tsx","modules/power-search/components/power-search-result.tsx","modules/power-search/power-search-result.container.tsx","shared/components/ReportView/ReportView.tsx","modules/report/components/list-report.tsx","modules/report/report.container.tsx","modules/search-query/create-search-query.container.tsx","hooks/on-click-outside.tsx","shared/components/DropdownMenu.tsx","shared/components/tables/paginated-grid.tsx","modules/search-query/components/search-query-timeline.tsx","modules/search-query/components/list-search-queries.tsx","modules/search-query/search-query.container.tsx","modules/super-user/components/create-super-user.tsx","shared/components/UserView/UserView.tsx","modules/super-user/components/list-super-users.tsx","modules/super-user/super-user.container.tsx","modules/tag/components/create-tag.tsx","modules/tag/components/list-tag.tsx","modules/tag/tag.container.tsx","modules/target/components/add-target.tsx","modules/target/components/list-targets.tsx","modules/target/target.container.tsx","modules/user-client/components/list-user-clients.tsx","modules/user-client/user-client.container.tsx","modules/user-settings/components/change-password.tsx","modules/user-settings/components/edit-profile.tsx","modules/user/components/create-user.tsx","modules/user/components/list-users.tsx","modules/user/user.container.tsx","shared/components/WIP.tsx","services/role-management/routes.ts","modules/user-settings/user-settings.container.tsx","shared/components/PageNotFound/PageNotFound.tsx","shared/components/layout/header.tsx","shared/components/Logo.tsx","shared/components/layout/sidebar.tsx","app/PrivateSection.tsx","app/PublicSection.tsx","app/App.Route.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["localStorageService","set","key","value","localStorage","setItem","JSON","stringify","get","getItem","parse","remove","removeItem","clear","initialState","user","undefined","profile","client","SessionContext","createContext","reducer","state","action","type","payload","Error","SessionContextProvider","props","useReducer","dispatch","Provider","children","message","ToastContext","ToastContextProvider","useState","toast","setToast","RenderToast","Toast","style","position","top","right","zIndex","minWidth","borderRadius","color","margin","fontSize","delay","autohide","show","onClose","className","marginBottom","createBrowserHistory","AppSpinner","id","Spinner","animation","role","useApi","fn","loading","setLoading","error","setError","result","setResult","useEffect","a","response","caller","paginatedApiReducer","offset","limit","refresh","usePaginatedApi","setOffsetFn","useCallback","setLimitFn","setRefreshFn","setOffset","setLimit","setRefresh","WithApi","apiProps","Component","APIError","status","axios","Axios","create","options","data","interceptors","use","history","push","Promise","reject","axiosRequest","getHeader","header","defaultHeaders","Authorization","token","Object","assign","httpRequest","request","method","url","params","baseURL","headers","login","decoded","jwt","json","userId","acceptUserInvitation","encodeURIComponent","getUser","listSuperUsers","createClientUser","clientId","resendClientUserInvitation","editClientUser","deleteClientUser","listClientUsers","InputField","useField","field","meta","toString","Group","label","Label","Control","isInvalid","touched","Feedback","AcceptUserInvitation","UserRole","useContext","dispatchSession","location","useLocation","useHistory","queryString","search","getUserInvitation","validationSchema","Yup","shape","firstName","trim","min","max","required","lastName","password","confirmPassword","oneOf","onSubmit","email","Fragment","initialValues","isSubmitting","name","disabled","Button","ClientRole","UserRoleText","ADMIN","CLIENT","ClientRoleText","ANALYST","VETTER","LandingContainer","to","createClient","listClients","listUserClients","filter","editClient","LoginForm","credentials","total","invitationAccepted","clientRole","redirectTo","redirect","Alert","variant","placeholder","size","block","createKeywordlist","editKeywordlist","listKeywordlists","getKeywordlistById","deleteKeywordlist","createClientKeywordlist","editClientKeywordlist","keywordlistId","listClientKeywordlists","query","getClientKeywordlistById","deleteClientKeywordlist","createTag","editTag","listTags","getTagById","deleteTag","createClientTag","editClientTag","tagId","listClientTags","getClientTagById","deleteClientTag","searchTarget","platform","handle","addTarget","listTargets","deleteTarget","addClientTarget","listClientTargets","unassignClientTarget","targetId","AddButton","icon","FAS","CancelButton","DeleteButton","EditButton","SaveButton","LinkButton","EmailButton","EntityStatBox","entity","count","onClick","onAdd","alert","InlineListMore","output","elms","React","Children","toArray","length","slicedElms","slice","i","parseInt","elm","ScopeIcon","scope","title","width","KeywordlistView","keywordlist","keywordLimit","keywordCount","fewKeywords","isClientKeywordlist","KeywordlistTableBox","responsive","map","ClientDashboard","_listClientUsers","_listClientKeywordlists","_listClientTargets","_listClientTags","boxes","withUserList","withKeywordlists","withTargets","withTags","KeywordlistTable","Row","Col","xs","Box","span","Checkbox","Check","checked","ChipsField","helper","inputValue","setInputValue","values","onChange","setValue","item","isMulti","isClearable","onInputChange","onKeyDown","event","includes","preventDefault","onBlur","e","onFocus","setTouched","menuIsOpen","components","DropdownIndicator","isDisabled","styles","control","base","transition","isFocused","boxShadow","borderColor","CreateClientKeywordlistComponent","onUpdate","useParams","editId","allowOnlyUserSpecific","allowOnlyClientSpecific","keywords","isUserSpecific","setInitialValues","showUserSpecific","fetchData","resetForm","enableReinitialize","DeleteModal","onConfirm","confirmValue","setIsSubmitting","canDelete","setCanDelete","confirmInput","setConfirmInput","_onConfirm","confirmBox","target","Modal","onHide","Header","Title","Body","Footer","useDeleteModal","onDelete","getEntityName","setEntity","_onClose","PaginationBar","setPageIndex","pageIndex","pageSize","totalRounded","Math","ceil","range","from","neighbours","getEllipsisOn","condition","Pagination","Ellipsis","Prev","Item","active","Next","ReactTable","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","hover","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","WithFixedPagination","RenderComponent","PaginatedTable","WithPagination","Table","refreshTable","ListClientKeywordlistsComponent","showDeleteModal","Cell","original","ClientKeywordlistContainer","md","TargetView","anchor","href","rel","Image","src","photoURL","roundedCircle","dataStatus","TypeAheadField","debounce","fetchOptions","getOptionValue","getOptionLabel","renderOption","renderSelectedOption","setOptions","useDebouncedCallback","opts","getOptionDebounced","_renderOption","_props","ref","innerRef","innerProps","_renderSelectedOption","useMemo","_components","Option","MultiValueLabel","isSearchable","TargetField","CreateClientTagComponent","targets","queryTargets","targetIds","TagView","tag","targetLimit","targetCount","fewTargets","isClientTag","ListClientTagComponent","ClientTagContainer","AddClientTargetComponent","form","useRef","showConfirmModal","setShowConfirmModal","tempTarget","setTempTarget","identifier","current","ConfirmTargetModal","modalSubmitted","setModalSubmitted","ListClientTargetsComponent","ClientTargetContainer","canAdd","CreateClientComponent","settings","userLimit","integer","positive","ClientView","up","down","isUserClient","ListClientsComponents","initialDefaultValue","gotoClient","ClientContainer","Dashboard","UserStatBox","ClientStatBox","withClientList","KeywordlistStatBox","TargetStatBox","TagStatBox","CreateKeywordlistComponent","ListKeywordlistsComponent","keyword","KeywordlistContainer","DatePickerField","_onFocus","_onChange","FormGroup","dateFormat","placeholderText","selected","KeywordlistField","TagField","PowerSearchQueryComponent","tags","keywordlists","Date","when","is","then","otherwise","keywordlistss","queryTags","queryKeywordList","setHours","currentDate","toISOString","selectsStart","startDate","endDate","maxDate","selectsEnd","minDate","PowerSearchQueryContainer","AlertFrequency","createReport","editReport","reportId","deleteReport","FormModal","Form","CreateReportButton","showModal","setShowModal","report","AlertTypes","AlertFrequencyText","DAILY","AS_IT_HAPPENS","AlertTypesText","EMAIL","createSearchQuery","editSearchQuery","searchQueryId","getSearchQueryById","deleteSearchQuery","Dropdown","Array","isArray","as","keys","SearchQueryForm","arrayHelpers","alerts","renderAlertAttributes","textAlign","CreateSearchQueryButton","showSearchQueryModal","setShowSearchQueryModal","frequency","attributes","emailAddresses","of","PowerSearchActionBox","_query","reportQueryParam","searchQueryParam","canGoBack","canCreateReport","canCreateAlert","powerSearch","FakePost","post","extras","tweetId","_extends","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","height","fill","viewBox","ForwardRef","forwardRef","Retweeted","TwitterPost","retweeted","retweetedStatusId","PostView","PowerSearchResultComponent","reduce","acc","x","PostList","ensureArray","PowerSearchResultContainer","tagIds","keywordlistIds","ReportView","documents","date","createdAt","document","format","ListReportComponent","listReports","ReportContainer","CreateSearchQuery","defaultAlert","useOnClickOutside","handler","listener","contains","addEventListener","removeEventListener","DropdownMenu","dropdownButtonValue","dropdownMenuItems","showMenu","setShowMenu","menuRef","aria-labelledby","menuItem","text","PaginatedGrid","headingFn","dropdownMenuFn","renderItem","Container","fluid","sm","lg","xl","Grid","refreshGrid","SearchQueryTimeline","toDate","fromDate","getDate","ListSearchQueries","listSearchQuery","searchQuery","SearchQueryContainer","CreateSuperUserComponent","UserView","ListSuperUsersComponent","resendInvitation","superUser","SuperUserContainer","CreateTagComponent","ListTagComponent","TagContainer","AddTargetComponent","ListTargetsComponent","TargetContainer","ListUserClientsComponents","acceptInvitation","UserClientContainer","ChangePassword","currentPassword","EditProfile","_user","CreateUserComponent","ListUsersComponent","clientUser","UserContainer","WIP","routes","component","sidebar","userRoles","clientRoles","FAR","CreateSearchQueryContainer","getRoutes","filteredRoutes","route","PageNotFound","showDropdown","setShowDropdown","userName","clientName","Navbar","expand","inline","InputGroup","FormControl","aria-label","aria-describedby","Prepend","Collapse","Logo","xmlns","NavSection","Nav","replace","Link","NavLink","fonts","Sidebar","adminRoutes","clientRoutes","adminNav","clientNav","PrivateSection","PublicSection","AppRoute","path","exact","App","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4b60ba88.chunk.js","sourcesContent":["function set<T>(key: string, value: T): void {\n  if (value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nfunction get<T>(key: string): T | null {\n  const value: string | null = localStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return null;\n}\n\nconst localStorageService = {\n  set,\n  get,\n  remove: (key: string): void => localStorage.removeItem(key),\n  clear: (): void => localStorage.clear(),\n};\n\nexport default localStorageService;\n","import React, { PropsWithChildren, createContext, useReducer } from 'react';\n\nimport localStorageService from '../../helpers/localStorageService';\nimport { User as _User } from '../../services/api-services/user';\nimport { UserRole, ClientRole } from '../../services/role-management/roles';\n\nexport type User = {\n  id: string;\n  role: UserRole;\n}\n\nexport type Profile = _User;\n\nexport type Client = {\n  id: string;\n  name: string;\n  role?: ClientRole;\n}\n\nexport type Session = {\n  user?: User;\n  profile?: Profile;\n  client?: Client;\n}\n\ntype ActionType = Session & {\n  type: 'SET_USER' | 'SET_CLIENT' | 'LOGOUT';\n}\n\nconst initialState = {\n  user: localStorageService.get<User>('user') || undefined,\n  profile: localStorageService.get<Profile>('profile') || undefined,\n  client: localStorageService.get<Client>('client') || undefined,\n};\n\ntype SessionContextType = [Session, React.Dispatch<ActionType>];\n\nconst SessionContext = createContext<SessionContextType>([\n  initialState,\n  (): null => null,\n]);\n\nconst reducer = (state: Session, action: ActionType): Session => {\n  const { type, ...payload } = action;\n\n  switch (type) {\n  case 'SET_USER':\n    localStorageService.set('user', payload.user);\n    localStorageService.set('profile', payload.profile);\n\n    return { ...state, user: payload.user, profile: payload.profile };\n\n  case 'SET_CLIENT':\n    localStorageService.set('client', payload.client);\n\n    return { ...state, client: payload.client };\n\n  case 'LOGOUT':\n    localStorageService.remove('user');\n    localStorageService.remove('profile');\n    localStorageService.remove('client');\n    localStorageService.remove('token');\n\n    return { user: undefined, profile: undefined, client: undefined };\n\n  default:\n    throw new Error();\n  }\n};\n\nconst SessionContextProvider = (props: PropsWithChildren<{}>): JSX.Element => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <SessionContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </SessionContext.Provider>\n  );\n};\n\nexport default SessionContextProvider;\nexport { SessionContext };\n","import React, { PropsWithChildren, createContext, useState, CSSProperties } from 'react';\nimport Toast from 'react-bootstrap/Toast';\n\ntype ToastType = {\n  type: 'success' | 'error' | 'hide';\n  message?: string;\n}\n\ntype ToastContextType = React.Dispatch<React.SetStateAction<ToastType>>;\n\nconst initialState: ToastType = {\n  type: 'hide',\n  message: '',\n};\n\nconst ToastContext = createContext<ToastContextType>((): null => null);\n\nconst ToastContextProvider = (props: PropsWithChildren<{}>): JSX.Element => {\n  const [toast, setToast] = useState<ToastType>(initialState);\n\n  const RenderToast = (): JSX.Element | null => {\n    if (!toast.message) {\n      return null;\n    }\n\n    const styleToast: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      zIndex: 2,\n      minWidth: '250px',\n      borderRadius: '10px',\n      color: 'white',\n      margin: '20px',\n      fontSize: '15px',\n    };\n\n    return (\n      <Toast\n        style={{ ...styleToast }}\n        delay={5000}\n        autohide\n        show={toast.type !== 'hide'}\n        onClose={(): void => setToast({ type: 'hide' })}\n      >\n        <div\n          className={`alert alert-${toast.type === 'error' ? 'danger' : 'success'}`}\n          style={{ marginBottom: 0 }}\n        >\n          <strong>{toast.type === 'error' ? 'Error!' : 'Success!'}</strong>{' '}\n          {toast.message}\n        </div>\n      </Toast>\n    );\n  };\n\n  return (\n    <ToastContext.Provider value={setToast}>\n      <RenderToast />\n      {props.children}\n    </ToastContext.Provider>\n  );\n};\n\nexport default ToastContextProvider;\nexport { ToastContext };\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nimport './spinner.scss';\n\nfunction AppSpinner(): JSX.Element {\n  return (\n    <div className=\"loader-container center-x center-y\" id=\"loader\">\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n}\n\nexport default AppSpinner;\n","import React, { useState, useEffect, useReducer, useCallback } from 'react';\n\nimport AppSpinner from '../shared/components/layout/spinner';\n\ntype APIFunc<T> = () => Promise<T>;\n\ntype UseApi<T> = {\n  loading: boolean;\n  error: Error | null;\n  result: T | null;\n};\n\nexport function useApi<T>(fn: APIFunc<T>): UseApi<T> {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [result, setResult] = useState<T | null>(null);\n\n  useEffect(() => {\n    async function caller(): Promise<void> {\n      setLoading(true);\n\n      try {\n        const response = await fn();\n\n        setResult(response);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    caller();\n  }, [fn]);\n\n  return {\n    loading,\n    error,\n    result,\n  };\n}\n\nexport type PaginatedAPIFunc<T extends object> = (\n  offset: number,\n  limit: number\n) => Promise<PaginatedAPIResponse<T>>;\n\ntype PaginatedApiState<T extends object> = UseApi<PaginatedAPIResponse<T>> & {\n  offset: number;\n  limit: number;\n  refresh: boolean;\n}\n\ntype UsePaginatedApi<T extends object> = UseApi<PaginatedAPIResponse<T>> & PaginatedApiState<T> & {\n  setOffset: (offset: number) => void;\n  setLimit: (limit: number) => void;\n  setRefresh: () => void;\n};\n\ntype PaginatedAPIResponse<T extends object> = {\n  total: number;\n  data: T[];\n};\n\ntype PaginatedApiAction<T extends object> = {\n  type: 'SET_LOADING';\n} | {\n  type: 'SET_ERROR';\n  error: Error;\n} | {\n  type: 'SET_RESULT';\n  result: PaginatedAPIResponse<T>;\n} | {\n  type: 'SET_OFFSET';\n  offset: number;\n} | {\n  type: 'SET_LIMIT';\n  limit: number;\n} | {\n  type: 'SET_REFRESH';\n}\n\ntype PaginationApiReducer<T extends object> = (state: PaginatedApiState<T>, action: PaginatedApiAction<T>) => PaginatedApiState<T>;\nfunction paginatedApiReducer<T extends object>(state: PaginatedApiState<T>, action: PaginatedApiAction<T>): PaginatedApiState<T> {\n  switch (action.type) {\n  case 'SET_LOADING':\n    return { ...state, result: null, error: null, loading: true };\n  case 'SET_ERROR':\n    return { ...state, result: null, error: action.error, loading: false };\n  case 'SET_RESULT':\n    return { ...state, result: action.result, error: null, loading: false };\n  case 'SET_OFFSET':\n    return { ...state, result: null, error: null, loading: true, offset: action.offset };\n  case 'SET_LIMIT':\n    return { ...state, result: null, error: null, loading: true, limit: action.limit };\n  case 'SET_REFRESH':\n    if (state.loading) {\n      return state;\n    }\n\n    return { ...state, result: null, error: null, loading: true, refresh: !state.refresh };\n  default:\n    throw new Error(`Unknown action: ${action}`);\n  }\n}\n\nexport function usePaginatedApi<T extends object>(fn: PaginatedAPIFunc<T>, offset: number, limit: number): UsePaginatedApi<T> {\n  const [state, dispatch] = useReducer<PaginationApiReducer<T>>(paginatedApiReducer, {\n    loading: true,\n    error: null,\n    result: null,\n    offset,\n    limit,\n    refresh: false,\n  });\n\n  useEffect(() => {\n    async function caller(): Promise<void> {\n      try {\n        const response = await fn(state.offset, state.limit);\n\n        dispatch({ type: 'SET_RESULT', result: response });\n      } catch (err) {\n        dispatch({ type: 'SET_ERROR', error: err });\n      }\n    }\n\n    caller();\n  }, [fn, state.offset, state.limit, state.refresh]);\n\n  const setOffsetFn = useCallback((offset: number): void => dispatch({ type: 'SET_OFFSET', offset }), []);\n  const setLimitFn = useCallback((limit: number): void => dispatch({ type: 'SET_LIMIT', limit }), []);\n  const setRefreshFn = useCallback((): void => dispatch({ type: 'SET_REFRESH' }), []);\n\n  return {\n    loading: state.loading,\n    error: state.error,\n    result: state.result,\n    offset: state.offset,\n    limit: state.limit,\n    refresh: state.refresh,\n    setOffset: setOffsetFn,\n    setLimit: setLimitFn,\n    setRefresh: setRefreshFn,\n  };\n}\n\ntype APIHOCFunc<T> = (Component: React.FC<UseApi<T>>) => () => JSX.Element;\n\nexport function WithApi<T>(fn: APIFunc<T>): APIHOCFunc<T> {\n  const apiProps = useApi(fn);\n\n  return function hoc(Component: React.FC<UseApi<T>>) {\n    return function componentWithSpinner(): JSX.Element {\n      if (apiProps.loading) {\n        return <AppSpinner />;\n      }\n\n      return <Component {...apiProps} />;\n    };\n  };\n}\n","import Axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\n\nimport history from '../../../helpers/history';\nimport localStorageService from '../../../helpers/localStorageService';\n\nexport class APIError extends Error {\n    public status: number;\n\n    constructor(message: string, status: number) {\n      super(message);\n\n      this.status = status;\n    }\n}\n\nconst axios: AxiosInstance = Axios.create();\n\naxios.interceptors.response.use(response => response, (error) => {\n  if (!error.response) {\n    return Promise.reject(new APIError('Unable to reach server', 0));\n  }\n\n  if (error.response.status === 401) {\n    localStorageService.clear();\n    history.push('/');\n  }\n\n  if (error.response.data.message) {\n    return Promise.reject(new APIError(error.response.data.message, error.response.status));\n  }\n\n  return Promise.reject(new APIError(`Request failed with ${error.response.status}`, error.response.status));\n});\n\nasync function axiosRequest(options: AxiosRequestConfig): Promise<any> {\n  const response = await axios(options);\n\n  return response.data;\n}\n\nexport default axiosRequest;\n","import { API_URL } from '../../../config/constants';\nimport localStorageService from '../../../helpers/localStorageService';\n\nimport axiosRequest from './axios';\n\nconst baseURL: string = API_URL;\n\nconst getHeader = <T>(header: T): object => {\n  const defaultHeaders: Header = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n    Authorization: '',\n  };\n  const token = localStorageService.get('token');\n\n  if (token) defaultHeaders['Authorization'] = `Bearer ${token}`;\n  if (header) return Object.assign({}, defaultHeaders, header);\n\n  return defaultHeaders;\n};\n\nconst request = <T>({\n  method,\n  url,\n  params,\n  data,\n  header,\n}: RequestPayload): Promise<T> => {\n  return axiosRequest({\n    baseURL: baseURL,\n    method: method,\n    url: url,\n    params: params,\n    data: data,\n    headers: getHeader(header),\n  });\n};\n\nconst httpRequest = {\n  request,\n};\n\nexport default httpRequest;\n\ninterface RequestPayload {\n  url: string;\n  method: 'post' | 'get' | 'put' | 'delete';\n  params?: object;\n  header?: object;\n  data?: object;\n}\n\nexport interface Header {\n  'Content-Type': string;\n  'Access-Control-Allow-Origin': string;\n  Authorization: string;\n}\n","export const API_URL = 'http://localhost:3000';\nexport const PLATFORM = 'fake';\n","import * as jwt from 'jsonwebtoken';\n\nimport localStorageService from '../../helpers/localStorageService';\nimport { User } from '../../shared/contexts/session';\nimport { UserRole } from '../role-management/roles';\n\nimport httpRequest from './config/HttpRequest';\n\ntype TokenInfo = {\n  userId: string;\n  role: UserRole;\n  iat: number;\n  exp: number;\n}\n\nexport type LoginRequest = {\n  email: string;\n  password: string;\n}\n\nexport async function login(data: LoginRequest): Promise<User> {\n  const { token } = await httpRequest.request({\n    url: '/users/authenticate',\n    method: 'post',\n    data: data,\n  });\n\n  const decoded = jwt.decode(token, { json: true }) as TokenInfo;\n\n  localStorageService.set('token', token);\n\n  return {\n    id: decoded.userId,\n    role: decoded.role,\n  };\n}\n","import { UserRole } from '../role-management/roles';\n\nimport httpRequest from './config/HttpRequest';\n\nexport type UserInvitation = {\n  id: string;\n  email: string;\n  role: UserRole;\n}\n\nexport function getUserInvitation(token: string): Promise<UserInvitation> {\n  return httpRequest.request({\n    url: `/users/invitation?token=${encodeURIComponent(token)}`,\n    method: 'get',\n  });\n}\n\nexport type AcceptUserInvitationRequest = {\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport function acceptUserInvitation(token: string, data: AcceptUserInvitationRequest): Promise<void> {\n  return httpRequest.request({\n    url: `/users/accept-invitation?token=${encodeURIComponent(token)}`,\n    method: 'post',\n    data: data,\n  });\n}\n\nexport function acceptClientInvitation(clientId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/accept-invitation`,\n    method: 'post',\n  });\n}\n","import { UserRole, ClientRole } from '../role-management/roles';\n\nimport httpRequest from './config/HttpRequest';\nimport { ListResponse } from './interfaces';\n\nexport type User = {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: UserRole;\n  invitationAccepted: boolean;\n}\n\nexport type SuperUser = {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: UserRole;\n  invitationAccepted: boolean;\n}\n\nexport type ClientUser = {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  clientRole: ClientRole;\n  invitationAccepted: boolean;\n}\n\nexport function getUser(userId: string): Promise<User> {\n  return httpRequest.request({\n    url: `/users/${userId}`,\n    method: 'get',\n  });\n}\n\nexport type CreateSuperUserRequest = {\n  email: string;\n}\n\nexport function createSuperUser(data: CreateSuperUserRequest): Promise<SuperUser> {\n  return httpRequest.request({\n    url: '/users',\n    method: 'post',\n    data: data,\n  });\n}\n\nexport function resendUserInvitation(userId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/users/${userId}/resend-invitation`,\n    method: 'post',\n  });\n}\n\nexport function listSuperUsers(offset = 0, limit = 10): Promise<ListResponse<SuperUser>> {\n  return httpRequest.request({\n    url: `/users?offset=${offset}&limit=${limit}`,\n    method: 'get',\n  });\n}\n\nexport type EditUserRequest = {\n  firstName: string;\n  lastName: string;\n}\n\nexport function editUser(data: EditUserRequest): Promise<User> {\n  return httpRequest.request({\n    url: '/users/me',\n    method: 'put',\n    data: data,\n  });\n}\n\nexport type ChangeUserPasswordRequest = {\n  currentPassword: string;\n  password: string;\n}\n\nexport function changeUserPassword(data: ChangeUserPasswordRequest): Promise<User> {\n  return httpRequest.request({\n    url: '/users/me/password',\n    method: 'put',\n    data: data,\n  });\n}\n\nexport function deleteSuperUser(userId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/users/${userId}`,\n    method: 'delete',\n  });\n}\n\nexport type CreateClientUserRequest = {\n  email: string;\n  clientRole: ClientRole;\n}\n\nexport function createClientUser(data: CreateClientUserRequest, clientId: string): Promise<ClientUser> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/users`,\n    method: 'post',\n    data: data,\n  });\n}\n\nexport function resendClientUserInvitation(clientId: string, userId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/users/${userId}/resend-invitation`,\n    method: 'post',\n  });\n}\n\nexport type EditClientUserRequest = {\n  clientRole: ClientRole;\n}\n\nexport function editClientUser(data: EditClientUserRequest, clientId: string, userId: string): Promise<ClientUser> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/users/${userId}`,\n    method: 'put',\n    data: data,\n  });\n}\n\nexport function deleteClientUser(clientId: string, userId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/users/${userId}`,\n    method: 'delete',\n  });\n}\n\nexport function listClientUsers(clientId: string, offset = 0, limit = 10): Promise<ListResponse<ClientUser>> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/users?offset=${offset}&limit=${limit}`,\n    method: 'get',\n  });\n}\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\ntype InputFieldProps<T> = {\n  type: string;\n  name: string;\n  value?: T;\n  label?: string;\n  placeholder?: string;\n  disabled?: boolean;\n}\n\ntype TextFieldProps = InputFieldProps<string> & {\n  type: 'text' | 'email' | 'password';\n  value?: string;\n}\n\ntype NumberFieldProps = InputFieldProps<number> & {\n  type: 'number';\n  value?: number;\n  min?: number;\n  max?: number;\n}\n\nexport function InputField<T>(props: TextFieldProps | NumberFieldProps): JSX.Element {\n  const [field, meta] = useField<T>(props);\n\n  const value = ((field.value || props.value || '') as string).toString();\n\n  return (\n    <Form.Group>\n      {props.label && <Form.Label>{props.label}</Form.Label>}\n      <Form.Control\n        {...field}\n        {...props}\n        value={value}\n        isInvalid={!!(meta.touched && meta.error)}\n      />\n      {meta.touched && meta.error ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {meta.error}\n        </Form.Control.Feedback>\n      ) : null}\n    </Form.Group>\n  );\n}\n","import { Formik, Form as FormikForm } from 'formik';\nimport queryString from 'query-string';\nimport React, { useCallback, useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { useApi } from '../../hooks/api';\nimport { login } from '../../services/api-services/auth';\nimport { APIError } from '../../services/api-services/config/axios';\nimport { getUserInvitation, acceptUserInvitation } from '../../services/api-services/invitation';\nimport { getUser } from '../../services/api-services/user';\nimport { InputField } from '../../shared/components/formik/InputField';\nimport { SessionContext } from '../../shared/contexts/session';\nimport { ToastContext } from '../../shared/contexts/toast';\nimport { LoginFormState } from '../login-form/login-form';\n\ntype AcceptUserInvitationForm = {\n  firstName: string;\n  lastName: string;\n  password: string;\n  confirmPassword: string;\n}\n\nfunction AcceptUserInvitation(): JSX.Element {\n  const setToast = useContext(ToastContext);\n  const [, dispatchSession] = useContext(SessionContext);\n  const location = useLocation();\n  const history = useHistory();\n\n  const query = queryString.parse(location.search);\n  const token = query.token as string || '';\n\n  const fn = useCallback(() => getUserInvitation(token), [token]);\n  const { error, loading, result } = useApi(fn);\n\n  if (loading) {\n    return <span>Please wait...</span>;\n  }\n\n  if (error) {\n    if (error instanceof APIError && error.status === 409) {\n      history.push('/login', {\n        message: 'Your account is already setup. Please login.',\n      } as LoginFormState);\n\n      return <span>Please wait...</span>;\n    }\n\n    return <span><b>Error:</b> {error.message}</span>;\n  }\n\n  if (!result) {\n    return <span>Sorry, we got unexpected result from the server.</span>;\n  }\n\n  const initialValues: AcceptUserInvitationForm = {\n    firstName: '',\n    lastName: '',\n    password: '',\n    confirmPassword: '',\n  };\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().trim().min(1).max(50).required('Required').label('First name'),\n    lastName: Yup.string().trim().min(1).max(50).required('Required').label('Last name'),\n    password: Yup.string().required('Required').label('Password'),\n    confirmPassword: Yup.string().required('Required').oneOf([Yup.ref('password'), null], 'Password must match').label('Confirm Password'),\n  });\n\n  const onSubmit = async (value: AcceptUserInvitationForm): Promise<void> => {\n    try {\n      const { confirmPassword, ...payload } = value;\n\n      await acceptUserInvitation(token, payload);\n\n      const user = await login({\n        email: result.email,\n        password: confirmPassword,\n      });\n      const profile = await getUser('me');\n\n      dispatchSession({ type: 'SET_USER', user, profile });\n      history.push('/');\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h4>Account Setup</h4>\n      <p>Hi {result.email}, welcome to DTech!</p>\n      <p>Please complete the following form to create an account:</p>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"text\" name=\"firstName\" label=\"First name\" disabled={isSubmitting} />\n            <InputField type=\"text\" name=\"lastName\" label=\"Last name\" disabled={isSubmitting} />\n            <InputField type=\"password\" name=\"password\" label=\"Password\" disabled={isSubmitting} />\n            <InputField type=\"password\" name=\"confirmPassword\" label=\"Confirm Password\" disabled={isSubmitting} />\n            <Button type=\"submit\" disabled={isSubmitting}>Go</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n}\n\nexport default AcceptUserInvitation;\n","export enum UserRole {\n  ADMIN = 'ADMIN',\n  CLIENT = 'CLIENT',\n}\n\nexport const UserRoleText: { [x in UserRole]: string } = {\n  ADMIN: 'Super Admin',\n  CLIENT: 'Client User',\n};\n\nexport enum ClientRole {\n  ADMIN = 'ADMIN',\n  ANALYST = 'ANALYST',\n  VETTER = 'VETTER',\n}\n\nexport const ClientRoleText: { [x in ClientRole]: string } = {\n  ADMIN: 'Administrator',\n  ANALYST: 'Analyst',\n  VETTER: 'Vetter',\n};\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router';\n\nimport { UserRole } from '../../services/role-management/roles';\nimport { SessionContext } from '../../shared/contexts/session';\nimport { ToastContext } from '../../shared/contexts/toast';\n\nfunction LandingContainer(): JSX.Element | null {\n  const setToast = useContext(ToastContext);\n  const [{ user, client }, dispatchSession] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n\n  if (localStorage.getItem('token') === null) {\n    dispatchSession({ type: 'LOGOUT' });\n    setToast({ type: 'error', message: 'Session expired. Please login again.' });\n  }\n\n  if (user.role === UserRole.ADMIN) {\n    return <Redirect to=\"/dashboard\" />;\n  } else if (user.role === UserRole.CLIENT) {\n    if (client) {\n      return <Redirect to={`/clients/${client.id}/dashboard`} />;\n    } else {\n      return <Redirect to=\"/clients\" />;\n    }\n  }\n\n  return null;\n}\n\nexport default LandingContainer;\n","import { ClientRole } from '../role-management/roles';\n\nimport httpRequest from './config/HttpRequest';\nimport { ListResponse } from './interfaces';\n\nexport type Client = {\n  id: string;\n  name: string;\n  settings: {\n    userLimit: number;\n    targetLimit: number;\n  };\n}\n\nexport type UserClient = Client & {\n  clientRole: ClientRole;\n  invitationAccepted: boolean;\n}\n\nexport function isUserClient(client: Client | UserClient): client is UserClient {\n  return (client as UserClient).clientRole !== undefined;\n}\n\nexport type CreateClientRequest = Omit<Client, 'id'>;\n\nexport async function createClient(data: CreateClientRequest): Promise<Client> {\n  return httpRequest.request({\n    url: '/clients',\n    method: 'post',\n    data: data,\n  });\n}\n\nexport async function listClients(offset = 0, limit = 10): Promise<ListResponse<Client>> {\n  return httpRequest.request({\n    url: `/clients?offset=${offset}&limit=${limit}`,\n    method: 'get',\n  });\n}\n\nexport async function listUserClients(filter: 'all' | 'accepted' | 'pending', offset = 0, limit = 10): Promise<ListResponse<UserClient>> {\n  return httpRequest.request({\n    url: `/clients?filter=${filter}&offset=${offset}&limit=${limit}`,\n    method: 'get',\n  });\n}\n\nexport type EditClientRequest = CreateClientRequest;\n\nexport async function editClient(data: EditClientRequest, clientId: string): Promise<Client> {\n  return httpRequest.request({\n    url: `/clients/${clientId}`,\n    method: 'put',\n    data: data,\n  });\n}\n","import { Formik, Form as FormikForm } from 'formik';\nimport React, { useContext } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\nimport { useHistory, useLocation } from 'react-router';\nimport * as Yup from 'yup';\n\nimport { LoginRequest, login } from '../../services/api-services/auth';\nimport { listUserClients } from '../../services/api-services/client';\nimport { getUser } from '../../services/api-services/user';\nimport { UserRole } from '../../services/role-management/roles';\nimport { InputField } from '../../shared/components/formik/InputField';\nimport { SessionContext } from '../../shared/contexts/session';\nimport { ToastContext} from '../../shared/contexts/toast';\n\nexport type LoginFormState = {\n  message?: string;\n  redirect?: string;\n}\n\nfunction LoginForm(): JSX.Element {\n  const setToast = useContext(ToastContext);\n  const [, dispatchSession] = useContext(SessionContext);\n  const history = useHistory();\n  const location = useLocation<LoginFormState>();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email().required('Required').label('Email'),\n    password: Yup.string().required('Required').label('Password'),\n  });\n\n  const onSubmit = async (credentials: LoginRequest): Promise<void> => {\n    try {\n      const user = await login(credentials);\n      const profile = await getUser('me');\n\n      if (user.role === UserRole.CLIENT) {\n        const { total, data: [client] } = await listUserClients('all');\n\n        dispatchSession({ type: 'SET_USER', user, profile });\n\n        if (total === 1 && client.invitationAccepted) {\n          dispatchSession({\n            type: 'SET_CLIENT',\n            client: {\n              id: client.id,\n              name: client.name,\n              role: client.clientRole,\n            },\n          });\n\n          history.push('/');\n\n          return;\n        } else {\n          history.push('/clients');\n\n          return;\n        }\n      }\n\n      dispatchSession({ type: 'SET_USER', user, profile });\n\n      const redirectTo = (location.state && location.state.redirect) || '/';\n\n      history.push(redirectTo);\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h4>Login</h4>\n      {location.state && location.state.message && <Alert variant=\"info\">{location.state.message}</Alert>}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <FormikForm>\n          <InputField type=\"email\" placeholder=\"Email\" name=\"email\" />\n          <InputField type=\"password\" placeholder=\"Password\" name=\"password\" />\n          <Button size=\"lg\" block type=\"submit\" className=\"bg-blue\">Login</Button>\n        </FormikForm>\n      </Formik>\n    </React.Fragment>\n  );\n}\n\nexport default LoginForm;\n","import httpRequest from './config/HttpRequest';\nimport { ListResponse, Scope } from './interfaces';\n\nexport type Keywordlist = {\n  id: string;\n  name: string;\n  keywords: string[];\n}\n\nexport type KeywordlistWithCount = {\n  id: string;\n  name: string;\n  keywordCount: number;\n  fewKeywords: string[];\n}\n\nexport type ClientKeywordlist = Keywordlist & {\n  scope: Scope;\n}\n\nexport type ClientKeywordlistWithCount = KeywordlistWithCount & {\n  scope: Scope;\n}\n\nexport function isClientKeywordlist(keywordlist: KeywordlistWithCount | ClientKeywordlistWithCount): keywordlist is ClientKeywordlistWithCount {\n  return (keywordlist as ClientKeywordlistWithCount).scope !== undefined;\n}\n\nexport type CreateKeywordlistRequest = Omit<Keywordlist, 'id'>;\n\nexport async function createKeywordlist(data: CreateKeywordlistRequest): Promise<Keywordlist> {\n  return httpRequest.request({\n    url: '/keywordlists',\n    method: 'post',\n    data: data,\n  });\n}\n\nexport type EditKeywordlistRequest = CreateKeywordlistRequest;\n\nexport async function editKeywordlist(data: EditKeywordlistRequest, id: string): Promise<Keywordlist> {\n  return httpRequest.request({\n    url: `/keywordlists/${id}`,\n    method: 'put',\n    data: data,\n  });\n}\n\nexport async function listKeywordlists(offset = 0, limit = 10): Promise<ListResponse<KeywordlistWithCount>> {\n  return httpRequest.request({\n    url: `/keywordlists?offset=${offset}&limit=${limit}`,\n    method: 'get',\n  });\n}\n\nexport async function getKeywordlistById(id: string): Promise<Keywordlist> {\n  return httpRequest.request<Keywordlist>({\n    url: `/keywordlists/${id}`,\n    method: 'get',\n  });\n}\n\nexport async function deleteKeywordlist(id: string): Promise<void> {\n  httpRequest.request({\n    url: `/keywordlists/${id}`,\n    method: 'delete',\n  });\n}\n\nexport type CreateClientKeywordlistRequest = CreateKeywordlistRequest & {\n  isUserSpecific: boolean;\n}\n\nexport async function createClientKeywordlist(data: CreateKeywordlistRequest, clientId: string): Promise<Keywordlist> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/keywordlists`,\n    method: 'post',\n    data: data,\n  });\n}\n\nexport type EditClientKeywordlistRequest = Omit<CreateClientKeywordlistRequest, 'isUserSpecific'>;\n\nexport async function editClientKeywordlist(data: EditClientKeywordlistRequest, clientId: string, keywordlistId: string): Promise<Keywordlist> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/keywordlists/${keywordlistId}`,\n    method: 'put',\n    data: data,\n  });\n}\n\nexport async function listClientKeywordlists(clientId: string, offset = 0, limit = 10, query = ''): Promise<ListResponse<ClientKeywordlistWithCount>> {\n  let url = `/clients/${clientId}/keywordlists?offset=${offset}&limit=${limit}`;\n  if (query !== '') {\n    url += `&q=${query}`;\n  }\n\n  return httpRequest.request({\n    url,\n    method: 'get',\n  });\n}\n\nexport async function getClientKeywordlistById(clientId: string, keywordlistId: string): Promise<ClientKeywordlist> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/keywordlists/${keywordlistId}`,\n    method: 'get',\n  });\n}\n\nexport async function deleteClientKeywordlist(clientId: string, keywordlistId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/keywordlists/${keywordlistId}`,\n    method: 'delete',\n  });\n}\n","import httpRequest from './config/HttpRequest';\nimport { ListResponse, Scope } from './interfaces';\nimport { Target } from './target';\n\nexport type Tag = {\n  id: string;\n  name: string;\n  targets: Target[];\n}\n\nexport type TagWithCount = {\n  id: string;\n  name: string;\n  targetCount: number;\n  fewTargets: Target[];\n}\n\nexport type ClientTag = Tag & {\n  scope: Scope;\n}\n\nexport type ClientTagWithCount = TagWithCount & {\n  scope: Scope;\n}\n\nexport function isClientTag(tag: TagWithCount | ClientTagWithCount): tag is ClientTagWithCount {\n  return (tag as ClientTagWithCount).scope !== undefined;\n}\n\nexport type CreateTagRequest = {\n  name: string;\n  targetIds: string[];\n}\n\nexport async function createTag(data: CreateTagRequest): Promise<Tag> {\n  return httpRequest.request({\n    url: '/tags',\n    method: 'post',\n    data,\n  });\n}\n\nexport type EditTagRequest = CreateTagRequest;\n\nexport async function editTag(data: EditTagRequest, id: string): Promise<Tag> {\n  return httpRequest.request({\n    url: `/tags/${id}`,\n    method: 'put',\n    data: data,\n  });\n}\n\nexport async function listTags(offset = 0, limit = 10): Promise<ListResponse<TagWithCount>> {\n  return httpRequest.request({\n    url: `/tags?offset=${offset}&limit=${limit}`,\n    method: 'get',\n  });\n}\n\nexport async function getTagById(id: string): Promise<Tag> {\n  return httpRequest.request<Tag>({\n    url: `/tags/${id}`,\n    method: 'get',\n  });\n}\n\nexport async function deleteTag(id: string): Promise<void> {\n  return httpRequest.request({\n    url: `/tags/${id}`,\n    method: 'delete',\n  });\n}\n\nexport type CreateClientTagRequest = CreateTagRequest & {\n  isUserSpecific: boolean;\n}\n\nexport async function createClientTag(data: CreateClientTagRequest, clientId: string): Promise<Tag> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/tags`,\n    method: 'post',\n    data,\n  });\n}\n\nexport type EditClientTagRequest = Omit<CreateClientTagRequest, 'isUserSpecific'>;\n\nexport async function editClientTag(data: EditClientTagRequest, clientId: string, tagId: string): Promise<Tag> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/tags/${tagId}`,\n    method: 'put',\n    data: data,\n  });\n}\n\nexport async function listClientTags(clientId: string, offset = 0, limit = 10, query = ''): Promise<ListResponse<ClientTagWithCount>> {\n  let url = `/clients/${clientId}/tags?offset=${offset}&limit=${limit}`;\n  if (query !== '') {\n    url += `&q=${query}`;\n  }\n\n  return httpRequest.request({\n    url,\n    method: 'get',\n  });\n}\n\nexport async function getClientTagById(clientId: string, tagId: string): Promise<ClientTag> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/tags/${tagId}`,\n    method: 'get',\n  });\n}\n\nexport async function deleteClientTag(clientId: string, tagId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/tags/${tagId}`,\n    method: 'delete',\n  });\n}\n","import httpRequest from './config/HttpRequest';\nimport { ListResponse } from './interfaces';\n\nexport type Target = {\n    id: string;\n    platform: string;\n    identifier: string;\n    profile: TargetProfile;\n}\n\nexport type TargetLookup = Target & {\n    id: never;\n    profile: TargetProfile & {\n      dataStatus: never;\n    };\n}\n\ntype TargetProfile = {\n    name: string;\n    handle: string;\n    photoURL: string;\n    dataStatus: string;\n}\n\nexport type SearchTargetRequest = {\n  platform: string;\n  handle: string;\n}\n\nexport async function searchTarget(data: SearchTargetRequest): Promise<TargetLookup> {\n  return httpRequest.request({\n    url: `/targets/search?platform=${data.platform}&handle=${data.handle}`,\n    method: 'get',\n    data,\n  });\n}\n\ntype AddTargetRequest = {\n  platform: string;\n  identifier: string;\n}\n\nexport async function addTarget(data: AddTargetRequest): Promise<Target> {\n  return httpRequest.request({\n    url: '/targets',\n    method: 'post',\n    data,\n  });\n}\n\nexport async function listTargets(offset = 0, limit = 10, query = ''): Promise<ListResponse<Target>> {\n  let url = `/targets?offset=${offset}&limit=${limit}`;\n  if (query !== '') {\n    url += `&q=${query}`;\n  }\n\n  return httpRequest.request({\n    url,\n    method: 'get',\n  });\n}\n\nexport async function deleteTarget(id: string): Promise<void> {\n  return httpRequest.request({\n    url: `/targets/${id}`,\n    method: 'delete',\n  });\n}\n\nexport async function addClientTarget(data: AddTargetRequest, clientId: string): Promise<Target> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/targets`,\n    method: 'post',\n    data,\n  });\n}\n\nexport async function listClientTargets(clientId: string, offset = 0, limit = 10, query = ''): Promise<ListResponse<Target>> {\n  let url = `/clients/${clientId}/targets?offset=${offset}&limit=${limit}`;\n  if (query !== '') {\n    url += `&q=${query}`;\n  }\n\n  return httpRequest.request({\n    url,\n    method: 'get',\n  });\n}\n\nexport async function unassignClientTarget(clientId: string, targetId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/targets/${targetId}`,\n    method: 'delete',\n  });\n}\n","import * as FAS from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport './ActionButtons.scss';\n\ntype ButtonProps = {\n  type?: 'button' | 'submit' | 'reset';\n  title?: string;\n  disabled?: boolean;\n  onClick?: () => void;\n}\n\nexport function AddButton(props: ButtonProps): JSX.Element {\n  return (\n    <Button className=\"button-icon\" {...props}>\n      <FontAwesomeIcon icon={FAS.faPlus} />\n    </Button>\n  );\n}\n\nexport function CancelButton(props: ButtonProps): JSX.Element {\n  return (\n    <Button className=\"button-icon\" variant=\"danger\" {...props}>\n      <FontAwesomeIcon icon={FAS.faTimes} />\n    </Button>\n  );\n}\n\nexport function DeleteButton(props: ButtonProps): JSX.Element {\n  return (\n    <Button className=\"button-icon\" variant=\"danger\" {...props}>\n      <FontAwesomeIcon icon={FAS.faTrash} />\n    </Button>\n  );\n}\n\nexport function EditButton(props: ButtonProps): JSX.Element {\n  return (\n    <Button className=\"button-icon\" {...props}>\n      <FontAwesomeIcon icon={FAS.faPencilAlt} />\n    </Button>\n  );\n}\n\nexport function SaveButton(props: ButtonProps): JSX.Element {\n  return (\n    <Button className=\"button-icon\" {...props}>\n      <FontAwesomeIcon icon={FAS.faCheck} />\n    </Button>\n  );\n}\n\nexport function LinkButton(props: ButtonProps): JSX.Element {\n  return (\n    <Button className=\"button-icon\" {...props}>\n      <FontAwesomeIcon icon={FAS.faExternalLinkAlt} />\n    </Button>\n  );\n}\n\nexport function EmailButton(props: ButtonProps): JSX.Element {\n  return (\n    <Button className=\"button-icon\" {...props}>\n      <FontAwesomeIcon icon={FAS.faEnvelopeOpen} />\n    </Button>\n  );\n}\n","import React from 'react';\n\nimport { AddButton } from './ActionButtons';\n\ntype EntityStatBoxPros = {\n  entity: string;\n  count?: number;\n  onAdd?: () => void;\n};\n\nexport function EntityStatBox(props: EntityStatBoxPros): JSX.Element {\n  const { entity, count, onAdd } = props;\n\n  const notImplemented = (): void => {\n    alert('Not implemented yet');\n  };\n  const onClick = onAdd || notImplemented;\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>{entity}</h4>\n      <div className=\"space-between-y\">\n        <span>{count !== undefined ? count : '-'} {entity}</span>\n        <AddButton onClick={onClick} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\ntype InlineListMoreProps = React.PropsWithChildren<{\n  total: number;\n  limit: number;\n}>;\n\nexport function InlineListMore(props: InlineListMoreProps): JSX.Element {\n  const { children, total } = props;\n  let { limit } = props;\n\n  const output: React.ReactNode[] = [];\n\n  const elms = React.Children.toArray(children);\n  if (limit > elms.length) {\n    limit = elms.length;\n  }\n\n  const slicedElms = elms.slice(0, limit);\n\n  if (slicedElms.length < total) {\n    slicedElms.push(`${total - slicedElms.length} more...`);\n  }\n\n  for (const key in slicedElms) {\n    const i = parseInt(key);\n\n    const elm = slicedElms[i];\n\n    // if list is more than one item and this is the last item, prefix with 'and '\n    if (slicedElms.length > 1 && i === slicedElms.length - 1) output.push('and ');\n    // output the item\n    output.push(elm);\n    // if list is more than 2 items, append a comma to all but the last item\n    if (slicedElms.length > 2 && i < slicedElms.length - 1) output.push(',');\n    // if list is more than 1 item, append a space to all but the last item\n    if (slicedElms.length > 1 && i < slicedElms.length - 1) output.push(' ');\n  }\n\n  return <>{output}</>;\n}\n","import * as FAS from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport { Scope } from '../../services/api-services/interfaces';\n\ntype ScopeIconProps = {\n  scope: Scope;\n}\n\nexport function ScopeIcon(props: ScopeIconProps): JSX.Element {\n  const { scope } = props;\n\n  let title = undefined;\n  let icon = FAS.faGlobeAmericas;\n\n  switch (scope) {\n  case 'global':\n    title = 'Global';\n    icon = FAS.faGlobeAmericas;\n    break;\n  case 'client':\n    title = 'Visible to all users';\n    icon = FAS.faUsers;\n    break;\n  case 'user':\n    title = 'Visible only to me';\n    icon = FAS.faUser;\n    break;\n  }\n\n  return (\n    <FontAwesomeIcon title={title} icon={icon} style={{width: '25px'}} />\n  );\n}\n","import * as FAS from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport { KeywordlistWithCount, ClientKeywordlistWithCount, isClientKeywordlist } from '../../../services/api-services/keywordlist';\nimport { InlineListMore } from '../InlineListMore';\nimport { ScopeIcon } from '../ScopeIcon';\n\nimport './KeywordlistView.scss';\n\ntype KeywordlistViewProps = {\n    keywordlist: KeywordlistWithCount | ClientKeywordlistWithCount;\n    size?: 'lg' | 'md' | 'sm';\n    keywordLimit?: number;\n};\n\nexport function KeywordlistView({ keywordlist, size = 'lg', keywordLimit = 2 }: KeywordlistViewProps): JSX.Element {\n  const { keywordCount, fewKeywords } = keywordlist;\n\n  return (\n    <div className={`keywordlist-view keywordlist-view-${size}`}>\n      {isClientKeywordlist(keywordlist) ? <ScopeIcon scope={keywordlist.scope} /> : null}\n      <span className=\"keywordlist-name\">{keywordlist.name}</span>\n      {(size === 'lg' || size === 'md') &&\n        <div className=\"keywords\">\n          <FontAwesomeIcon title=\"Keywords\" icon={FAS.faList} style={{width: '25px'}} />\n          <InlineListMore total={keywordCount} limit={keywordLimit}>\n            {fewKeywords}\n          </InlineListMore>\n        </div>\n      }\n    </div>\n  );\n}\n","import React, { useCallback, useContext } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\n\nimport { WithApi } from '../../hooks/api';\nimport { ListResponse } from '../../services/api-services/interfaces';\nimport { listClientKeywordlists, ClientKeywordlistWithCount } from '../../services/api-services/keywordlist';\nimport { listClientTags } from '../../services/api-services/tag';\nimport { listClientTargets } from '../../services/api-services/target';\nimport { listClientUsers } from '../../services/api-services/user';\nimport { ClientRole, UserRole } from '../../services/role-management/roles';\nimport { EntityStatBox } from '../../shared/components/EntityStatBox';\nimport { KeywordlistView } from '../../shared/components/KeywordlistView/KeywordlistView';\nimport { SessionContext } from '../../shared/contexts/session';\n\nfunction KeywordlistTableBox(props: { result: ListResponse<ClientKeywordlistWithCount> }): JSX.Element {\n  const { result } = props;\n\n  return (\n    <div>\n      <h4>Keyword Lists</h4>\n      <div className=\"space-between-y\">\n        <Table responsive>\n          <thead>\n            <tr>\n              <th>Name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {result.data.map((keywordlist, key) => (\n              <tr key={key}>\n                <td><KeywordlistView keywordlist={keywordlist} /></td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nfunction ClientDashboard(): JSX.Element {\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n  if (!client) {\n    throw new Error('Client expected');\n  }\n\n  const history = useHistory();\n\n  const _listClientUsers = useCallback(() => listClientUsers(client.id), [client.id]);\n  const _listClientKeywordlists = useCallback(() => listClientKeywordlists(client.id), [client.id]);\n  const _listClientTargets = useCallback(() => listClientTargets(client.id), [client.id]);\n  const _listClientTags = useCallback(() => listClientTags(client.id), [client.id]);\n\n  const boxes: Array<() => JSX.Element> = [];\n\n  if (user.role === UserRole.ADMIN || (user.role === UserRole.CLIENT && client.role === ClientRole.ADMIN)) {\n    const withUserList = WithApi(_listClientUsers);\n\n    boxes.push(withUserList(({ result }) => (\n      <EntityStatBox\n        entity=\"Users\"\n        count={result?.total}\n        onAdd={(): void => history.push(`/clients/${client.id}/users`)}\n      />\n    )));\n  }\n\n  const withKeywordlists = WithApi(_listClientKeywordlists);\n\n  boxes.push((withKeywordlists(({ result }) => (\n    <EntityStatBox\n      entity=\"Keyword Lists\"\n      count={result?.total}\n      onAdd={(): void => history.push(`/clients/${client.id}/keywordlists`)}\n    />\n  ))));\n\n  const withTargets = WithApi(_listClientTargets);\n\n  boxes.push((withTargets(({ result }) => (\n    <EntityStatBox\n      entity=\"Targets\"\n      count={result?.total}\n      onAdd={(): void => history.push(`/clients/${client.id}/targets`)}\n    />\n  ))));\n\n  const withTags = WithApi(_listClientTags);\n\n  boxes.push((withTags(({ result }) => (\n    <EntityStatBox\n      entity=\"Tags\"\n      count={result?.total}\n      onAdd={(): void => history.push(`/clients/${client.id}/tags`)}\n    />\n  ))));\n\n  if (user.role === UserRole.CLIENT) {\n    boxes.push(() => <EntityStatBox entity=\"Alerts\" />);\n  }\n\n  const KeywordlistTable = withKeywordlists(({ error, result }) => {\n    if (!result) {\n      return <div>{error?.message}</div>;\n    }\n\n    return <KeywordlistTableBox result={result} />;\n  });\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col xs=\"5\">\n          { boxes.map((Box, i) => <Box key={i} />)}\n        </Col>\n        <Col xs={{ span: 5, offset: 1 }} className=\"shadow-box\">\n          <KeywordlistTable />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default ClientDashboard;\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\ntype CheckboxProps = {\n  placeholder?: string;\n  label?: string;\n  name: string;\n  value?: boolean;\n  disabled?: boolean;\n}\n\nexport function Checkbox(props: CheckboxProps): JSX.Element {\n  const [field, meta] = useField({\n    placeholder: props.placeholder,\n    name: props.name,\n  });\n\n  return (\n    <Form.Group>\n      <Form.Check\n        checked={field.value}\n        id={field.name}\n        {...field}\n        {...props}\n        isInvalid={!!(meta.touched && meta.error)}\n      />\n      {meta.touched && meta.error ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {meta.error}\n        </Form.Control.Feedback>\n      ) : null}\n    </Form.Group>\n  );\n}\n","import { useField } from 'formik';\nimport React, { useState, KeyboardEvent, CSSProperties } from 'react';\nimport { Form } from 'react-bootstrap';\nimport ReactSelect, { ValueType } from 'react-select';\n\nimport './ChipsField.scss';\n\ntype ChipValue = {\n  label: string;\n  value: string;\n}\n\ntype ChipsFieldProps = {\n  label: string;\n  name: string;\n  placeholder?: string;\n  disabled?: boolean;\n}\n\nexport function ChipsField(props: ChipsFieldProps): JSX.Element {\n  const [field, meta, helper] = useField<string[]>(props);\n  const [inputValue, setInputValue] = useState('');\n\n  const values: ValueType<ChipValue[]> = (field.value || []).map((value) => ({\n    label: value,\n    value,\n  }));\n\n  const onChange = (value: ValueType<ChipValue>): void => {\n    helper.setValue(((value || []) as ChipValue[]).map((item) => item.value));\n  };\n\n  const onFocus = (): void => helper.setTouched(true);\n\n  const onBlur = (e: React.FocusEvent): void => {\n    if (inputValue && !values.map((item) => item.value).includes(inputValue)) {\n      onChange([...values, { label: inputValue, value: inputValue }]);\n    }\n\n    setInputValue('');\n    field.onBlur(e);\n  };\n\n  const onInputChange = (value: string): void => {\n    setInputValue(value);\n  };\n\n  const handleKeyDown = (event: KeyboardEvent): void => {\n    if (!inputValue) {\n      return;\n    }\n\n    switch (event.key) {\n    case 'Enter':\n    case 'Tab':\n      if (inputValue && !values.map((item) => item.value).includes(inputValue)) {\n        onChange([...values, { label: inputValue, value: inputValue }]);\n      }\n\n      setInputValue('');\n      event.preventDefault();\n    }\n  };\n\n  const components = {\n    DropdownIndicator: null,\n  };\n\n  return (\n    <Form.Group className=\"multi-select-field\">\n      <Form.Label>{props.label}</Form.Label>\n      <ReactSelect\n        isMulti\n        isClearable\n        value={values}\n        inputValue={inputValue}\n        placeholder={props.placeholder || `Add ${props.label}...`}\n        onChange={onChange}\n        onInputChange={onInputChange}\n        onKeyDown={handleKeyDown}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        menuIsOpen={false}\n        className=\"is-invalid chip-view\"\n        components={components}\n        isDisabled={props.disabled}\n        styles={{\n          control: (base, state): CSSProperties => ({\n            ...base,\n            transition: 'border-color .15s ease-in-out,box-shadow .15s ease-in-out',\n            ...(state.isFocused && {\n              boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\n              borderColor: '#80bdff',\n              ':hover': {\n                borderColor: '#80bdff',\n              },\n            }),\n          }),\n        }}\n      />\n      {meta.touched && meta.error ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {meta.error}\n        </Form.Control.Feedback>\n      ) : null}\n    </Form.Group>\n  );\n}\n","import { Formik, Form as FormikForm, FormikHelpers } from 'formik';\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport * as Yup from 'yup';\n\nimport { getClientKeywordlistById, CreateClientKeywordlistRequest, createClientKeywordlist, editClientKeywordlist, EditClientKeywordlistRequest } from '../../../services/api-services/keywordlist';\nimport { UserRole, ClientRole } from '../../../services/role-management/roles';\nimport { Checkbox } from '../../../shared/components/formik/Checkbox';\nimport { ChipsField } from '../../../shared/components/formik/ChipsField';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext} from '../../../shared/contexts/toast';\n\ntype KeywordlistForm = {\n  name: string;\n  keywords: string[];\n  isUserSpecific: boolean;\n};\n\ninterface CreateKeywordlistProps {\n  onUpdate?: () => void;\n}\n\nfunction CreateClientKeywordlistComponent(props: CreateKeywordlistProps): JSX.Element {\n  const { onUpdate } = props;\n  const setToast = useContext(ToastContext);\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n  if (!client) {\n    throw new Error('Client expected');\n  }\n\n  const { clientId, editId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const allowOnlyUserSpecific = user.role === UserRole.CLIENT && !!client.role && [ClientRole.ANALYST, ClientRole.VETTER].includes(client.role);\n  const allowOnlyClientSpecific = user.role === UserRole.ADMIN;\n\n  const [initialValues, setInitialValues] = useState({\n    name: '',\n    keywords: [] as string[],\n    isUserSpecific: allowOnlyUserSpecific,\n  });\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n    keywords: Yup.array(\n      Yup.string().trim().min(3).max(50).label('Keyword'),\n    ).required('Required').label('Keyword list'),\n    isUserSpecific: Yup.boolean().required('Required').label('User specific'),\n  });\n\n  let showUserSpecific = false;\n  if (!editId) {\n    showUserSpecific = !(allowOnlyClientSpecific || allowOnlyUserSpecific);\n  }\n\n  useEffect(() => {\n    async function fetchData(editId: string): Promise<void> {\n      if (!clientId) {\n        throw new Error('Client ID not found');\n      }\n\n      try {\n        const response = await getClientKeywordlistById(clientId, editId);\n\n        setInitialValues({\n          name: response.name,\n          keywords: response.keywords,\n          isUserSpecific: response.scope === 'user',\n        });\n      } catch (err) {\n        setToast({ type: 'error', message: err.message });\n      }\n    }\n\n    if (editId) {\n      fetchData(editId);\n    }\n  }, [clientId, editId, setToast]);\n\n  const onSubmit = async (values: KeywordlistForm, { resetForm }: FormikHelpers<KeywordlistForm>): Promise<void> => {\n    try {\n      if (editId) {\n        const payload: EditClientKeywordlistRequest = {\n          name: values.name,\n          keywords: values.keywords,\n        };\n\n        await editClientKeywordlist(payload, clientId, editId);\n\n        setToast({ type: 'success', message: 'Keyword list edited successfully' });\n      } else {\n        const payload: CreateClientKeywordlistRequest = {\n          name: values.name,\n          keywords: values.keywords,\n          isUserSpecific: values.isUserSpecific,\n        };\n\n        await createClientKeywordlist(payload, clientId);\n\n        resetForm();\n        setToast({ type: 'success', message: 'Keyword list created successfully' });\n      }\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>{editId ? 'Edit' : 'Add'} Keyword List</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"text\" name=\"name\" label=\"Name\" disabled={isSubmitting} />\n            <ChipsField name=\"keywords\" label=\"Keywords\" disabled={isSubmitting} />\n            {showUserSpecific && (\n              <Checkbox name=\"isUserSpecific\" label=\"Visible only to me\" disabled={isSubmitting} />\n            )}\n            <Button type=\"submit\" disabled={isSubmitting}>Save</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreateClientKeywordlistComponent;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\ntype DeleteModalProps<T> = {\n  entity: T;\n  show: boolean;\n  title: string;\n  message: (entity: T) => JSX.Element;\n  confirmValue?: (entity: T) => string;\n  onConfirm: () => Promise<void>;\n  onClose: () => void;\n}\n\nfunction DeleteModal<T>(props: DeleteModalProps<T>): JSX.Element {\n  const { show, title, message, onConfirm, onClose, confirmValue, entity } = props;\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [canDelete, setCanDelete] = useState(true);\n  const [confirmInput, setConfirmInput] = useState<string>();\n\n  useEffect(() => {\n    if (!confirmValue) {\n      return;\n    }\n\n    setCanDelete(confirmInput === confirmValue(entity));\n  }, [confirmInput, confirmValue, entity]);\n\n  const _onConfirm = useCallback(async () => {\n    setIsSubmitting(true);\n    await onConfirm();\n    setIsSubmitting(false);\n  }, [setIsSubmitting, onConfirm]);\n\n  let confirmBox = null;\n  if (confirmValue) {\n    confirmBox = (\n      <React.Fragment>\n        <br /><br />\n        Please type <strong>{confirmValue(entity)}</strong> to confirm:\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder={`Type ${confirmValue(entity)} here...`}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>): void => setConfirmInput(e.target.value)}\n          />\n        </Form.Group>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Modal show={!!show} onHide={onClose}>\n      <Modal.Header>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {message(entity)}\n        {confirmBox}\n      </Modal.Body>\n      <Modal.Footer>\n        <React.Fragment>\n          <Button variant=\"primary\" onClick={onClose} disabled={isSubmitting}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={_onConfirm} disabled={isSubmitting || !canDelete}>\n            Delete\n          </Button>\n        </React.Fragment>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\ntype DeleteModalPrefilledProps<T> = Omit<DeleteModalProps<T>, 'show' | 'title' | 'onClose' | 'onConfirm' | 'modalSubmitted' | 'entity' | 'message'> &\n  Partial<Pick<DeleteModalProps<T>, 'message'>>;\n\ntype OnDeleteFunc<T> = ((entity: T) => void) | ((entity: T) => Promise<void>);\ntype NameFunc<T> = (entity: T) => string;\n\ntype UseDeleteModal<T> = [\n  (props: DeleteModalPrefilledProps<T>) => JSX.Element | null,\n  (entity: T) => void,\n]\n\nexport function useDeleteModal<T>(onDelete: OnDeleteFunc<T>, title: string, getEntityName: NameFunc<T>): UseDeleteModal<T> {\n  const [entity, setEntity] = useState<T | null>(null);\n\n  const _onConfirm = useCallback(async (): Promise<void> => {\n    if (!entity) {\n      throw new Error('Entity required');\n    }\n\n    await onDelete(entity);\n\n    setEntity(null);\n  }, [entity, onDelete]);\n\n  const _onClose = useCallback((): void => {\n    setEntity(null);\n  }, []);\n\n  const ModalComponent = useCallback((props: DeleteModalPrefilledProps<T>): JSX.Element | null => {\n    if (!entity) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        entity={entity}\n        show={!!entity}\n        title={title}\n        message={(): JSX.Element => (\n          <React.Fragment>\n            Do you really want to delete <strong>{getEntityName(entity)}</strong>?\n          </React.Fragment>\n        )}\n        onClose={_onClose}\n        onConfirm={_onConfirm}\n        {...props}\n      />\n    );\n  }, [_onClose, _onConfirm, entity, getEntityName, title]);\n\n  return [ModalComponent, setEntity];\n}\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\n\nimport './pagination-bar.scss';\n\ninterface TablePaginationBarProps {\n  setPageIndex: Function;\n  pageIndex: number;\n  pageSize: number;\n  total: number;\n}\n\nfunction PaginationBar(props: TablePaginationBarProps): JSX.Element | null {\n  const { setPageIndex, pageIndex, pageSize, total } = props;\n\n  if (total === 0) {\n    return null;\n  }\n\n  const totalRounded = Math.ceil(total / pageSize);\n  const widthNeighbour = 3;\n\n  const range = (from: number): number[] => {\n    let i = from + 1;\n    const range = [];\n\n    while (i <= totalRounded - 1 && range.length < 3) {\n      range.push(i);\n      i++;\n    }\n\n    return range;\n  };\n  let neighbours = range(0);\n  if (totalRounded > widthNeighbour) {\n    if (pageIndex < widthNeighbour) {\n      neighbours = range(pageIndex - 1);\n    } else if (pageIndex > totalRounded - widthNeighbour) {\n      neighbours = range(totalRounded - 3);\n    } else {\n      neighbours = range(pageIndex - 2);\n    }\n  }\n\n  const getEllipsisOn = (condition: boolean): false | JSX.Element =>\n    condition && <Pagination.Ellipsis />;\n\n  const getNeighboursPage = (hiddenPages: number[]): JSX.Element[] | undefined => {\n    return hiddenPages.map((e, i) => (\n      <Pagination.Item\n        key={i}\n        active={pageIndex === e}\n        onClick={(): void => setPageIndex(e)}\n      >\n        {e}\n      </Pagination.Item>\n    ));\n  };\n\n  return (\n    <div className=\"center-x\">\n      <Pagination>\n        {/* <Pagination.First /> */}\n        <Pagination.Prev\n          onClick={(): void => setPageIndex(pageIndex - 1)}\n          disabled={pageIndex <= 1}\n        />\n        {pageIndex !== 1 && totalRounded > widthNeighbour && (\n          <Pagination.Item\n            active={pageIndex === 1}\n            onClick={(): void => setPageIndex(1)}\n          >\n            1\n          </Pagination.Item>\n        )}\n        {getEllipsisOn(pageIndex > widthNeighbour)}\n        {getNeighboursPage(neighbours)}\n        {getEllipsisOn(pageIndex <= totalRounded - widthNeighbour)}\n        <Pagination.Item\n          active={pageIndex === totalRounded}\n          onClick={(): void => setPageIndex(totalRounded)}\n        >\n          {totalRounded}\n        </Pagination.Item>\n        <Pagination.Next\n          onClick={(): void => setPageIndex(pageIndex + 1)}\n          disabled={pageIndex >= totalRounded}\n        />\n        {/* <Pagination.Last /> */}\n      </Pagination>\n    </div>\n  );\n}\n\nexport default PaginationBar;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useTable, TableOptions } from 'react-table';\n\nimport './table.scss';\n\ntype ReactTableProps<D extends object> = TableOptions<D> & {\n  total: number;\n};\n\nfunction ReactTable<D extends object>(props: ReactTableProps<D>): JSX.Element {\n  const { columns, data } = props;\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  // Render the UI for your table\n  return (\n    <Table responsive hover {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup, key) => (\n          <tr key={key} {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column, key) => (\n              <th key={key} {...column.getHeaderProps()}>\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n\n          return (\n            <tr key={i} {...row.getRowProps()}>\n              {row.cells.map((cell, key) => {\n                return (\n                  <td key={key} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default ReactTable;\n","import React, { useEffect, useCallback } from 'react';\nimport { Column } from 'react-table';\n\nimport { usePaginatedApi, PaginatedAPIFunc } from '../../../hooks/api';\nimport AppSpinner from '../layout/spinner';\n\nimport PaginationBar from './pagination-bar';\nimport ReactTable from './table';\n\ntype ComponentProps<T extends object> = {\n  data: T[];\n  total: number;\n}\n\nexport function WithPagination<T extends object>(fn: PaginatedAPIFunc<T>, pageSize: number, RenderComponent: React.FC<ComponentProps<T>>): [React.FC, () => void] {\n  const { loading, error, result, offset, setOffset, setRefresh } = usePaginatedApi(fn, 0, pageSize);\n\n  const setPageIndex = useCallback((pageIndex: number) => setOffset((pageIndex - 1) * pageSize), [pageSize, setOffset]);\n\n  function DataComponent(): JSX.Element {\n    if (loading || !result) {\n      return loading ? <AppSpinner /> : <div>{error?.message}</div>;\n    }\n\n    return (\n      <React.Fragment>\n        <RenderComponent\n          data={result.data}\n          total={result.total}\n        />\n        <PaginationBar\n          setPageIndex={setPageIndex}\n          pageIndex={(offset / pageSize) + 1}\n          pageSize={pageSize}\n          total={result.total}\n        />\n      </React.Fragment>\n    );\n  }\n\n  return [DataComponent, setRefresh];\n}\n\n// WithFixedPagination is a replica of WithPagination\n//\n// This is a workaround.\n// WithPagination works well if UI needs to be modified\n// WithFixedPagination works well if UI needs to be fixed\nexport function WithFixedPagination<T extends object>(fn: PaginatedAPIFunc<T>, pageSize: number, RenderComponent: React.FC<ComponentProps<T>>): [React.FC, () => void] {\n  const { loading, error, result, offset, setOffset, setRefresh } = usePaginatedApi(fn, 0, pageSize);\n\n  const setPageIndex = useCallback((pageIndex: number) => setOffset((pageIndex - 1) * pageSize), [pageSize, setOffset]);\n\n  const DataComponent = useCallback((): JSX.Element => {\n    if (loading || !result) {\n      return loading ? <AppSpinner /> : <div>{error?.message}</div>;\n    }\n\n    return (\n      <React.Fragment>\n        <RenderComponent\n          data={result.data}\n          total={result.total}\n        />\n        <PaginationBar\n          setPageIndex={setPageIndex}\n          pageIndex={(offset / pageSize) + 1}\n          pageSize={pageSize}\n          total={result.total}\n        />\n      </React.Fragment>\n    );\n  }, [loading, error, result, offset, pageSize, setPageIndex]);\n\n  return [DataComponent, setRefresh];\n}\n\ntype PaginatedTableProps<T extends object> = {\n  fn: PaginatedAPIFunc<T>;\n  pageSize: number;\n  columns: Column<T>[];\n  refresh?: boolean;\n};\n\nexport function PaginatedTable<T extends object>(props: PaginatedTableProps<T>): JSX.Element {\n  const { fn, pageSize, columns, refresh = false } = props;\n\n  const [Table, refreshTable] = WithPagination(fn, pageSize, ({ data, total }) => {\n    return (\n      <ReactTable\n        columns={columns}\n        data={data}\n        total={total}\n      />\n    );\n  });\n\n  useEffect(() => {\n    refreshTable();\n  }, [refresh, refreshTable]);\n\n  return <Table />;\n}\n","import React, { useContext, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { CellProps } from 'react-table';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listClientKeywordlists, ClientKeywordlistWithCount, deleteClientKeywordlist } from '../../../services/api-services/keywordlist';\nimport { ClientRole, UserRole } from '../../../services/role-management/roles';\nimport { EditButton, DeleteButton } from '../../../shared/components/ActionButtons';\nimport { KeywordlistView } from '../../../shared/components/KeywordlistView/KeywordlistView';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListClientKeywordlistsProps {\n  refresh: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListClientKeywordlistsComponent(props: ListClientKeywordlistsProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n  if (!client) {\n    throw new Error('Client expected');\n  }\n\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const setToast = useContext(ToastContext);\n  const history = useHistory();\n\n  const fn = useCallback((offset: number, limit: number) => listClientKeywordlists(clientId, offset, limit), [clientId]);\n\n  const onDelete = useCallback(async (keywordlist: ClientKeywordlistWithCount): Promise<void> => {\n    try {\n      await deleteClientKeywordlist(clientId, keywordlist.id);\n      setToast({ type: 'success', message: 'Keyword list deleted' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  }, [clientId, onUpdate, setToast]);\n\n  const nameFn = useCallback((keywordlist: ClientKeywordlistWithCount): string => keywordlist.name, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete Keyword List', nameFn);\n\n  const nameCell = (data: CellProps<ClientKeywordlistWithCount>): JSX.Element => {\n    const keywordlist = data.cell.row.original;\n\n    return (\n      <KeywordlistView keywordlist={keywordlist} size=\"lg\" />\n    );\n  };\n\n  const action = (data: CellProps<ClientKeywordlistWithCount>): JSX.Element | null => {\n    const keywordlist = data.cell.row.original;\n\n    const canEdit = keywordlist.scope === 'user' ||\n      (keywordlist.scope === 'client' && user.role === UserRole.ADMIN) ||\n      (keywordlist.scope === 'client' && client.role && [ClientRole.ADMIN].includes(client.role));\n    if (!canEdit) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <EditButton onClick={(): void => history.push(`/clients/${clientId}/keywordlists/edit/${keywordlist.id}`)} />\n        <DeleteButton onClick={(): void => showDeleteModal(keywordlist)} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: nameCell,\n  }, {\n    Header: ' ',\n    Cell: action,\n  }];\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>Keyword Lists</h4>\n      <PaginatedTable\n        fn={fn}\n        pageSize={10}\n        columns={columns}\n        refresh={refresh}\n      />\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default ListClientKeywordlistsComponent;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport CreateClientKeywordlistComponent from './components/create-keywordlist';\nimport ListClientKeywordlistsComponent from './components/list-keywordlists';\n\nfunction ClientKeywordlistContainer(): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Manage Keyword Lists</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListClientKeywordlistsComponent refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        <Col md=\"5\">\n          <CreateClientKeywordlistComponent onUpdate={(): void => setRefresh(!refresh)}/>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default ClientKeywordlistContainer;\n","import React from 'react';\nimport { Image } from 'react-bootstrap';\n\nimport { Target } from '../../../services/api-services/target';\n\nimport './TargetView.scss';\n\ntype TargetViewProps = {\n    target: Target;\n    size?: 'lg' | 'md' | 'sm';\n    onClick?: (event: React.MouseEvent) => void;\n};\n\nexport function TargetView({ target, size = 'lg', onClick }: TargetViewProps): JSX.Element {\n  let anchor = <a href=\"#fake\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"target-handle\">@{target.profile.handle}</a>;\n  if (target.platform === 'twitter') {\n    anchor = <a href={`https://twitter.com/${target.profile.handle}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"target-handle\">@{target.profile.handle}</a>;\n  }\n\n  return (\n    <div onClick={onClick} className={`target-view target-view-${size}`}>\n      <div className=\"target-img\">\n        <Image src={target.profile.photoURL} roundedCircle />\n      </div>\n      <div className=\"target-text\">\n        <span className=\"target-name\">{target.profile.name}</span>\n        { size === 'lg' && anchor}\n        { size === 'lg' && target.profile.dataStatus === 'fetching' && <span className=\"target-info\">Data collection in progress...</span> }\n        { size === 'md' && <span className=\"target-handle\">@{target.profile.handle}</span>}\n      </div>\n    </div>\n  );\n}\n","import { useField } from 'formik';\nimport React, { useState, useCallback, useMemo, CSSProperties } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { ValueType, OptionProps, OptionsType } from 'react-select';\nimport ReactSelect from 'react-select';\nimport { SelectComponents } from 'react-select/src/components';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport './TypeAheadField.scss';\n\nexport type TypeAheadFieldProps<T> = {\n  label: string;\n  name: string;\n  debounce: number;\n  disabled?: boolean;\n  fetchOptions: (query: string) => Promise<T[]>;\n  getOptionValue: (item: T) => string;\n  getOptionLabel: (item: T) => string;\n  renderOption?: (item: T) => JSX.Element;\n  renderSelectedOption?: (item: T) => JSX.Element;\n}\n\nexport function TypeAheadField<T>({ debounce, fetchOptions, getOptionValue, getOptionLabel, renderOption, renderSelectedOption, ...props }: TypeAheadFieldProps<T>): JSX.Element {\n  const [field, meta, helper] = useField<T[]>(props);\n  const [options, setOptions] = useState<OptionsType<T>>([]);\n\n  const [getOptionDebounced] = useDebouncedCallback(async (query: string) => {\n    const opts = await fetchOptions(query);\n\n    setOptions(opts);\n  }, debounce);\n\n  const onChange = useCallback((values: ValueType<T>): void => helper.setValue((values || []) as T[]), [helper]);\n\n  const onFocus = useCallback((): void => helper.setTouched(true), [helper]);\n\n  const _renderOption = useCallback((_props: OptionProps<T>): JSX.Element => (\n    <div ref={_props.innerRef} {..._props.innerProps} className={_props.isFocused ? 'typeaheadfield-opt typeaheadfield-opt-focused' : 'typeaheadfield-opt'}>\n      {renderOption && renderOption(_props.data as T)}\n    </div>\n  ), [renderOption]);\n\n  const _renderSelectedOption = useCallback(({ data }: { data: T }): JSX.Element => (\n    <div className=\"typeaheadfield-selected-opt\">\n      {renderSelectedOption && renderSelectedOption(data as T)}\n    </div>\n  ), [renderSelectedOption]);\n\n  const components = useMemo(() => {\n    let _components: Partial<SelectComponents<T>> = {};\n    if (renderOption) {\n      _components = { ..._components, Option: _renderOption };\n    }\n    if (renderSelectedOption) {\n      _components = { ..._components, MultiValueLabel: _renderSelectedOption };\n    }\n\n    return _components;\n  }, [renderOption, _renderOption, renderSelectedOption, _renderSelectedOption]);\n\n  return (\n    <Form.Group className=\"multi-select-field\">\n      <Form.Label>{props.label}</Form.Label>\n      <ReactSelect\n        isMulti\n        isSearchable\n        value={field.value}\n        placeholder={`Choose ${props.label}...`}\n        options={options}\n        getOptionLabel={getOptionLabel}\n        getOptionValue={getOptionValue}\n        onChange={onChange}\n        onInputChange={getOptionDebounced}\n        onBlur={field.onBlur}\n        onFocus={onFocus}\n        className=\"is-invalid\"\n        components={components}\n        isDisabled={props.disabled}\n        styles={{\n          control: (base, state): CSSProperties => ({\n            ...base,\n            transition: 'border-color .15s ease-in-out,box-shadow .15s ease-in-out',\n            ...(state.isFocused && {\n              boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\n              borderColor: '#80bdff',\n              ':hover': {\n                borderColor: '#80bdff',\n              },\n            }),\n          }),\n        }}\n      />\n      {meta.touched && meta.error ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {meta.error}\n        </Form.Control.Feedback>\n      ) : null}\n    </Form.Group>\n  );\n}\n","import React, { useCallback } from 'react';\n\nimport { Target } from '../../../services/api-services/target';\nimport { TargetView } from '../TargetView/TargetView';\n\nimport { TypeAheadField, TypeAheadFieldProps } from './TypeAheadField';\n\ntype TargetFieldProps = Omit<TypeAheadFieldProps<Target>, 'label' | 'getOptionValue' | 'getOptionLabel' | 'renderOption' | 'renderSelectedOption' | 'debounce'>;\n\nexport function TargetField(props: TargetFieldProps): JSX.Element {\n  const getOptionValue = useCallback((target: Target): string => target.id, []);\n  const getOptionLabel = useCallback((target: Target): string => `${target.profile.name} ${target.profile.handle}`, []);\n  const renderOption = useCallback((target: Target): JSX.Element => <TargetView target={target} size='md' />, []);\n  const renderSelectedOption = useCallback((target: Target): JSX.Element => <TargetView target={target} size='sm' />, []);\n\n  return (\n    <TypeAheadField\n      label=\"Targets\"\n      getOptionValue={getOptionValue}\n      getOptionLabel={getOptionLabel}\n      renderOption={renderOption}\n      renderSelectedOption={renderSelectedOption}\n      debounce={500}\n      {...props}\n    />\n  );\n}\n","import { Formik, Form as FormikForm, FormikHelpers } from 'formik';\nimport { useContext, useEffect, useState, useCallback } from 'react';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { createClientTag, CreateClientTagRequest, getClientTagById, editClientTag, EditClientTagRequest } from '../../../services/api-services/tag';\nimport { listClientTargets, Target } from '../../../services/api-services/target';\nimport { UserRole, ClientRole } from '../../../services/role-management/roles';\nimport { Checkbox } from '../../../shared/components/formik/Checkbox';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { TargetField } from '../../../shared/components/formik/TargetField';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ntype TagForm = {\n  name: string;\n  targets: Target[];\n  isUserSpecific: boolean;\n};\n\ninterface CreateClientTagProps {\n  onUpdate?: () => void;\n}\n\nfunction CreateClientTagComponent(props: CreateClientTagProps): JSX.Element {\n  const { onUpdate } = props;\n  const setToast = useContext(ToastContext);\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n  if (!client) {\n    throw new Error('Client expected');\n  }\n\n  const { clientId, editId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const allowOnlyUserSpecific = user.role === UserRole.CLIENT && !!client.role && [ClientRole.ANALYST, ClientRole.VETTER].includes(client.role);\n  const allowOnlyClientSpecific = user.role === UserRole.ADMIN;\n\n  const [initialValues, setInitialValues] = useState<TagForm>({\n    name: '',\n    targets: [] as Target[],\n    isUserSpecific: allowOnlyUserSpecific,\n  });\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n    targets: Yup.array().min(1).required('Required').label('Targets'),\n    isUserSpecific: Yup.boolean().required('Required').label('User specific'),\n  });\n\n  let showUserSpecific = false;\n  if (!editId) {\n    showUserSpecific = !(allowOnlyClientSpecific || allowOnlyUserSpecific);\n  }\n\n  useEffect(() => {\n    async function fetchData(editId: string): Promise<void> {\n      if (!clientId) {\n        throw new Error('Client ID not found');\n      }\n\n      try {\n        const response = await getClientTagById(clientId, editId);\n\n        setInitialValues({\n          name: response.name,\n          targets: response.targets,\n          isUserSpecific: response.scope === 'user',\n        });\n      } catch (err) {\n        setToast({ type: 'error', message: err.message });\n      }\n    }\n\n    if (editId) {\n      fetchData(editId);\n    }\n  }, [clientId, editId, setToast]);\n\n  const queryTargets = useCallback(async (query: string): Promise<Target[]> => {\n    const { data } = await listClientTargets(clientId, 0, 5, query);\n\n    return data;\n  }, [clientId]);\n\n  const onSubmit = async (values: TagForm, { resetForm }: FormikHelpers<TagForm>): Promise<void> => {\n    try {\n      if (editId) {\n        const payload: EditClientTagRequest = {\n          name: values.name,\n          targetIds: values.targets.map((target) => target.id),\n        };\n\n        await editClientTag(payload, clientId, editId);\n\n        setToast({ type: 'success', message: 'Tag edited successfully' });\n      } else {\n        const payload: CreateClientTagRequest = {\n          name: values.name,\n          targetIds: values.targets.map((target) => target.id),\n          isUserSpecific: values.isUserSpecific,\n        };\n\n        await createClientTag(payload, clientId);\n\n        resetForm();\n        setToast({ type: 'success', message: 'Tag created successfully' });\n      }\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>{editId ? 'Edit' : 'Add'} Tag</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"text\" name=\"name\" label=\"Name\" disabled={isSubmitting} />\n            <TargetField name=\"targets\" fetchOptions={queryTargets} disabled={isSubmitting} />\n            {showUserSpecific && (\n              <Checkbox name=\"isUserSpecific\" label=\"Visible only to me\" />\n            )}\n            <Button type=\"submit\" disabled={isSubmitting}>Save</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreateClientTagComponent;\n","import React from 'react';\n\nimport { TagWithCount, ClientTagWithCount, isClientTag } from '../../../services/api-services/tag';\nimport { Target } from '../../../services/api-services/target';\nimport { InlineListMore } from '../InlineListMore';\nimport { ScopeIcon } from '../ScopeIcon';\nimport { TargetView } from '../TargetView/TargetView';\n\nimport './TagView.scss';\n\ntype TagViewProps = {\n  tag: TagWithCount | ClientTagWithCount;\n  size?: 'lg' | 'md' | 'sm';\n  targetLimit?: number;\n};\n\nexport function TagView({ tag, size = 'lg', targetLimit = 2 }: TagViewProps): JSX.Element {\n  const { targetCount, fewTargets } = tag;\n\n  return (\n    <div className={`tag-view tag-view-${size}`}>\n      {isClientTag(tag) ? <ScopeIcon scope={tag.scope} /> : null}\n      <span className=\"tag-name\">{tag.name}</span>\n      {(size === 'lg' || size === 'md') &&\n        <div className=\"tag-targets\">\n          <InlineListMore total={targetCount} limit={targetLimit}>\n            {fewTargets.map((target: Target) => <TargetView key={target.id} target={target} size=\"sm\" />)}\n          </InlineListMore>\n        </div>\n      }\n    </div>\n  );\n}\n","import React, { useContext, useCallback } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport { CellProps } from 'react-table';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listClientTags, ClientTagWithCount, deleteClientTag } from '../../../services/api-services/tag';\nimport { ClientRole, UserRole } from '../../../services/role-management/roles';\nimport { EditButton, DeleteButton } from '../../../shared/components/ActionButtons';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { TagView } from '../../../shared/components/TagView/TagView';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListClientTagProps {\n  refresh?: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListClientTagComponent(props: ListClientTagProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n  if (!client) {\n    throw new Error('Client expected');\n  }\n\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const setToast = useContext(ToastContext);\n  const history = useHistory();\n\n  const fn = useCallback((offset: number, limit: number) => listClientTags(clientId, offset, limit), [clientId]);\n\n  const onDelete = useCallback(async (tag: ClientTagWithCount): Promise<void> => {\n    try {\n      await deleteClientTag(clientId, tag.id);\n      setToast({ type: 'success', message: 'Tag deleted successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  }, [clientId, onUpdate, setToast]);\n\n  const nameFn = useCallback((tag: ClientTagWithCount): string => tag.name, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete Tag', nameFn);\n\n  const nameCell = (data: CellProps<ClientTagWithCount>): JSX.Element => {\n    const tag = data.cell.row.original;\n\n    return (\n      <TagView tag={tag} size=\"lg\" />\n    );\n  };\n\n  const action = (data: CellProps<ClientTagWithCount>): JSX.Element | null => {\n    const tag = data.cell.row.original;\n\n    const canEdit = tag.scope === 'user' ||\n      (tag.scope === 'client' && user.role === UserRole.ADMIN) ||\n      (tag.scope === 'client' && client.role && [ClientRole.ADMIN].includes(client.role));\n    if (!canEdit) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <EditButton onClick={(): void => history.push(`/clients/${clientId}/tags/edit/${tag.id}`)} />\n        <DeleteButton onClick={(): void => showDeleteModal(tag)} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: nameCell,\n  }, {\n    Header: ' ',\n    Cell: action,\n  }];\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>Tags</h4>\n      <PaginatedTable\n        fn={fn}\n        pageSize={10}\n        columns={columns}\n        refresh={refresh}\n      />\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default ListClientTagComponent;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport CreateClientTagComponent from './components/create-tag';\nimport ListClientTagComponent from './components/list-tag';\n\nfunction ClientTagContainer (): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Manage Tags</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListClientTagComponent refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        <Col md=\"5\">\n          <CreateClientTagComponent onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default ClientTagContainer;\n","import { Formik, Form as FormikForm } from 'formik';\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { PLATFORM } from '../../../config/constants';\nimport { searchTarget, addClientTarget, SearchTargetRequest, TargetLookup } from '../../../services/api-services/target';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { ToastContext} from '../../../shared/contexts/toast';\n\ninterface AddClientTargetProps {\n  onUpdate?: () => void;\n}\n\nfunction AddClientTargetComponent(props: AddClientTargetProps): JSX.Element {\n  const { onUpdate } = props;\n  const form = useRef(null) as any;\n\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const setToast = useContext(ToastContext);\n\n  const initialValues = {\n    platform: PLATFORM,\n    handle: '',\n  };\n  const validationSchema = Yup.object().shape({\n    platform: Yup.string().required('Required').label('Platform'),\n    handle: Yup.string().trim().min(3).required('Required').label('Handle'),\n  });\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [tempTarget, setTempTarget] = useState<TargetLookup>();\n\n  useEffect(() => {\n    setShowConfirmModal(!!tempTarget);\n  }, [tempTarget]);\n\n  const onSubmit = async (values: SearchTargetRequest): Promise<void> => {\n    try {\n      const target = await searchTarget(values);\n\n      setTempTarget(target);\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  const onConfirm = async (): Promise<void> => {\n    if (!tempTarget) {\n      throw new Error('Target was supposed to be filled by now');\n    }\n\n    try {\n      await addClientTarget({\n        platform: tempTarget.platform,\n        identifier: tempTarget.identifier,\n      }, clientId);\n\n      form.current.resetForm();\n      setToast({ type: 'success', message: 'Target created successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    } finally {\n      setTempTarget(undefined);\n    }\n  };\n\n  const onClose = (): void => {\n    setTempTarget(undefined);\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Add Target</h4>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        innerRef={form}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"text\" name=\"handle\" label=\"Handle\" disabled={isSubmitting} />\n            <Button type=\"submit\" disabled={isSubmitting}>Add</Button>\n          </FormikForm>\n        )}\n      </Formik>\n      <ConfirmTargetModal\n        show={showConfirmModal}\n        target={tempTarget}\n        onClose={onClose}\n        onConfirm={onConfirm}\n      />\n    </div>\n  );\n}\n\nexport default AddClientTargetComponent;\n\ninterface ConfirmTargetModalProps {\n  show: boolean;\n  target?: TargetLookup;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nfunction ConfirmTargetModal(props: ConfirmTargetModalProps): JSX.Element {\n  const { show, target, onClose, onConfirm } = props;\n\n  const [modalSubmitted, setModalSubmitted] = useState(false);\n\n  useEffect(() => {\n    setModalSubmitted(false);\n  }, [target]);\n\n  const _onConfirm = (): void => {\n    setModalSubmitted(true);\n    onConfirm();\n  };\n\n  const name = target ? target.profile.name : 'Unknown';\n  const handle = target ? target.profile.handle : 'Unknown';\n\n  return (\n    <Modal show={show}>\n      <Modal.Header>\n        <Modal.Title>Confirm</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        Are you sure you want to add <strong>{name} (@{handle})</strong>?\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose} disabled={modalSubmitted}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={_onConfirm} disabled={modalSubmitted}>\n          Yes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useContext, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CellProps } from 'react-table';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listClientTargets, unassignClientTarget, Target } from '../../../services/api-services/target';\nimport { DeleteButton } from '../../../shared/components/ActionButtons';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { TargetView } from '../../../shared/components/TargetView/TargetView';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListClientTargetsProps {\n  canDelete: boolean;\n  refresh: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListClientTargetsComponent(props: ListClientTargetsProps): JSX.Element {\n  const { canDelete, refresh, onUpdate } = props;\n\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const setToast = useContext(ToastContext);\n\n  const fn = useCallback((offset: number, limit: number) => listClientTargets(clientId, offset, limit), [clientId]);\n\n  const onDelete = useCallback(async (target: Target): Promise<void> => {\n    try {\n      await unassignClientTarget(clientId, target.id);\n      setToast({ type: 'success', message: 'Target deleted successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  }, [clientId, onUpdate, setToast]);\n\n  const nameFn = useCallback((target: Target): string => target.profile.name, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete Target', nameFn);\n\n  const nameCell = (data: CellProps<Target>): JSX.Element => {\n    const target = data.cell.row.original;\n\n    return (\n      <TargetView target={target} size='lg' />\n    );\n  };\n\n  const action = (data: CellProps<Target>): JSX.Element | null => {\n    const target = data.cell.row.original;\n\n    if (!canDelete) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <DeleteButton onClick={(): void => showDeleteModal(target)} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: nameCell,\n  }, {\n    Header: ' ',\n    Cell: action,\n  }];\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>Targets</h4>\n      <PaginatedTable\n        fn={fn}\n        pageSize={10}\n        columns={columns}\n        refresh={refresh}\n      />\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default ListClientTargetsComponent;\n","import React, { useState, useContext } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport { UserRole, ClientRole } from '../../services/role-management/roles';\nimport { SessionContext } from '../../shared/contexts/session';\n\nimport AddClientTargetComponent from './components/add-target';\nimport ListClientTargetsComponent from './components/list-target';\n\nfunction ClientTargetContainer (): JSX.Element {\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User is expected');\n  }\n  if (!client) {\n    throw new Error('Client is expected');\n  }\n\n  const [refresh, setRefresh] = useState(false);\n\n  const canAdd = user.role === UserRole.ADMIN ||\n    (user.role === UserRole.CLIENT && !!client.role && [ClientRole.ADMIN].includes(client.role));\n\n  return (\n    <React.Fragment>\n      <h3>Manage Targets</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListClientTargetsComponent canDelete={canAdd} refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        {canAdd && <Col md=\"5\">\n          <AddClientTargetComponent onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>}\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default ClientTargetContainer;\n","import { Formik, Form as FormikForm, FormikHelpers } from 'formik';\nimport React, { useContext } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport * as Yup from 'yup';\n\nimport { CreateClientRequest, createClient } from '../../../services/api-services/client';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { ToastContext} from '../../../shared/contexts/toast';\n\nimport './create-client.scss';\n\ninterface CreateClientProps {\n  onUpdate?: () => void;\n}\n\nfunction CreateClientComponent(props: CreateClientProps): JSX.Element {\n  const { onUpdate } = props;\n  const setToast = useContext(ToastContext);\n\n  const initialValues = {\n    name: '',\n    settings: {\n      userLimit: 5,\n      targetLimit: 5,\n    },\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n    settings: Yup.object({\n      userLimit: Yup.number().integer().positive().required('Required').label('User limit'),\n      targetLimit: Yup.number().integer().positive().required('Required').label('Target limit'),\n    }),\n  });\n\n  const onSubmit = async (value: CreateClientRequest, { resetForm }: FormikHelpers<CreateClientRequest>): Promise<void> => {\n    try {\n      await createClient(value);\n\n      resetForm();\n      setToast({ type: 'success', message: 'Client created successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Create new User Group</h4>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"text\" name=\"name\" label=\"Name\" disabled={isSubmitting} />\n            <Row>\n              <Col md=\"6\" className=\"pull-left\">\n                <InputField type=\"number\" name=\"settings.userLimit\" label=\"User Limit\" min={1} disabled={isSubmitting} />\n              </Col>\n              <Col md=\"6\">\n                <InputField type=\"number\" name=\"settings.targetLimit\" label=\"Target Limit\" min={1} disabled={isSubmitting} />\n              </Col>\n            </Row>\n            <Button type=\"submit\" disabled={isSubmitting}>Save</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreateClientComponent;\n","import React from 'react';\n\nimport { Client, UserClient, isUserClient } from '../../../services/api-services/client';\nimport { ClientRoleText } from '../../../services/role-management/roles';\n\nimport './ClientView.scss';\n\ntype ClientViewProps = {\n    client: Client | UserClient;\n    size?: 'lg' | 'md' | 'sm';\n    onClick?: (event: React.MouseEvent) => void;\n};\n\nexport function ClientView({ client, size = 'lg', onClick }: ClientViewProps): JSX.Element {\n  const up = client.name;\n  let down = '';\n\n  if (isUserClient(client)) {\n    down = ClientRoleText[client.clientRole];\n  }\n\n  return (\n    <div onClick={onClick} className={`client-view client-view-${size}`}>\n      <div className=\"client-text\">\n        <span className=\"client-text-up\">{up}</span>\n        { size === 'lg' && <span className=\"client-text-down\">{down}</span>}\n      </div>\n    </div>\n  );\n}\n","import { Formik, Form as FormikForm } from 'formik';\nimport React, { useContext, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { CellProps } from 'react-table';\nimport * as Yup from 'yup';\n\nimport { Client, listClients, editClient } from '../../../services/api-services/client';\nimport { EditButton, SaveButton, CancelButton, LinkButton } from '../../../shared/components/ActionButtons';\nimport { ClientView } from '../../../shared/components/ClientView/ClientView';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ntype ClientForm = {\n  id: string;\n  name: string;\n  settings: {\n    userLimit: number;\n    targetLimit: number;\n  };\n}\n\ninterface ListClientsProps {\n  refresh: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListClientsComponents(props: ListClientsProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const history = useHistory();\n  const [, dispatchSession] = useContext(SessionContext);\n  const setToast = useContext(ToastContext);\n\n  const initialDefaultValue = {\n    id: '',\n    name: '',\n    settings: {\n      targetLimit: 0,\n      userLimit: 0,\n    },\n  };\n  const [initialValues, setInitialValues] = useState(initialDefaultValue);\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n    settings: Yup.object({\n      userLimit: Yup.number().integer().positive().required('Required').label('User limit'),\n      targetLimit: Yup.number().integer().positive().required('Required').label('Target limit'),\n    }),\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const fn = useCallback((offset: number, limit: number) => listClients(offset, limit), []);\n\n  const gotoClient = (client: Client): void => {\n    history.push(`/clients/${client.id}/dashboard`);\n    dispatchSession({\n      type: 'SET_CLIENT',\n      client: {\n        id: client.id,\n        name: client.name,\n      },\n    });\n  };\n\n  const editName = (data: CellProps<Client>): JSX.Element => {\n    const client = data.row.original;\n\n    if (initialValues.id === client.id) {\n      return (\n        <InputField type=\"text\" name=\"name\" disabled={isSubmitting} />\n      );\n    }\n\n    return (\n      <ClientView client={client} size=\"lg\" />\n    );\n  };\n\n  const editUserLimit = (data: CellProps<Client>): JSX.Element | number => {\n    const client = data.row.original;\n    if (initialValues.id === client.id) {\n      return (\n        <InputField type=\"number\" name=\"settings.userLimit\" min={1} disabled={isSubmitting} />\n      );\n    }\n\n    return client.settings.userLimit;\n  };\n\n  const editTargetLimit = (data: CellProps<Client>): JSX.Element | number => {\n    const client = data.row.original;\n\n    if (initialValues.id === client.id) {\n      return (\n        <InputField type=\"number\" name=\"settings.targetLimit\" min={1} disabled={isSubmitting} />\n      );\n    }\n\n    return client.settings.targetLimit;\n  };\n\n  const actionCell = (data: CellProps<Client>): JSX.Element => {\n    const client = data.row.original;\n    if (initialValues.id === client.id) {\n      return (\n        <React.Fragment>\n          <SaveButton type=\"submit\" />\n          <CancelButton onClick={(): void => setInitialValues(initialDefaultValue)} />\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <EditButton onClick={(): void => setInitialValues(client)} />\n        <LinkButton onClick={(): void => gotoClient(client)} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: editName,\n  }, {\n    Header: 'User Limit',\n    Cell: editUserLimit,\n  }, {\n    Header: 'Target Limit',\n    Cell: editTargetLimit,\n  }, {\n    Header: ' ',\n    Cell: actionCell,\n  }];\n\n  const onSubmit = async (values: ClientForm): Promise<void> => {\n    setIsSubmitting(true);\n    try {\n      if (!initialValues) {\n        throw new Error('Expected initial values');\n      }\n      const { id, ...payload } = values;\n\n      await editClient(payload, id);\n\n      setInitialValues(initialDefaultValue);\n      setToast({ type: 'success', message: 'Client created successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>User Groups</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <FormikForm>\n          <PaginatedTable\n            fn={fn}\n            pageSize={10}\n            columns={columns}\n            refresh={refresh}\n          />\n        </FormikForm>\n      </Formik>\n    </div>\n  );\n}\n\nexport default ListClientsComponents;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport CreateClientComponent from './components/create-client';\nimport ListClientsComponents from './components/list-clients';\n\nfunction ClientContainer(): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Manage User Groups</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListClientsComponents refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        <Col md=\"5\">\n          <CreateClientComponent onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default ClientContainer;\n","import React from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport { WithApi } from '../../hooks/api';\nimport { listClients } from '../../services/api-services/client';\nimport { ListResponse } from '../../services/api-services/interfaces';\nimport { listKeywordlists, KeywordlistWithCount } from '../../services/api-services/keywordlist';\nimport { listTags } from '../../services/api-services/tag';\nimport { listTargets } from '../../services/api-services/target';\nimport { listSuperUsers } from '../../services/api-services/user';\nimport { EntityStatBox } from '../../shared/components/EntityStatBox';\nimport { KeywordlistView } from '../../shared/components/KeywordlistView/KeywordlistView';\n\nfunction KeywordlistTableBox (props: { result: ListResponse<KeywordlistWithCount> }): JSX.Element {\n  const { result } = props;\n\n  return (\n    <div>\n      <h4>Keyword Lists</h4>\n      <div className=\"space-between-y\">\n        <Table responsive>\n          <thead>\n            <tr>\n              <th>Name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {result.data.map((keywordlist, key) => (\n              <tr key={key}>\n                <td><KeywordlistView keywordlist={keywordlist} /></td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nfunction Dashboard(): JSX.Element {\n  const history = useHistory();\n\n  const withUserList = WithApi(listSuperUsers);\n  const UserStatBox = withUserList(({ result }) => (\n    <EntityStatBox\n      entity=\"Users\"\n      count={result?.total}\n      onAdd={(): void => history.push('/users')}\n    />\n  ));\n\n  const withClientList = WithApi(listClients);\n  const ClientStatBox = withClientList(({ result }) => (\n    <EntityStatBox\n      entity=\"Clients\"\n      count={result?.total}\n      onAdd={(): void => history.push('/clients')}\n    />\n  ));\n\n  const withKeywordlists = WithApi(listKeywordlists);\n  const KeywordlistStatBox = withKeywordlists(({ result }) => (\n    <EntityStatBox\n      entity=\"Keyword Lists\"\n      count={result?.total}\n      onAdd={(): void => history.push('/keywordlists')}\n    />\n  ));\n\n  const withTargets = WithApi(listTargets);\n  const TargetStatBox = withTargets(({ result }) => (\n    <EntityStatBox\n      entity=\"Targets\"\n      count={result?.total}\n      onAdd={(): void => history.push('/targets')}\n    />\n  ));\n\n  const withTags = WithApi(listTags);\n  const TagStatBox = withTags(({ result }) => (\n    <EntityStatBox\n      entity=\"Tags\"\n      count={result?.total}\n      onAdd={(): void => history.push('/tags')}\n    />\n  ));\n\n  const KeywordlistTable = withKeywordlists(({ error, result }) => {\n    if (!result) {\n      return <div>{error?.message}</div>;\n    }\n\n    return <KeywordlistTableBox result={result} />;\n  });\n\n  return (\n    <Row>\n      <Col xs=\"5\">\n        <UserStatBox />\n        <ClientStatBox />\n        <KeywordlistStatBox />\n        <TargetStatBox />\n        <TagStatBox />\n      </Col>\n      <Col xs={{ span: 5, offset: 1 }} className=\"shadow-box\">\n        <KeywordlistTable />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Dashboard;\n","import { Formik, Form as FormikForm, FormikHelpers } from 'formik';\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport * as Yup from 'yup';\n\nimport { createKeywordlist, editKeywordlist, getKeywordlistById, CreateKeywordlistRequest, EditKeywordlistRequest } from '../../../services/api-services/keywordlist';\nimport { ChipsField } from '../../../shared/components/formik/ChipsField';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface CreateKeywordlistProps {\n  onUpdate?: () => void;\n}\n\nfunction CreateKeywordlistComponent(props: CreateKeywordlistProps): JSX.Element {\n  const { onUpdate } = props;\n  const { editId } = useParams();\n  const setToast = useContext(ToastContext);\n\n  const [initialValues, setInitialValues] = useState({\n    name: '',\n    keywords: [] as string[],\n  });\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n    keywords: Yup.array(\n      Yup.string().trim().min(3).max(50).label('Keyword')\n    ).required('Required').label('Keyword list'),\n  });\n\n  useEffect(() => {\n    async function fetchData(editId: string): Promise<void> {\n      try {\n        const response = await getKeywordlistById(editId);\n\n        setInitialValues({\n          name: response.name,\n          keywords: response.keywords,\n        });\n      } catch (err) {\n        setToast({ type: 'error', message: err.message });\n      }\n    }\n\n    if (editId) {\n      fetchData(editId);\n    }\n  }, [editId, setToast]);\n\n  const onSubmit = async (values: CreateKeywordlistRequest | EditKeywordlistRequest, { resetForm }: FormikHelpers<CreateKeywordlistRequest | EditKeywordlistRequest>): Promise<void> => {\n    try {\n      if (editId) {\n        await editKeywordlist(values, editId);\n\n        setToast({ type: 'success', message: 'Keyword list edited successfully' });\n      } else {\n        await createKeywordlist(values);\n\n        resetForm();\n        setToast({ type: 'success', message: 'Keyword list created successfully' });\n      }\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>{editId ? 'Edit' : 'Create'} Keyword List</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"text\" name=\"name\" label=\"Name\" disabled={isSubmitting} />\n            <ChipsField name=\"keywords\" label=\"Keywords\" disabled={isSubmitting} />\n            <Button type=\"submit\" disabled={isSubmitting}>Save</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreateKeywordlistComponent;\n","import React, { useContext, useCallback } from 'react';\nimport { useHistory } from 'react-router';\nimport { CellProps } from 'react-table';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listKeywordlists, deleteKeywordlist, KeywordlistWithCount } from '../../../services/api-services/keywordlist';\nimport { EditButton, DeleteButton } from '../../../shared/components/ActionButtons';\nimport { KeywordlistView } from '../../../shared/components/KeywordlistView/KeywordlistView';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListKeywordlistsProps {\n  refresh: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListKeywordlistsComponent(props: ListKeywordlistsProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const setToast = useContext(ToastContext);\n  const history = useHistory();\n\n  const fn = useCallback((offset: number, limit: number) => listKeywordlists(offset, limit), []);\n\n  const onDelete = useCallback(async (keywordlist: KeywordlistWithCount): Promise<void> => {\n    try {\n      await deleteKeywordlist(keywordlist.id);\n      setToast({ type: 'success', message: 'Keyword list deleted' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  }, [onUpdate, setToast]);\n\n  const nameFn = useCallback((keywordlist: KeywordlistWithCount): string => keywordlist.name, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete Keyword List', nameFn);\n\n  const nameCell = (data: CellProps<KeywordlistWithCount>): JSX.Element => {\n    const keywordlist = data.cell.row.original;\n\n    return (\n      <KeywordlistView keywordlist={keywordlist} size=\"lg\" />\n    );\n  };\n\n  const action = (data: CellProps<KeywordlistWithCount>): JSX.Element => {\n    const keyword = data.cell.row.original;\n\n    return (\n      <React.Fragment>\n        <EditButton onClick={(): void => history.push(`/keywordlists/edit/${keyword.id}`)} />\n        <DeleteButton onClick={(): void => showDeleteModal(keyword)} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: nameCell,\n  }, {\n    Header: ' ',\n    Cell: action,\n  }];\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>Keyword Lists</h4>\n      <PaginatedTable\n        fn={fn}\n        pageSize={10}\n        columns={columns}\n        refresh={refresh}\n      />\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default ListKeywordlistsComponent;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport CreateKeywordlistComponent from './components/create-keywordlist';\nimport ListKeywordlistsComponent from './components/list-keywordlists';\n\nfunction KeywordlistContainer(): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Manage Keyword Lists</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListKeywordlistsComponent refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        <Col md=\"5\">\n          <CreateKeywordlistComponent onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default KeywordlistContainer;\n","import { useField } from 'formik';\nimport React, { useCallback } from 'react';\nimport { FormGroup, Form } from 'react-bootstrap';\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DatePickerField.scss';\n\ntype DatePickerField = Omit<ReactDatePickerProps, 'onChange'> & Partial<Pick<ReactDatePickerProps, 'onChange'>> & {\n  placeholder?: string;\n  name: string;\n  label?: string;\n}\n\nexport function DatePickerField(props: DatePickerField): JSX.Element {\n  const { onChange } = props;\n  const [field, meta, helper] = useField<Date | null>(props);\n\n  const _onFocus = useCallback((): void => helper.setTouched(true), [helper]);\n  const _onChange = useCallback((value: Date | null): void => {\n    helper.setValue(value);\n\n    if (onChange) {\n      onChange(value, undefined);\n    }\n  }, [helper, onChange]);\n\n  return (\n    <FormGroup>\n      {props.label && <Form.Label>{props.label}</Form.Label>}\n      <DatePicker\n        dateFormat=\"MM/dd/yyyy\"\n        {...field}\n        {...props}\n        placeholderText={props.placeholder}\n        value={undefined}\n        selected={field.value}\n        onBlur={field.onBlur}\n        onChange={_onChange}\n        onFocus={_onFocus}\n        className=\"form-control\"\n      />\n      {meta.touched && meta.error ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {meta.error}\n        </Form.Control.Feedback>\n      ) : null}\n    </FormGroup>\n\n  );\n}\n","import React, { useCallback } from 'react';\n\nimport { ClientKeywordlistWithCount } from '../../../services/api-services/keywordlist';\nimport { KeywordlistView } from '../KeywordlistView/KeywordlistView';\n\nimport { TypeAheadField, TypeAheadFieldProps } from './TypeAheadField';\n\ntype KeywordlistFieldProps = Omit<TypeAheadFieldProps<ClientKeywordlistWithCount>, 'label' | 'getOptionValue' | 'getOptionLabel' | 'renderOption' | 'renderSelectedOption' | 'debounce'>;\n\nexport function KeywordlistField(props: KeywordlistFieldProps): JSX.Element {\n  const getOptionValue = useCallback((keywordlist: ClientKeywordlistWithCount): string => keywordlist.id, []);\n  const getOptionLabel = useCallback((keywordlist: ClientKeywordlistWithCount): string => keywordlist.name, []);\n  const renderOption = useCallback((keywordlist: ClientKeywordlistWithCount): JSX.Element => <KeywordlistView keywordlist={keywordlist} size=\"md\" />, []);\n  const renderSelectedOption = useCallback((keywordlist: ClientKeywordlistWithCount): JSX.Element => <KeywordlistView keywordlist={keywordlist} size=\"sm\" />, []);\n\n  return (\n    <TypeAheadField\n      label=\"Keyword Lists\"\n      getOptionValue={getOptionValue}\n      getOptionLabel={getOptionLabel}\n      renderOption={renderOption}\n      renderSelectedOption={renderSelectedOption}\n      debounce={500}\n      {...props}\n    />\n  );\n}\n","import React, { useCallback } from 'react';\n\nimport { ClientTagWithCount } from '../../../services/api-services/tag';\nimport { TagView } from '../TagView/TagView';\n\nimport { TypeAheadField, TypeAheadFieldProps } from './TypeAheadField';\n\ntype TagFieldProps = Omit<TypeAheadFieldProps<ClientTagWithCount>, 'label' | 'getOptionValue' | 'getOptionLabel' | 'renderOption' | 'renderSelectedOption' | 'debounce'>;\n\nexport function TagField(props: TagFieldProps): JSX.Element {\n  const getOptionValue = useCallback((tag: ClientTagWithCount): string => tag.id, []);\n  const getOptionLabel = useCallback((tag: ClientTagWithCount): string => tag.name, []);\n  const renderOption = useCallback((tag: ClientTagWithCount): JSX.Element => <TagView tag={tag} size=\"md\" />, []);\n  const renderSelectedOption = useCallback((tag: ClientTagWithCount): JSX.Element => <TagView tag={tag} size=\"sm\" />, []);\n\n  return (\n    <TypeAheadField\n      label=\"Tags\"\n      getOptionValue={getOptionValue}\n      getOptionLabel={getOptionLabel}\n      renderOption={renderOption}\n      renderSelectedOption={renderSelectedOption}\n      debounce={500}\n      {...props}\n    />\n  );\n}\n","import { Formik, Form as FormikForm } from 'formik';\nimport queryString from 'query-string';\nimport { useContext, useCallback } from 'react';\nimport React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { listClientKeywordlists, ClientKeywordlistWithCount } from '../../../services/api-services/keywordlist';\nimport { listClientTags, ClientTagWithCount } from '../../../services/api-services/tag';\nimport { listClientTargets, Target } from '../../../services/api-services/target';\nimport { ChipsField } from '../../../shared/components/formik/ChipsField';\nimport { DatePickerField } from '../../../shared/components/formik/DatePickerField';\nimport { KeywordlistField } from '../../../shared/components/formik/KeywordlistField';\nimport { TagField } from '../../../shared/components/formik/TagField';\nimport { TargetField } from '../../../shared/components/formik/TargetField';\nimport { SessionContext } from '../../../shared/contexts/session';\n\ntype PowerSearchForm = {\n  tags: ClientTagWithCount[];\n  targets: Target[];\n  keywordlists: ClientKeywordlistWithCount[];\n  keywords: string[];\n  from: Date;\n  to: Date;\n};\n\nfunction PowerSearchQueryComponent(): JSX.Element {\n  const [{ user }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const history = useHistory();\n\n  let initialValues = {\n    tags: [] as ClientTagWithCount[],\n    targets: [] as Target[],\n    keywordlists: [] as ClientKeywordlistWithCount[],\n    keywords: [] as string[],\n    from: new Date(),\n    to: new Date(),\n  };\n\n  const location = useLocation<typeof initialValues>();\n\n  if (location.state) {\n    initialValues = location.state;\n  }\n\n  const validationSchema = Yup.object().shape({\n    tags: Yup.array().when('targets', {\n      is: (targets) => targets && targets.length > 0,\n      then: Yup.array().min(0),\n      otherwise: Yup.array().min(1, 'Must include a Tag or a Target'),\n    }).label('Tags'),\n    targets: Yup.array().when('tags', {\n      is: (tags) => tags && tags.length > 0,\n      then: Yup.array().min(0),\n      otherwise: Yup.array().min(1, 'Must include a Tag or a Target'),\n    }).label('Targets'),\n    keywordlists: Yup.array().when('keywords', {\n      is: (keywords) => keywords && keywords.length > 0,\n      then: Yup.array().min(0),\n      otherwise: Yup.array().min(1, 'Must include a Keyword list or a Keyword'),\n    }).label('Keyword list'),\n    keywords: Yup.array().when('keywordlists', {\n      is: (keywordlistss) => keywordlistss && keywordlistss.length > 0,\n      then: Yup.array().min(0),\n      otherwise: Yup.array().min(1, 'Must include a Keyword list or a Keyword'),\n    }).label('Keywords'),\n    from: Yup.date().required('Required').label('From Date'),\n    to: Yup.date().required('Required').label('To Date'),\n  }, [['tags', 'targets'], ['keywordlists', 'keywords']]);\n\n  const queryTags = useCallback(async (query: string): Promise<ClientTagWithCount[]> => {\n    const { data } = await listClientTags(clientId, 0, 5, query);\n\n    return data;\n  }, [clientId]);\n\n  const queryTargets = useCallback(async (query: string): Promise<Target[]> => {\n    const { data } = await listClientTargets(clientId, 0, 5, query);\n\n    return data;\n  }, [clientId]);\n\n  const queryKeywordList = useCallback(async (query: string): Promise<ClientKeywordlistWithCount[]> => {\n    const { data } = await listClientKeywordlists(clientId, 0, 5, query);\n\n    return data;\n  }, [clientId]);\n\n  const onSubmit = async (values: PowerSearchForm): Promise<void> => {\n    values.from.setHours(0, 0, 0);\n    values.to.setHours(23, 59, 59);\n\n    const currentDate = new Date();\n    if (values.to > currentDate) {\n      values.to = currentDate;\n    }\n\n    const payload = {\n      targets: values.targets.map((target) => target.id),\n      tags: values.tags.map((tag) => tag.id),\n      keywordlists: values.keywordlists.map((keywordlist) => keywordlist.id),\n      keywords: values.keywords,\n      from: values.from.toISOString(),\n      to: values.to.toISOString(),\n    };\n\n    const query = queryString.stringify(payload);\n\n    history.push(`/clients/${clientId}/power-search-result?${query}`, values);\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Search Query</h4>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, values }): JSX.Element => (\n          <FormikForm>\n            <TagField name=\"tags\" fetchOptions={queryTags} disabled={isSubmitting} />\n            <TargetField name=\"targets\" fetchOptions={queryTargets} disabled={isSubmitting} />\n            <KeywordlistField name=\"keywordlists\" fetchOptions={queryKeywordList} disabled={isSubmitting} />\n            <ChipsField name=\"keywords\" label=\"Keywords\" disabled={isSubmitting} />\n            <Row>\n              <Col md=\"3\">\n                <DatePickerField name=\"from\" label=\"From\" selectsStart startDate={values.from} endDate={values.to} maxDate={values.to} disabled={isSubmitting} />\n              </Col>\n              <Col md=\"3\">\n                <DatePickerField name=\"to\" label=\"To\" selectsEnd startDate={values.from} endDate={values.to} minDate={values.from} maxDate={new Date()} disabled={isSubmitting}/>\n              </Col>\n            </Row>\n            <Button type=\"submit\" disabled={isSubmitting}>Search</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default PowerSearchQueryComponent;\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport PowerSearchQueryComponent from './components/power-search-query';\n\nfunction PowerSearchQueryContainer (): JSX.Element {\n  return (\n    <React.Fragment>\n      <h3>Power Search</h3>\n      <Row>\n        <Col md=\"12\">\n          <PowerSearchQueryComponent />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default PowerSearchQueryContainer;\n","import httpRequest from './config/HttpRequest';\nimport { ListResponse } from './interfaces';\nimport { PowerSearchRequest } from './power-search';\n\nexport enum AlertFrequency {\n  DAILY = 'DAILY',\n  AS_IT_HAPPENS = 'AS_IT_HAPPENS'\n}\n\nexport const AlertFrequencyText: { [x in AlertFrequency]: string } = {\n  DAILY: 'Daily',\n  AS_IT_HAPPENS: 'As it happens',\n};\n\nexport enum AlertTypes {\n  EMAIL = 'EMAIL',\n//   NOOP = 'NOOP'\n}\n\nexport const AlertTypesText: { [x in AlertTypes]: string } = {\n  EMAIL: 'Email',\n//   NOOP: 'Noop',\n};\n\ntype EmailAttributes = {\n  emailAddresses: string[];\n}\n\ntype NoopAttributes = {}\n\nexport type Alert = {\n  frequency: AlertFrequency;\n  type: AlertTypes;\n  attributes: EmailAttributes | NoopAttributes;\n}\n\nexport type Query = Omit<PowerSearchRequest, 'from' | 'to'>\n\nexport type SearchQuery = {\n  id: string;\n  name: string;\n  query: Query;\n  alerts: Alert[];\n}\n\nexport type CreateSearchQueryRequest = {\n  name: string;\n  query: Query;\n  alerts: Alert[];\n}\n\nexport async function createSearchQuery(data: CreateSearchQueryRequest, clientId: string): Promise<SearchQuery> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/search-queries`,\n    method: 'post',\n    data,\n  });\n}\n\nexport type EditSearchQueryRequest = {\n  name: string;\n  alerts: Alert[];\n}\n\nexport async function editSearchQuery(data: EditSearchQueryRequest, clientId: string, searchQueryId: string): Promise<SearchQuery> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/search-queries/${searchQueryId}`,\n    method: 'put',\n    data: data,\n  });\n}\n\nexport async function listSearchQuery(clientId: string, offset = 0, limit = 10): Promise<ListResponse<SearchQuery>> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/search-queries?offset=${offset}&limit=${limit}`,\n    method: 'get',\n  });\n}\n\nexport async function getSearchQueryById(clientId: string, searchQueryId: string): Promise<SearchQuery> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/search-queries/${searchQueryId}`,\n    method: 'get',\n  });\n}\n\nexport async function deleteSearchQuery(clientId: string, searchQueryId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/search-queries/${searchQueryId}`,\n    method: 'delete',\n  });\n}\n","import httpRequest from './config/HttpRequest';\nimport { ListResponse } from './interfaces';\nimport { PowerSearchRequest } from './power-search';\n\ntype Document = {\n    format: string;\n    url: string;\n}\n\nexport type Report = {\n  id: string;\n  name: string;\n  createdAt: Date;\n  documents: Document[];\n}\n\ntype CreateReportRequest = {\n  name: string;\n  query: PowerSearchRequest;\n}\n\nexport async function createReport(data: CreateReportRequest, clientId: string): Promise<Report> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/reports`,\n    method: 'post',\n    data,\n  });\n}\n\nexport type EditReportRequest = {\n  name: string;\n}\n\nexport async function editReport(data: EditReportRequest, clientId: string, reportId: string): Promise<Report> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/reports/${reportId}`,\n    method: 'put',\n    data: data,\n  });\n}\n\nexport async function listReports(clientId: string, offset = 0, limit = 10): Promise<ListResponse<Report>> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/reports?offset=${offset}&limit=${limit}`,\n    method: 'get',\n  });\n}\n\nexport async function deleteReport(clientId: string, reportId: string): Promise<void> {\n  return httpRequest.request({\n    url: `/clients/${clientId}/reports/${reportId}`,\n    method: 'delete',\n  });\n}\n","import { Formik, Form as FormikForm, FormikHelpers, FormikProps } from 'formik';\nimport React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport * as Yup from 'yup';\n\ntype FormModalProps<T> = {\n    show: boolean;\n    size?: 'sm' | 'lg' | 'xl';\n    initialValues: T;\n    enableReinitialize?: boolean;\n    validationSchema: Yup.ObjectSchema;\n    title: string;\n    children: (props: FormikProps<T>) => JSX.Element;\n    onClose: () => void;\n    onSubmit: (values: T, formikHelpers: FormikHelpers<T>) => Promise<void>;\n  }\n\nexport function FormModal<T>(props: FormModalProps<T>): JSX.Element {\n  const { show, size, initialValues, enableReinitialize = false, validationSchema, title, children: Form, onClose, onSubmit } = props;\n\n  return (\n    <Modal show={show} size={size} onHide={onClose}>\n      <Formik\n        initialValues={initialValues}\n        enableReinitialize={enableReinitialize}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {(_props): JSX.Element => (\n          <FormikForm>\n            <Modal.Header>\n              <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form {..._props} />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={onClose} disabled={_props.isSubmitting}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\" disabled={_props.isSubmitting}>\n                Save\n              </Button>\n            </Modal.Footer>\n          </FormikForm>\n        )}\n      </Formik>\n    </Modal>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport * as Yup from 'yup';\n\nimport { PowerSearchRequest } from '../../../services/api-services/power-search';\nimport { createReport } from '../../../services/api-services/report';\nimport { FormModal } from '../../../shared/components/formik/FormModal';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { Client } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ntype ReportForm = {\n  name: string;\n}\n\ntype CreateReportButtonProps = {\n  client: Client;\n  query: PowerSearchRequest;\n}\n\nexport function CreateReportButton(props: CreateReportButtonProps): JSX.Element {\n  const { client, query } = props;\n\n  const setToast = useContext(ToastContext);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const onSubmit = async (report: ReportForm): Promise<void> => {\n    try {\n      const payload = {\n        name: report.name,\n        query,\n      };\n\n      await createReport(payload, client.id);\n\n      setToast({ type: 'success', message: 'Report created successfully' });\n\n      setShowModal(false);\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  const onClose = (): void => setShowModal(false);\n\n  const initialValues = {\n    name: '',\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n  });\n\n  return (\n    <React.Fragment>\n      <Button onClick={(): void => setShowModal(true)}>Create Report</Button>\n      <FormModal\n        show={showModal}\n        title=\"Create Report\"\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        onClose={onClose}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <React.Fragment>\n            <p>\n              After creating the report, you can view it from the &lsquo;Reports&rsquo; section on the left\n              and then export it report as <i>.docx</i> document.\n            </p>\n            <p>\n              Please give it a name so that it is easier to remember:\n            </p>\n            <InputField type=\"text\" name=\"name\" label=\"Name\" disabled={isSubmitting} />\n          </React.Fragment>\n        )}\n      </FormModal>\n    </React.Fragment>\n  );\n}\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\ntype DropdownProps = {\n  placeholder?: string;\n  label?: string;\n  name: string;\n  options: string[] | { [x: string]: string };\n  disabled?: boolean;\n}\n\nexport function Dropdown(props: DropdownProps): JSX.Element {\n  const [field, meta] = useField(props);\n\n  let options: { [x: string]: string } = {};\n  if (Array.isArray(props.options)) {\n    for (const item of props.options) {\n      options[item] = item;\n    }\n  } else {\n    options = props.options;\n  }\n\n  return (\n    <Form.Group>\n      {props.label && <Form.Label>{props.label}</Form.Label>}\n      <Form.Control\n        as=\"select\"\n        value={`Choose ${props.label}`}\n        {...field}\n        isInvalid={!!(meta.touched && meta.error)}\n      >\n        {props.label && <option>{`Choose ${props.label}`}</option>}\n        {Object.keys(options).map((item) => (\n          <option key={item} value={item}>{options[item]}</option>\n        ))}\n      </Form.Control>\n      {meta.touched && meta.error ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {meta.error}\n        </Form.Control.Feedback>\n      ) : null}\n    </Form.Group>\n  );\n}\n","import * as FAS from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FieldArray, FormikProps } from 'formik';\nimport React from 'react';\nimport { Col, Row, Button } from 'react-bootstrap';\n\nimport { AlertFrequencyText, AlertTypes, AlertTypesText, Alert } from '../../../services/api-services/search-query';\nimport { ChipsField } from '../../../shared/components/formik/ChipsField';\nimport { Dropdown } from '../../../shared/components/formik/Dropdown';\nimport { InputField } from '../../../shared/components/formik/InputField';\n\ntype SearchQueryForm = {\n  name: string;\n  alerts: Alert[];\n}\n\ntype SearchQueryFormProps = FormikProps<SearchQueryForm>;\n\nfunction SearchQueryForm(props: SearchQueryFormProps): JSX.Element {\n  const { values, isSubmitting } = props;\n\n  const renderAlertAttributes = (value: Alert, name: string, isSubmitting: boolean): JSX.Element | null => {\n    switch (value.type) {\n    case AlertTypes.EMAIL:\n      return <ChipsField name={name} label=\"Email Addresses\" disabled={isSubmitting} />;\n    default:\n      return null;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <InputField type=\"text\" name=\"name\" label=\"Name\" disabled={isSubmitting} />\n      <hr />\n      <h4>Alerts</h4>\n      <FieldArray\n        name=\"alerts\"\n        render={(arrayHelpers): React.ReactNode => values.alerts.map((alert, key) => (\n          <React.Fragment key={key}>\n            <Row>\n              <Col md=\"6\">\n                <Dropdown name={`alerts[${key}].frequency`} label=\"Frequency\" options={AlertFrequencyText} disabled={isSubmitting} />\n              </Col>\n              {Object.keys(AlertTypesText).length !== 1 && <Col md=\"6\">\n                <Dropdown name={`alerts[${key}].type`} label=\"Type\" options={AlertTypesText} disabled={isSubmitting} />\n              </Col>}\n            </Row>\n            <Row>\n              <Col>\n                {renderAlertAttributes(alert, `alerts[${key}].attributes.emailAddresses`, isSubmitting)}\n              </Col>\n            </Row>\n            {values.alerts.length > 1 && <p style={{ textAlign: 'right' }}>\n              <Button variant=\"danger\" onClick={(): void => arrayHelpers.remove(key)}><FontAwesomeIcon icon={FAS.faTrash} /> Remove</Button>\n            </p>}\n            {/* <hr />\n            {values.alerts.length - 1 === key &&\n              <div className=\"d-flex justify-content-center\">\n                <Button onClick={(): void => arrayHelpers.push(defaultAlert)}>\n                  <FontAwesomeIcon icon={FAS.faPlusCircle} /> Add more...\n                </Button>\n              </div>\n            } */}\n          </React.Fragment>\n        ))}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default SearchQueryForm;\n","import React, { useState, useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Query, AlertFrequency, Alert, AlertTypes, createSearchQuery } from '../../../services/api-services/search-query';\nimport { FormModal } from '../../../shared/components/formik/FormModal';\nimport { Client } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\nimport SearchQueryForm from '../../search-query/components/search-query-form';\n\ntype CreateSearchQueryButtonProps = {\n  client: Client;\n  query: Query;\n  onUpdate?: () => void;\n}\n\nexport function CreateSearchQueryButton(props: CreateSearchQueryButtonProps): JSX.Element {\n  const { onUpdate, query } = props;\n  const setToast = useContext(ToastContext);\n\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const [showSearchQueryModal, setShowSearchQueryModal] = useState(false);\n  const defaultAlert: Alert = {\n    frequency: AlertFrequency.DAILY,\n    type: AlertTypes.EMAIL,\n    attributes: {\n      emailAddresses: [],\n    },\n  };\n\n  const initialValues = {\n    name: '',\n    alerts: [defaultAlert],\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n    alerts: Yup.array().of(\n      Yup.object().shape({\n        frequency: Yup.string().required('Required').oneOf(Object.values(AlertFrequency)).label('Frequency'),\n        type: Yup.string().required('Required').oneOf(Object.values(AlertTypes)).label('Type'),\n        attributes: Yup.object().when('type', {\n          is: AlertTypes.EMAIL,\n          then: Yup.object().shape({\n            emailAddresses: Yup.array(\n              Yup.string().email().required('Required').label('Email')\n            ).required('Required').label('Email Addresses'),\n          }),\n        }).label('Attributes'),\n      })\n    ),\n  });\n\n  const onSubmit = async (values: SearchQueryForm): Promise<void> => {\n    try {\n      await createSearchQuery({ ...values, query }, clientId);\n\n      setToast({ type: 'success', message: 'Search Query created successfully' });\n\n      setShowSearchQueryModal(false);\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={(): void => setShowSearchQueryModal(true)}>Create Search Query</Button>\n      <FormModal\n        show={showSearchQueryModal}\n        size=\"lg\"\n        title=\"Create Search Query\"\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        onClose={(): void => setShowSearchQueryModal(false)}\n      >\n        {(_props): JSX.Element => (\n          <React.Fragment>\n            <p>\n              After creating the search query, you can view it from the &lsquo;Alerts&rsquo; section on the left\n              and then export it report as <i>.docx</i> document.\n            </p>\n            <p>\n              Please give it a name so that it is easier to remember:\n            </p>\n            <SearchQueryForm {..._props} />\n          </React.Fragment>\n        )}\n      </FormModal>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport { PowerSearchRequest } from '../../../services/api-services/power-search';\nimport { UserRole } from '../../../services/role-management/roles';\nimport { User, Client } from '../../../shared/contexts/session';\n\nimport { CreateReportButton } from './create-report-button';\nimport { CreateSearchQueryButton } from './create-search-query-button';\n\ntype PowerSearchActionBoxProps = {\n  user: User;\n  client: Client;\n  query: PowerSearchRequest;\n}\n\nfunction PowerSearchActionBox(props: PowerSearchActionBoxProps): JSX.Element | null {\n  const { user, client, query } = props;\n  const { from, to, ..._query } = query;\n  const reportQueryParam = { from, to, ..._query };\n  const searchQueryParam = _query;\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const goBack = (): void => {\n    history.push(`/clients/${client.id}/power-search`, location.state);\n  };\n\n  const canGoBack = !!location.state;\n  const canCreateReport = user.role === UserRole.CLIENT;\n  const canCreateAlert = user.role === UserRole.CLIENT;\n\n  if (!canGoBack && !canCreateReport && !canCreateAlert) {\n    return null;\n  }\n\n  return (\n    <div className=\"shadow-box d-flex flex-column align-items-center\">\n      {canGoBack && <Button onClick={(): void => goBack()}>Go back</Button>}\n      {(canGoBack && (canCreateReport || canCreateAlert)) && <hr style={{ width: '100%' }} />}\n      {(canCreateReport || canCreateAlert) &&\n        <React.Fragment>\n          <h4>Save</h4>\n          {canCreateReport && <p><CreateReportButton client={client} query={reportQueryParam} /></p>}\n          {canCreateAlert && <p><CreateSearchQueryButton client={client} query={searchQueryParam} /></p>}\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n\nexport default PowerSearchActionBox;\n","import httpRequest from './config/HttpRequest';\nimport { ListResponse } from './interfaces';\nimport { Target } from './target';\n\nexport type SearchResult = {\n  id: string;\n  text: string;\n  date: Date;\n  target: Target;\n  extras?: object;\n}\n\nexport type PowerSearchRequest = {\n  targetIds: string[];\n  tagIds: string[];\n  keywordlistIds: string[];\n  keywords: string[];\n  from: Date;\n  to: Date;\n}\n\nexport async function powerSearch(data: PowerSearchRequest, clientId: string, offset = 0, limit = 10): Promise<ListResponse<SearchResult>> {\n  const currentDate = new Date();\n  if (data.to > currentDate) {\n    data.to = currentDate;\n  }\n\n  return httpRequest.request({\n    url: `/clients/${clientId}/power-search?offset=${offset}&limit=${limit}`,\n    method: 'post',\n    data,\n  });\n}\n","import React from 'react';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\n\nimport { SearchResult } from '../../../services/api-services/power-search';\nimport AppSpinner from '../layout/spinner';\n\nimport './FakePost.scss';\nimport './TwitterPost.scss';\n\nexport type FakePostExtras = {\n  tweetId: string;\n}\n\ntype FakePostProps = {\n  post: SearchResult;\n  width?: number;\n}\n\nexport function FakePost({ post, width }: FakePostProps): JSX.Element {\n  const extras = post.extras as FakePostExtras;\n\n  return (\n    <div className=\"fake-post\">\n      <div className=\"ribbon ribbon-top-left\">\n        <span>@{post.target.profile.handle}</span>\n      </div>\n      <div className=\"ribbon ribbon-top-right\">\n        <span>Fake</span>\n      </div>\n      <div className=\"twitter-post\">\n        <TwitterTweetEmbed tweetId={extras.tweetId} placeholder={<AppSpinner />} options={{ width }} />\n      </div>\n    </div>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.615 15.477c-.47-.47-1.23-.47-1.697 0l-1.326 1.326V7.4c0-2.178-1.772-3.95-3.95-3.95h-5.2c-.663 0-1.2.538-1.2 1.2s.537 1.2 1.2 1.2h5.2c.854 0 1.55.695 1.55 1.55v9.403l-1.326-1.326c-.47-.47-1.23-.47-1.697 0s-.47 1.23 0 1.697l3.374 3.375c.234.233.542.35.85.35s.613-.116.848-.35l3.375-3.376c.467-.47.467-1.23-.002-1.697zM12.562 18.5h-5.2c-.854 0-1.55-.695-1.55-1.55V7.547l1.326 1.326c.234.235.542.352.848.352s.614-.117.85-.352c.468-.47.468-1.23 0-1.697L5.46 3.8c-.47-.468-1.23-.468-1.697 0L.388 7.177c-.47.47-.47 1.23 0 1.697s1.23.47 1.697 0L3.41 7.547v9.403c0 2.178 1.773 3.95 3.95 3.95h5.2c.664 0 1.2-.538 1.2-1.2s-.535-1.2-1.198-1.2z\"\n}));\n\nvar SvgRetweet = function SvgRetweet(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 15,\n    width: 20,\n    fill: \"rgb(101, 119, 134)\",\n    viewBox: \"0 0 24 24\",\n    className: \"r-1re7ezh r-4qtqp9 r-yyyyoo r-1xvli5t r-dnmrzs r-bnwqim r-1plcrui r-lrvibr r-1xzupcd\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgRetweet, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/retweet.eb3f7047.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\n\nimport { SearchResult } from '../../../services/api-services/power-search';\nimport AppSpinner from '../layout/spinner';\n\nimport { ReactComponent as RetweetedSvg } from './retweet.svg';\n\nimport './TwitterPost.scss';\n\ntype RetweetedProps = {\n  post: SearchResult;\n}\n\nfunction Retweeted({ post }: RetweetedProps): JSX.Element {\n  return (\n    <a href={`https://twitter.com/${post.target.profile.handle}`} target=\"_blank\" rel=\"noopener noreferrer\">\n      <div className='retweeted'>\n        <RetweetedSvg />\n        <span className='name'>\n          {post.target.profile.name} Retweeted\n        </span>\n      </div>\n    </a>\n  );\n}\n\ntype TweetPostExtras = {\n  retweetedStatusId?: string;\n  quotedStatusId?: string;\n}\n\ntype TwitterPostProps = {\n  post: SearchResult;\n  width?: number;\n}\n\nexport function TwitterPost({ post, width = 550 }: TwitterPostProps): JSX.Element {\n  const extras = post.extras as TweetPostExtras;\n  const retweeted = !!extras.retweetedStatusId;\n  const tweetId = extras.retweetedStatusId ? extras.retweetedStatusId : post.id;\n\n  return (\n    <div className=\"twitter-post\">\n      {retweeted && <Retweeted post={post} />}\n      <TwitterTweetEmbed tweetId={tweetId} placeholder={<AppSpinner />} options={{ width }} />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { SearchResult } from '../../../services/api-services/power-search';\n\nimport { FakePost } from './FakePost';\nimport { TwitterPost } from './TwitterPost';\n\ntype PostViewProps = {\n  post: SearchResult;\n  width?: number;\n}\n\nexport function PostView({ post, width }: PostViewProps): JSX.Element | null {\n  switch (post.target.platform) {\n  case 'twitter':\n    return <TwitterPost post={post} width={width} />;\n  case 'fake':\n    return <FakePost post={post} width={width} />;\n  default:\n    return null;\n  }\n}\n","import React, { useCallback } from 'react';\n\nimport { powerSearch, PowerSearchRequest } from '../../../services/api-services/power-search';\nimport { PostView } from '../../../shared/components/PostView/PostView';\nimport { WithFixedPagination } from '../../../shared/components/tables/paginated-table';\nimport { Client } from '../../../shared/contexts/session';\n\ntype PowerSearchResultComponentProps = {\n  client: Client;\n  query: PowerSearchRequest;\n}\n\nfunction PowerSearchResultComponent(props: PowerSearchResultComponentProps): JSX.Element {\n  const { client, query } = props;\n\n  const fn = useCallback((offset: number, limit: number) => powerSearch(query, client.id, offset, limit), [client.id, query]);\n\n  const [PostList] = WithFixedPagination(fn, 10, ({ data, total }) => {\n    if (total === 0) {\n      return <>No result found</>;\n    }\n\n    return data\n      .map((post, key) => <PostView key={key} post={post} />)\n      .reduce<JSX.Element | null>((acc, x) => (acc === null ? x : <>{acc}<hr />{x}</>), null);\n  });\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Search Results</h4>\n      <PostList />\n    </div>\n  );\n}\n\nexport default PowerSearchResultComponent;\n","import queryString from 'query-string';\nimport React, { useContext } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\n\nimport { SessionContext } from '../../shared/contexts/session';\n\nimport PowerSearchActionBox from './components/power-search-action-box';\nimport PowerSearchResultComponent from './components/power-search-result';\n\nfunction ensureArray(value: string[] | string | null | undefined): string[] {\n  if (!Array.isArray(value)) {\n    if (value) {\n      return [value];\n    } else {\n      return [] as string[];\n    }\n  }\n\n  return value;\n}\n\nfunction PowerSearchResultContainer(): JSX.Element {\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n  if (!client) {\n    throw new Error('Client expected');\n  }\n\n  const location = useLocation();\n\n  const _query = queryString.parse(location.search);\n  const query = {\n    targetIds: ensureArray(_query.targets),\n    tagIds: ensureArray(_query.tags),\n    keywordlistIds: ensureArray(_query.keywordlists),\n    keywords: ensureArray(_query.keywords),\n    from: new Date(_query.from as string),\n    to: new Date(_query.to as string),\n  };\n\n  return (\n    <React.Fragment>\n      <h3>Power Search</h3>\n      <Row>\n        <Col md=\"8\">\n          <PowerSearchResultComponent query={query} client={client} />\n        </Col>\n        <Col md=\"3\">\n          <PowerSearchActionBox query={query} user={user} client={client} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default PowerSearchResultContainer;\n","import * as FAS from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport TimeAgo from 'react-timeago';\n\nimport { Report } from '../../../services/api-services/report';\nimport { InlineListMore } from '../InlineListMore';\n\nimport './ReportView.scss';\n\ntype ReportViewProps = {\n  report: Report;\n  size?: 'lg' | 'md' | 'sm';\n};\n\nexport function ReportView({ report, size = 'lg' }: ReportViewProps): JSX.Element {\n  const { documents } = report;\n\n  return (\n    <div className={`report-view report-view-${size}`}>\n      <span className=\"report-name\">{report.name}</span>\n      {(size === 'lg' || size === 'md') && <TimeAgo date={report.createdAt} />}\n      {(size === 'lg') &&\n        <div className=\"report-download\">\n          <FontAwesomeIcon icon={FAS.faCloudDownloadAlt} style={{width: 25}} />\n          {documents.length === 0 && 'Preparing...'}\n          {documents.length > 0 && <InlineListMore total={documents.length} limit={documents.length}>\n            {documents.map((document) => <a key={document.format} href={document.url}>{document.format}</a>)}\n          </InlineListMore>}\n        </div>\n      }\n    </div>\n  );\n}\n","import { Formik, Form as FormikForm } from 'formik';\nimport React, { useContext, useCallback, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CellProps } from 'react-table';\nimport * as Yup from 'yup';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listReports, Report, deleteReport, editReport, EditReportRequest } from '../../../services/api-services/report';\nimport { DeleteButton, SaveButton, CancelButton, EditButton } from '../../../shared/components/ActionButtons';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { ReportView } from '../../../shared/components/ReportView/ReportView';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListReportProps {\n  refresh?: boolean;\n  onUpdate?: () => void;\n}\n\ntype ReportForm = {\n  id: string;\n  name: string;\n}\n\nfunction ListReportComponent(props: ListReportProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n  if (!client) {\n    throw new Error('Client expected');\n  }\n\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const setToast = useContext(ToastContext);\n\n  const initialDefaultValue = {\n    id: '',\n    name: '',\n  };\n  const [initialValues, setInitialValues] = useState(initialDefaultValue);\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const fn = useCallback((offset: number, limit: number) => listReports(clientId, offset, limit), [clientId]);\n\n  const onDelete = useCallback(async (report: Report): Promise<void> => {\n    try {\n      await deleteReport(clientId, report.id);\n      setToast({ type: 'success', message: 'Report deleted successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  }, [clientId, onUpdate, setToast]);\n\n  const nameFn = useCallback((report: Report): string => report.name, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete Report', nameFn);\n\n  const editName = (data: CellProps<Report>): JSX.Element | string => {\n    const report = data.row.original;\n\n    if (initialValues.id === report.id) {\n      return (\n        <InputField type=\"text\" name=\"name\" disabled={isSubmitting} />\n      );\n    }\n\n    return <ReportView report={report} size=\"lg\" />;\n  };\n\n  const actionCell = (data: CellProps<Report>): JSX.Element => {\n    const report = data.row.original;\n    if (initialValues.id === report.id) {\n      return (\n        <React.Fragment>\n          <SaveButton type=\"submit\" />\n          <CancelButton onClick={(): void => setInitialValues(initialDefaultValue)} />\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <EditButton onClick={(): void => setInitialValues(report)}/>\n        <DeleteButton onClick={(): void => showDeleteModal(report)} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: editName,\n  }, {\n    Header: ' ',\n    Cell: actionCell,\n  }];\n\n  const onSubmit = async (values: ReportForm): Promise<void> => {\n    setIsSubmitting(true);\n    try {\n      if (!initialValues) {\n        throw new Error('Expected initial values');\n      }\n      const { id, name } = values;\n\n      const payload: EditReportRequest = {\n        name,\n      };\n\n      await editReport(payload, clientId, id);\n\n      setInitialValues(initialDefaultValue);\n      setToast({ type: 'success', message: 'Report updated successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4 className=\"modal-title\">Reports</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <FormikForm>\n          <PaginatedTable\n            fn={fn}\n            pageSize={10}\n            columns={columns}\n            refresh={refresh}\n          />\n        </FormikForm>\n      </Formik>\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default ListReportComponent;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport ListReportComponent from './components/list-report';\n\nfunction ReportContainer (): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Reports</h3>\n      <Row>\n        <Col md=\"8\">\n          <ListReportComponent refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default ReportContainer;\n","import { Formik, Form as FormikForm } from 'formik';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { AlertFrequency, AlertTypes, getSearchQueryById, Alert, editSearchQuery, createSearchQuery, Query } from '../../services/api-services/search-query';\nimport { ToastContext } from '../../shared/contexts/toast';\n\nimport SearchQueryForm from './components/search-query-form';\n\ntype CreateSearchQueryProps = {\n  query?: Query;\n  onUpdate?: () => void;\n}\n\nfunction CreateSearchQuery(props: CreateSearchQueryProps): JSX.Element {\n  const { onUpdate, query } = props;\n  const setToast = useContext(ToastContext);\n\n  const { clientId, editId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const defaultAlert: Alert = {\n    frequency: AlertFrequency.DAILY,\n    type: AlertTypes.EMAIL,\n    attributes: {\n      emailAddresses: [],\n    },\n  };\n\n  const [initialValues, setInitialValues] = useState({\n    name: '',\n    alerts: [defaultAlert],\n  });\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n    alerts: Yup.array().of(\n      Yup.object().shape({\n        frequency: Yup.string().required('Required').oneOf(Object.values(AlertFrequency)).label('Frequency'),\n        type: Yup.string().required('Required').oneOf(Object.values(AlertTypes)).label('Type'),\n        attributes: Yup.object().when('type', {\n          is: AlertTypes.EMAIL,\n          then: Yup.object().shape({\n            emailAddresses: Yup.array(\n              Yup.string().email().required('Required').label('Email')\n            ).required('Required').label('Email Addresses'),\n          }),\n        }).label('Attributes'),\n      })\n    ),\n  });\n\n  useEffect(() => {\n    async function fetchData(editId: string): Promise<void> {\n      if (!clientId) {\n        throw new Error('Client ID not found');\n      }\n\n      try {\n        const response = await getSearchQueryById(clientId, editId);\n\n        setInitialValues({\n          name: response.name,\n          alerts: response.alerts,\n        });\n      } catch (err) {\n        setToast({ type: 'error', message: err.message });\n      }\n    }\n\n    if (editId) {\n      fetchData(editId);\n    }\n  }, [clientId, editId, setToast]);\n\n  const onSubmit = async (values: SearchQueryForm): Promise<void> => {\n    try {\n      if (editId) {\n        await editSearchQuery(values, clientId, editId);\n\n        setToast({ type: 'success', message: 'Search Query updated successfully' });\n      } else if (query) {\n        await createSearchQuery({ ...values, query }, clientId);\n\n        setToast({ type: 'success', message: 'Search Query created successfully' });\n      }\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>{editId ? 'Edit' : 'Create'} Search Query</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {(_props): JSX.Element => (\n          <FormikForm>\n            <SearchQueryForm {..._props} />\n            <Button type=\"submit\" disabled={_props.isSubmitting}>Save</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreateSearchQuery;\n","import React, { useEffect } from 'react';\n\nexport default function useOnClickOutside(ref: React.RefObject<HTMLHeadingElement>, handler: Function): void {\n  useEffect(\n    () => {\n      const listener = (event: Event): void => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target as Node)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return (): void => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n","import React, { useState } from 'react';\n\nimport useOnClickOutside from '../../hooks/on-click-outside';\n\nimport './DropdownMenu.scss';\n\nexport type MenuItem = {\n  onClick: (event: React.MouseEvent) => void;\n  text: JSX.Element | string;\n}\n\ntype DropdownMenuProps = {\n  dropdownButtonValue: JSX.Element | string;\n  dropdownMenuItems: MenuItem[];\n}\n\nconst DropdownMenu = (props: DropdownMenuProps): JSX.Element => {\n  const { dropdownButtonValue, dropdownMenuItems } = props;\n\n  const [showMenu, setShowMenu] = useState(false);\n  const menuRef = React.useRef<HTMLDivElement>(null);\n\n  useOnClickOutside(menuRef, () => setShowMenu(false));\n\n  return (\n    <div className=\"dropdown\" ref={menuRef}>\n      <div className=\"dropdown-btn\" onClick={(): void => setShowMenu(!showMenu)}>\n        {dropdownButtonValue}\n      </div>\n      {showMenu && (\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n          {dropdownMenuItems.map((menuItem, key) => (\n            <button key={key} className=\"dropdown-item\" onClick={menuItem.onClick}>\n              {menuItem.text}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n","import * as FAS from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useCallback, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { PaginatedAPIFunc } from '../../../hooks/api';\nimport DropdownMenu, { MenuItem } from '../../../shared/components/DropdownMenu';\nimport { WithFixedPagination } from '../../../shared/components/tables/paginated-table';\n\nimport './paginated-grid.scss';\n\ntype PaginatedGridProps<T extends object> = {\n  fn: PaginatedAPIFunc<T>;\n  headingFn: (item: T) => string;\n  dropdownMenuFn: (item: T) => MenuItem[];\n  renderItem: (item: T) => JSX.Element;\n  pageSize: number;\n  refresh?: boolean;\n};\n\nexport function PaginatedGrid<T extends object>(props: PaginatedGridProps<T>): JSX.Element {\n  const { fn, headingFn, dropdownMenuFn, renderItem, pageSize, refresh = false } = props;\n\n  const renderCell = useCallback(({ data }) => {\n    return (\n      <Container fluid className=\"paginated-grid-layout\">\n        <Row>\n          {data.map((item: T, key: number) => {\n            const dropdownMenuItems = dropdownMenuFn(item);\n\n            return (\n              <Col key={key} sm={12} md={12} lg={12} xl={6}>\n                <div className=\"shadow-box\">\n                  <h4 className=\"with-dropdown\">\n                    {headingFn(item)}\n                    <DropdownMenu\n                      dropdownButtonValue={<FontAwesomeIcon icon={FAS.faEllipsisH} />}\n                      dropdownMenuItems={dropdownMenuItems}\n                    />\n                  </h4>\n                  {renderItem(item)}\n                </div>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    );\n  }, [headingFn, dropdownMenuFn, renderItem]);\n\n  const [Grid, refreshGrid] = WithFixedPagination(fn, pageSize, renderCell);\n\n  useEffect(() => {\n    refreshGrid();\n  }, [refresh, refreshGrid]);\n\n  return <Grid />;\n}\n","import React, { useCallback } from 'react';\n\nimport { useApi } from '../../../hooks/api';\nimport { powerSearch } from '../../../services/api-services/power-search';\nimport { Query } from '../../../services/api-services/search-query';\nimport AppSpinner from '../../../shared/components/layout/spinner';\nimport { PostView } from '../../../shared/components/PostView/PostView';\n\nimport './search-query-timeline.scss';\n\ninterface SearchQueryViewProps {\n  clientId: string;\n  query: Query;\n}\n\nfunction SearchQueryTimeline(props: SearchQueryViewProps): JSX.Element {\n  const { clientId, query } = props;\n\n  const fn = useCallback(() => {\n    const toDate = new Date();\n    const fromDate = new Date(toDate.getDate() - 1000 * 60 * 60 * 24 * 2);\n\n    return powerSearch({\n      ...query,\n      from: fromDate,\n      to: toDate,\n    }, clientId);\n  }, [clientId, query]);\n\n  const { loading, result, error } = useApi(fn);\n\n  if (loading) {\n    return <AppSpinner />;\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>;\n  }\n\n  if (!result || (result && result.data.length === 0)) {\n    return <>No posts in the last 48 hours</>;\n  }\n\n  return (\n    <div className=\"search-query-timeline\">\n      {\n        result.data\n          .map((post, key) => <PostView key={key} post={post} />)\n          .reduce<JSX.Element | null>((acc, x) => (acc === null ? x : <>{acc}<hr />{x}</>), null)\n      }\n    </div>\n  );\n}\n\nexport default SearchQueryTimeline;\n","import React, { useCallback, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listSearchQuery, SearchQuery, deleteSearchQuery } from '../../../services/api-services/search-query';\nimport { MenuItem } from '../../../shared/components/DropdownMenu';\nimport { PaginatedGrid } from '../../../shared/components/tables/paginated-grid';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\nimport SearchQueryTimeline from './search-query-timeline';\n\ntype ListSearchQueriesProps = {\n  refresh: boolean;\n  onUpdate?: () => void;\n};\n\nfunction ListSearchQueries(props: ListSearchQueriesProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const history = useHistory();\n\n  const setToast = useContext(ToastContext);\n\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const fn = useCallback((offset: number, limit: number) => listSearchQuery(clientId, offset, limit), [clientId]);\n  const headingFn = (searchQuery: SearchQuery): string => (`Feed for ${searchQuery.name}`);\n\n  const onDelete = useCallback(async (searchQuery: SearchQuery): Promise<void> => {\n    try {\n      await deleteSearchQuery(clientId, searchQuery.id);\n      setToast({ type: 'success', message: 'Search Query has been deleted' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  }, [clientId, onUpdate, setToast]);\n\n  const nameFn = useCallback((searchQuery: SearchQuery): string => searchQuery.name, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete Search Query', nameFn);\n\n  const dropdownMenuFn = (searchQuery: SearchQuery): MenuItem[] => ([{\n    text: 'Edit',\n    onClick: (): void => history.push(`/clients/${clientId}/alerts/edit/${searchQuery.id}`),\n  }, {\n    text: 'Delete',\n    onClick: (): void => showDeleteModal(searchQuery),\n  }]);\n\n  const renderItem = (searchQuery: SearchQuery): JSX.Element => (\n    <SearchQueryTimeline clientId={clientId} query={searchQuery.query} />\n  );\n\n  return (\n    <React.Fragment>\n      <PaginatedGrid\n        fn={fn}\n        headingFn={headingFn}\n        dropdownMenuFn={dropdownMenuFn}\n        renderItem={renderItem}\n        pageSize={6}\n        refresh={refresh}\n      />\n      <DeleteModal />\n    </React.Fragment>\n  );\n}\n\nexport default ListSearchQueries;\n","import React, { useState } from 'react';\n\nimport ListSearchQueries from './components/list-search-queries';\n\nfunction SearchQueryContainer (): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Alerts</h3>\n      <ListSearchQueries refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n    </React.Fragment>\n  );\n}\n\nexport default SearchQueryContainer;\n","import { Formik, Form as FormikForm, FormikHelpers } from 'formik';\nimport React, { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport * as Yup from 'yup';\n\nimport { CreateSuperUserRequest, createSuperUser } from '../../../services/api-services/user';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { ToastContext} from '../../../shared/contexts/toast';\n\ninterface CreateSuperUserProps {\n  onUpdate?: () => void;\n}\n\nfunction CreateSuperUserComponent(props: CreateSuperUserProps): JSX.Element {\n  const { onUpdate } = props;\n  const setToast = useContext(ToastContext);\n\n  const initialValues: CreateSuperUserRequest = {\n    email: '',\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email().required('Required').label('Email'),\n  });\n\n  const onSubmit = async (values: CreateSuperUserRequest, { resetForm }: FormikHelpers<CreateSuperUserRequest>): Promise<void> => {\n    try {\n      await createSuperUser(values);\n\n      resetForm();\n      setToast({ type: 'success', message: 'Super User Created Successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Invite a new Super Admin</h4>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"email\" name=\"email\" label=\"Email\" disabled={isSubmitting} />\n            <Button type=\"submit\" disabled={isSubmitting}>Invite</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreateSuperUserComponent;\n","import React from 'react';\n\nimport { SuperUser, ClientUser } from '../../../services/api-services/user';\n\nimport './UserView.scss';\n\ntype UserViewProps = {\n    user: SuperUser | ClientUser;\n    size?: 'lg' | 'md' | 'sm';\n    onClick?: (event: React.MouseEvent) => void;\n};\n\nexport function UserView({ user, size = 'lg', onClick }: UserViewProps): JSX.Element {\n  let up = '';\n  let down = '';\n\n  if (user.invitationAccepted) {\n    up = `${user.firstName} ${user.lastName}`;\n    down = user.email;\n  } else {\n    up = user.email;\n    down = 'Invitation pending';\n  }\n\n  return (\n    <div onClick={onClick} className={`user-view user-view-${size}`}>\n      <div className=\"user-text\">\n        <span className=\"user-text-up\">{up}</span>\n        { size === 'lg' && <span className=\"user-text-down\">{down}</span>}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport { CellProps } from 'react-table';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listSuperUsers, SuperUser, deleteSuperUser, resendUserInvitation } from '../../../services/api-services/user';\nimport { UserRoleText } from '../../../services/role-management/roles';\nimport { DeleteButton, EmailButton } from '../../../shared/components/ActionButtons';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { UserView } from '../../../shared/components/UserView/UserView';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListSuperUsersProps {\n  refresh: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListSuperUsersComponent(props: ListSuperUsersProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const setToast = useContext(ToastContext);\n  const [{ user }] = useContext(SessionContext);\n\n  if (!user) {\n    throw new Error('User not found');\n  }\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const fn = useCallback((offset: number, limit: number) => listSuperUsers(offset, limit), []);\n\n  const roleCell = (data: CellProps<SuperUser>): string => {\n    const superUser = data.cell.row.original;\n\n    return UserRoleText[superUser.role];\n  };\n\n  const resendInvitation = async (superUser: SuperUser): Promise<void> => {\n    setIsSubmitting(true);\n    try {\n      await resendUserInvitation(superUser.id);\n\n      setToast({ type: 'success', message: 'Invitation sent' });\n    } catch (error) {\n      setToast({ type: 'error', message: error.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const onDelete = useCallback(async (superUser: SuperUser): Promise<void> => {\n    setIsSubmitting(true);\n    try {\n      await deleteSuperUser(superUser.id);\n\n      setToast({ type: 'success', message: 'User deleted successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (error) {\n      setToast({ type: 'error', message: error.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [onUpdate, setToast]);\n\n  const nameFn = useCallback((superUser: SuperUser): string => superUser.email, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete User', nameFn);\n\n  const nameCell = (data: CellProps<SuperUser>): JSX.Element => {\n    const superUser = data.cell.row.original;\n\n    return (\n      <UserView user={superUser} size='lg' />\n    );\n  };\n\n  const actionCell = (data: CellProps<SuperUser>): JSX.Element | string=> {\n    const superUser = data.row.original;\n\n    if (user.id === superUser.id) {\n      return '';\n    }\n\n    return (\n      <React.Fragment>\n        {!superUser.invitationAccepted && <EmailButton title=\"Resend invitation\" onClick={async (): Promise<void> => resendInvitation(superUser)} disabled={isSubmitting} />}\n        <DeleteButton title=\"Delete\" onClick={(): void => showDeleteModal(superUser)} disabled={isSubmitting} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'User',\n    Cell: nameCell,\n  }, {\n    Header: 'Role',\n    Cell: roleCell,\n  }, {\n    Header: ' ',\n    Cell: actionCell,\n  }];\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>Users</h4>\n      <PaginatedTable\n        fn={fn}\n        pageSize={10}\n        columns={columns}\n        refresh={refresh}\n      />\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default ListSuperUsersComponent;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport CreateSuperUserComponent from './components/create-super-user';\nimport ListSuperUsersComponent from './components/list-super-users';\n\nfunction SuperUserContainer(): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Manage Super Users</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListSuperUsersComponent refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        <Col md=\"5\">\n          <CreateSuperUserComponent onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default SuperUserContainer;\n","import { Formik, Form as FormikForm, FormikHelpers } from 'formik';\nimport { useContext, useEffect, useState } from 'react';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { CreateTagRequest, getTagById, editTag, createTag, EditTagRequest } from '../../../services/api-services/tag';\nimport { Target, listTargets } from '../../../services/api-services/target';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { TargetField } from '../../../shared/components/formik/TargetField';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ntype TagForm = {\n  name: string;\n  targets: Target[];\n};\n\ninterface CreateTagProps {\n  onUpdate?: () => void;\n}\n\nfunction CreateTagComponent(props: CreateTagProps): JSX.Element {\n  const { onUpdate } = props;\n  const setToast = useContext(ToastContext);\n  const [{ user }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n\n  const { editId } = useParams();\n\n  const [initialValues, setInitialValues] = useState<TagForm>({\n    name: '',\n    targets: [] as Target[],\n  });\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().min(3).max(50).required('Required').label('Name'),\n    targets: Yup.array().min(1).required('Required').label('Targets'),\n  });\n\n  useEffect(() => {\n    async function fetchData(editId: string): Promise<void> {\n      try {\n        const response = await getTagById(editId);\n\n        setInitialValues({\n          name: response.name,\n          targets: response.targets,\n        });\n      } catch (err) {\n        setToast({ type: 'error', message: err.message });\n      }\n    }\n\n    if (editId) {\n      fetchData(editId);\n    }\n  }, [editId, setToast]);\n\n  const queryTargets = async (query: string): Promise<Target[]> => {\n    const { data } = await listTargets(0, 5, query);\n\n    return data;\n  };\n\n  const onSubmit = async (values: TagForm, { resetForm }: FormikHelpers<TagForm>): Promise<void> => {\n    try {\n      const payload: CreateTagRequest | EditTagRequest = {\n        name: values.name,\n        targetIds: values.targets.map((target) => target.id),\n      };\n\n      if (editId) {\n        await editTag(payload, editId);\n\n        setToast({ type: 'success', message: 'Tag edited successfully' });\n      } else {\n        await createTag(payload);\n\n        resetForm();\n        setToast({ type: 'success', message: 'Tag created successfully' });\n      }\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>{editId ? 'Edit' : 'Add'} Tag</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"text\" name=\"name\" label=\"Name\" disabled={isSubmitting} />\n            <TargetField name=\"targets\" fetchOptions={queryTargets} disabled={isSubmitting} />\n            <Button type=\"submit\" disabled={isSubmitting}>Save</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreateTagComponent;\n","import React, { useContext, useCallback } from 'react';\nimport { useHistory } from 'react-router';\nimport { CellProps } from 'react-table';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { TagWithCount, deleteTag, listTags } from '../../../services/api-services/tag';\nimport { EditButton, DeleteButton } from '../../../shared/components/ActionButtons';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { TagView } from '../../../shared/components/TagView/TagView';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListTagProps {\n    refresh?: boolean;\n    onUpdate?: () => void;\n  }\n\nfunction ListTagComponent(props: ListTagProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const [{ user }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n\n  const setToast = useContext(ToastContext);\n  const history = useHistory();\n\n  const fn = useCallback((offset: number, limit: number) => listTags(offset, limit), []);\n\n  const onDelete = useCallback(async (tag: TagWithCount): Promise<void> => {\n    try {\n      await deleteTag(tag.id);\n      setToast({ type: 'success', message: 'Tag deleted successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  }, [onUpdate, setToast]);\n\n  const nameFn = useCallback((tag: TagWithCount): string => tag.name, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete Tag', nameFn);\n\n  const nameCell = (data: CellProps<TagWithCount>): JSX.Element => {\n    const tag = data.cell.row.original;\n\n    return (\n      <TagView tag={tag} size=\"lg\" />\n    );\n  };\n\n  const action = (data: CellProps<TagWithCount>): JSX.Element => {\n    const tag = data.cell.row.original;\n\n    return (\n      <React.Fragment>\n        <EditButton onClick={(): void => history.push(`/tags/edit/${tag.id}`)} />\n        <DeleteButton onClick={(): void => showDeleteModal(tag)} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: nameCell,\n  }, {\n    Header: ' ',\n    Cell: action,\n  }];\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>Tags</h4>\n      <PaginatedTable\n        fn={fn}\n        pageSize={10}\n        columns={columns}\n        refresh={refresh}\n      />\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default ListTagComponent;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport CreateTagComponent from './components/create-tag';\nimport ListTagComponent from './components/list-tag';\n\nfunction TagContainer (): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Manage Tags</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListTagComponent refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        <Col md=\"5\">\n          <CreateTagComponent onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default TagContainer;\n","import { Formik, Form as FormikForm } from 'formik';\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport * as Yup from 'yup';\n\nimport { PLATFORM } from '../../../config/constants';\nimport { searchTarget, addTarget, SearchTargetRequest, TargetLookup } from '../../../services/api-services/target';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { ToastContext} from '../../../shared/contexts/toast';\n\ninterface AddTargetProps {\n  onUpdate?: () => void;\n}\n\nfunction AddTargetComponent(props: AddTargetProps): JSX.Element {\n  const { onUpdate } = props;\n  const setToast = useContext(ToastContext);\n  const form = useRef(null) as any;\n\n  const initialValues = {\n    platform: PLATFORM,\n    handle: '',\n  };\n  const validationSchema = Yup.object().shape({\n    platform: Yup.string().required('Required').label('Platform'),\n    handle: Yup.string().trim().min(3).required('Required').label('Handle'),\n  });\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [tempTarget, setTempTarget] = useState<TargetLookup>();\n\n  useEffect(() => {\n    setShowConfirmModal(!!tempTarget);\n  }, [tempTarget]);\n\n  const onSubmit = async (values: SearchTargetRequest): Promise<void> => {\n    try {\n      const target = await searchTarget(values);\n\n      setTempTarget(target);\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  const onConfirm = async (): Promise<void> => {\n    if (!tempTarget) {\n      throw new Error('Target was supposed to be filled by now');\n    }\n\n    try {\n      await addTarget({\n        platform: tempTarget.platform,\n        identifier: tempTarget.identifier,\n      });\n\n      form.current.resetForm();\n      setToast({ type: 'success', message: 'Target created successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    } finally {\n      setTempTarget(undefined);\n    }\n  };\n\n  const onClose = (): void => {\n    setTempTarget(undefined);\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Add Target</h4>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        innerRef={form}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"text\" name=\"handle\" label=\"Handle\" disabled={isSubmitting} />\n            <Button type=\"submit\" disabled={isSubmitting}>Add</Button>\n          </FormikForm>\n        )}\n      </Formik>\n      <ConfirmTargetModal\n        show={showConfirmModal}\n        target={tempTarget}\n        onClose={onClose}\n        onConfirm={onConfirm}\n      />\n    </div>\n  );\n}\n\nexport default AddTargetComponent;\n\ninterface ConfirmTargetModalProps {\n  show: boolean;\n  target?: TargetLookup;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nfunction ConfirmTargetModal(props: ConfirmTargetModalProps): JSX.Element {\n  const { show, target, onClose, onConfirm } = props;\n\n  const [modalSubmitted, setModalSubmitted] = useState(false);\n\n  useEffect(() => {\n    setModalSubmitted(false);\n  }, [target]);\n\n  const _onConfirm = (): void => {\n    setModalSubmitted(true);\n    onConfirm();\n  };\n\n  const name = target ? target.profile.name : 'Unknown';\n  const handle = target ? target.profile.handle : 'Unknown';\n\n  return (\n    <Modal show={show}>\n      <Modal.Header>\n        <Modal.Title>Confirm</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        Are you sure you want to add <strong>{name} (@{handle})</strong>?\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose} disabled={modalSubmitted}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={_onConfirm} disabled={modalSubmitted}>\n          Yes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useContext, useCallback} from 'react';\nimport { CellProps } from 'react-table';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listTargets, deleteTarget, Target } from '../../../services/api-services/target';\nimport { DeleteButton } from '../../../shared/components/ActionButtons';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { TargetView } from '../../../shared/components/TargetView/TargetView';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListTargetsProps {\n  refresh: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListTargetsComponent(props: ListTargetsProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n\n  const setToast = useContext(ToastContext);\n\n  const fn = useCallback((offset: number, limit: number) => listTargets(offset, limit), []);\n\n  const onDelete = useCallback(async (target: Target): Promise<void> => {\n    try {\n      await deleteTarget(target.id);\n\n      setToast({ type: 'success', message: 'Target deleted successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  }, [onUpdate, setToast]);\n\n  const nameFn = useCallback((target: Target): string => target.profile.name, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete Target', nameFn);\n\n  const nameCell = (data: CellProps<Target>): JSX.Element => {\n    const target = data.cell.row.original;\n\n    return (\n      <TargetView target={target} size='lg' />\n    );\n  };\n\n  const action = (data: CellProps<Target>): JSX.Element => {\n    const target = data.cell.row.original;\n\n    return (\n      <DeleteButton onClick={(): void => showDeleteModal(target)} />\n    );\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: nameCell,\n  }, {\n    Header: ' ',\n    Cell: action,\n  }];\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>Targets</h4>\n      <PaginatedTable\n        fn={fn}\n        pageSize={10}\n        columns={columns}\n        refresh={refresh}\n      />\n      <DeleteModal\n        message={(target: Target): JSX.Element => (\n          <React.Fragment>\n            This action cannot be undone. This will permanently delete the <strong>{target.profile.name}</strong> target and its associations.\n          </React.Fragment>\n        )}\n        confirmValue={(target: Target): string => target.profile.handle}\n      />\n    </div>\n  );\n}\n\nexport default ListTargetsComponent;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport AddTargetComponent from './components/add-target';\nimport ListTargetsComponent from './components/list-targets';\n\nfunction TargetContainer (): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Manage Targets</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListTargetsComponent refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        <Col md=\"5\">\n          <AddTargetComponent onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default TargetContainer;\n","import React, { useContext, useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { CellProps } from 'react-table';\n\nimport { listUserClients, UserClient } from '../../../services/api-services/client';\nimport { acceptClientInvitation } from '../../../services/api-services/invitation';\nimport { ClientView } from '../../../shared/components/ClientView/ClientView';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListClientsProps {\n  filter: 'all' | 'accepted' | 'pending';\n  refresh: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListUserClientsComponents(props: ListClientsProps): JSX.Element {\n  const { filter, refresh, onUpdate } = props;\n  const history = useHistory();\n  const [, dispatchSession] = useContext(SessionContext);\n  const setToast = useContext(ToastContext);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const fn = useCallback((offset: number, limit: number) => listUserClients(filter, offset, limit), [filter]);\n\n  const gotoClient = (client: UserClient): void => {\n    history.push(`/clients/${client.id}/dashboard`);\n    dispatchSession({\n      type: 'SET_CLIENT',\n      client: {\n        id: client.id,\n        name: client.name,\n        role: client.clientRole,\n      },\n    });\n  };\n\n  const acceptInvitation = async (client: UserClient): Promise<void> => {\n    setIsSubmitting(true);\n    try {\n      await acceptClientInvitation(client.id);\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const nameCell = (data: CellProps<UserClient>): JSX.Element => {\n    const client = data.row.original;\n\n    return (\n      <ClientView client={client} size=\"lg\" />\n    );\n  };\n\n  const actionCell = (data: CellProps<UserClient>): JSX.Element => {\n    const client = data.row.original;\n\n    if (client.invitationAccepted) {\n      return (\n        <Button onClick={(): void => gotoClient(client)} disabled={isSubmitting}>Go to Dashboard</Button>\n      );\n    } else {\n      return (\n        <Button onClick={(): Promise<void> => acceptInvitation(client)} disabled={isSubmitting}>Accept Invitation</Button>\n      );\n    }\n  };\n\n  const columns = [{\n    Header: 'Name',\n    Cell: nameCell,\n  }, {\n    Header: ' ',\n    Cell: actionCell,\n  }];\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <PaginatedTable\n        fn={fn}\n        pageSize={10}\n        columns={columns}\n        refresh={refresh}\n      />\n    </div>\n  );\n}\n\nexport default ListUserClientsComponents;\n","import React, { useState } from 'react';\n\nimport ListUserClientsComponents from './components/list-user-clients';\n\nfunction UserClientContainer(): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Choose User Group</h3>\n      <ListUserClientsComponents filter=\"all\" refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n    </React.Fragment>\n  );\n}\n\nexport default UserClientContainer;\n","import { Formik, Form as FormikForm, FormikHelpers } from 'formik';\nimport React, { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport * as Yup from 'yup';\n\nimport { changeUserPassword } from '../../../services/api-services/user';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ntype ChangePasswordForm = {\n  currentPassword: string;\n  password: string;\n  confirmPassword: string;\n}\n\nfunction ChangePassword(): JSX.Element {\n  const setToast = useContext(ToastContext);\n\n  const initialValues = {\n    currentPassword: '',\n    password: '',\n    confirmPassword: '',\n  };\n  const validationSchema = Yup.object().shape({\n    currentPassword: Yup.string().required('Required').label('Current Password'),\n    password: Yup.string().min(3).max(50).required('Required').label('Password'),\n    confirmPassword: Yup.string().required('Required').oneOf([Yup.ref('password'), null], 'Password must match').label('Confirm Password'),\n  });\n\n  const onSubmit = async (values: ChangePasswordForm, { resetForm }: FormikHelpers<ChangePasswordForm>): Promise<void> => {\n    try {\n      const { currentPassword, password } = values;\n\n      await changeUserPassword({ currentPassword, password });\n\n      resetForm();\n      setToast({ type: 'success', message: 'Password changed successfully' });\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Change Password</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"password\" name=\"currentPassword\" label=\"Current Password\" disabled={isSubmitting} />\n            <InputField type=\"password\" name=\"password\" label=\"New Password\" disabled={isSubmitting} />\n            <InputField type=\"password\" name=\"confirmPassword\" label=\"Confirm Password\" disabled={isSubmitting} />\n            <Button type=\"submit\" disabled={isSubmitting}>Save</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ChangePassword;\n","import { Formik, Form as FormikForm } from 'formik';\nimport React, { useContext, useCallback } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport * as Yup from 'yup';\n\nimport { useApi } from '../../../hooks/api';\nimport { editUser, User, getUser } from '../../../services/api-services/user';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport AppSpinner from '../../../shared/components/layout/spinner';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ntype EditProfileForm = {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\ntype EditProfileProps = {\n  onUpdate?: (user: User) => void;\n}\n\nfunction EditProfile(props: EditProfileProps): JSX.Element {\n  const { onUpdate } = props;\n\n  const setToast = useContext(ToastContext);\n\n  const fn = useCallback(() => getUser('me'), []);\n  const { error, loading, result: user } = useApi(fn);\n\n  const initialValues = {\n    firstName: user ? user.firstName : '',\n    lastName: user ? user.lastName : '',\n    email: user ? user.email : '',\n  };\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().trim().min(1).max(50).required('Required').label('First name'),\n    lastName: Yup.string().trim().min(1).max(50).required('Required').label('Last name'),\n  });\n\n  const onSubmit = async (values: EditProfileForm): Promise<void> => {\n    try {\n      const { firstName, lastName } = values;\n\n      const _user = await editUser({ firstName, lastName });\n\n      if (onUpdate) {\n        onUpdate(_user);\n      }\n\n      setToast({ type: 'success', message: 'Profile updated successfully' });\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Edit Profile</h4>\n      {!user && loading && <AppSpinner />}\n      {!user && error && error.message}\n      {user &&\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {({ isSubmitting }): JSX.Element => (\n            <FormikForm>\n              <Row>\n                <Col md=\"6\">\n                  <InputField type=\"text\" name=\"firstName\" label=\"First name\" disabled={isSubmitting} />\n                </Col>\n                <Col md=\"6\">\n                  <InputField type=\"text\" name=\"lastName\" label=\"Last name\" disabled={isSubmitting} />\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"12\">\n                  <InputField type=\"email\" name=\"email\" label=\"Email\" disabled={true} />\n                </Col>\n              </Row>\n              <Button type=\"submit\" disabled={isSubmitting}>Save</Button>\n            </FormikForm>\n          )}\n        </Formik>\n      }\n    </div>\n  );\n}\n\nexport default EditProfile;\n","import { Formik, Form as FormikForm, FormikHelpers } from 'formik';\nimport React, { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport * as Yup from 'yup';\n\nimport { CreateClientUserRequest, createClientUser } from '../../../services/api-services/user';\nimport { ClientRoleText, ClientRole } from '../../../services/role-management/roles';\nimport { Dropdown } from '../../../shared/components/formik/Dropdown';\nimport { InputField } from '../../../shared/components/formik/InputField';\nimport { ToastContext} from '../../../shared/contexts/toast';\n\ninterface CreateUserProps {\n  onUpdate?: () => void;\n}\n\nfunction CreateUserComponent(props: CreateUserProps): JSX.Element {\n  const { onUpdate } = props;\n  const { clientId } = useParams();\n\n  const setToast = useContext(ToastContext);\n\n  const initialValues: CreateClientUserRequest = {\n    email: '',\n    clientRole: ClientRole.ADMIN,\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email().required('Required').label('Email'),\n    clientRole: Yup.mixed().oneOf(Object.keys(ClientRoleText)).label('Role'),\n  });\n\n  const onSubmit = async (values: CreateClientUserRequest, { resetForm }: FormikHelpers<CreateClientUserRequest>): Promise<void> => {\n    try {\n      await createClientUser(values, clientId || '');\n\n      resetForm();\n      setToast({ type: 'success', message: 'User created successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    }\n  };\n\n  return (\n    <div className=\"shadow-box\">\n      <h4>Invite a new User</h4>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }): JSX.Element => (\n          <FormikForm>\n            <InputField type=\"email\" name=\"email\" label=\"Email\" disabled={isSubmitting} />\n            <Dropdown label=\"Role\" name=\"clientRole\" options={ClientRoleText} disabled={isSubmitting} />\n            <Button type=\"submit\" disabled={isSubmitting}>Invite</Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreateUserComponent;\n","import { Formik, Form as FormikForm } from 'formik';\nimport React, { useCallback, useState, useContext } from 'react';\nimport { useParams } from 'react-router';\nimport { CellProps } from 'react-table';\nimport * as Yup from 'yup';\n\nimport { useDeleteModal } from '../../../hooks/delete-modal';\nimport { listClientUsers, ClientUser, editClientUser, deleteClientUser, EditClientUserRequest, resendClientUserInvitation } from '../../../services/api-services/user';\nimport { ClientRoleText, ClientRole } from '../../../services/role-management/roles';\nimport { EditButton, DeleteButton, CancelButton, SaveButton, EmailButton } from '../../../shared/components/ActionButtons';\nimport { Dropdown } from '../../../shared/components/formik/Dropdown';\nimport { PaginatedTable } from '../../../shared/components/tables/paginated-table';\nimport { UserView } from '../../../shared/components/UserView/UserView';\nimport { SessionContext } from '../../../shared/contexts/session';\nimport { ToastContext } from '../../../shared/contexts/toast';\n\ninterface ListUsersProps {\n  refresh: boolean;\n  onUpdate?: () => void;\n}\n\nfunction ListUsersComponent(props: ListUsersProps): JSX.Element {\n  const { refresh, onUpdate } = props;\n  const { clientId } = useParams();\n  if (!clientId) {\n    throw new Error('Client ID not found');\n  }\n\n  const setToast = useContext(ToastContext);\n  const [{ user }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User not found');\n  }\n\n  const initialDefaultValue = {\n    id: '',\n    clientRole: ClientRole.ADMIN,\n  };\n  const [initialValues, setInitialValues] = useState(initialDefaultValue);\n  const validationSchema = Yup.object().shape({\n    clientRole: Yup.mixed().oneOf(Object.keys(ClientRoleText)).label('Role'),\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const fn = useCallback((offset: number, limit: number) => listClientUsers(clientId, offset, limit), [clientId]);\n\n  const resendInvitation = async (user: ClientUser): Promise<void> => {\n    setIsSubmitting(true);\n    try {\n      await resendClientUserInvitation(clientId, user.id);\n\n      setToast({ type: 'success', message: 'Invitation sent' });\n    } catch (error) {\n      setToast({ type: 'error', message: error.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const onDelete = useCallback(async (user: ClientUser): Promise<void> => {\n    setIsSubmitting(true);\n    try {\n      await deleteClientUser(clientId, user.id);\n\n      setToast({ type: 'success', message: 'User deleted successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (error) {\n      setToast({ type: 'error', message: error.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [clientId, onUpdate, setToast]);\n\n  const nameFn = useCallback((user: ClientUser): string => user.email, []);\n  const [DeleteModal, showDeleteModal] = useDeleteModal(onDelete, 'Delete User', nameFn);\n\n  const editClientRole = (data: CellProps<ClientUser>): JSX.Element | string => {\n    const client = data.cell.row.original;\n\n    if (initialValues.id === client.id) {\n      return (\n        <Dropdown name=\"clientRole\" options={ClientRoleText} disabled={isSubmitting} />\n      );\n    }\n\n    return ClientRoleText[client.clientRole];\n  };\n\n  const nameCell = (data: CellProps<ClientUser>): JSX.Element => {\n    const clientUser = data.cell.row.original;\n\n    return (\n      <UserView user={clientUser} size='lg' />\n    );\n  };\n\n  const actionCell = (data: CellProps<ClientUser>): JSX.Element | string => {\n    const clientUser = data.row.original;\n\n    if (user.id === clientUser.id) {\n      return '';\n    }\n\n    if (initialValues.id === clientUser.id) {\n      return (\n        <React.Fragment>\n          <SaveButton title=\"Save\" type=\"submit\" disabled={isSubmitting} />\n          <CancelButton title=\"Cancel\" onClick={(): void => setInitialValues(initialDefaultValue)} disabled={isSubmitting} />\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {clientUser.invitationAccepted && <EditButton title=\"Edit\" onClick={(): void => setInitialValues(clientUser)} disabled={isSubmitting} />}\n        {!clientUser.invitationAccepted && <EmailButton title=\"Resent invitation\" onClick={async (): Promise<void> => resendInvitation(clientUser)} disabled={isSubmitting} />}\n        <DeleteButton title=\"Delete\" onClick={(): void => showDeleteModal(clientUser)} disabled={isSubmitting} />\n      </React.Fragment>\n    );\n  };\n\n  const columns = [{\n    Header: 'User',\n    Cell: nameCell,\n  }, {\n    Header: 'Role',\n    Cell: editClientRole,\n  }, {\n    Header: ' ',\n    Cell: actionCell,\n  }];\n\n  const onSubmit = async (values: EditClientUserRequest): Promise<void> => {\n    setIsSubmitting(true);\n    try {\n      await editClientUser({ clientRole: values.clientRole }, clientId, initialValues.id);\n\n      setInitialValues(initialDefaultValue);\n      setToast({ type: 'success', message: 'User edited successfully' });\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (err) {\n      setToast({ type: 'error', message: err.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"shadow-box editable-table\">\n      <h4>Users</h4>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <FormikForm>\n          <PaginatedTable\n            fn={fn}\n            pageSize={10}\n            columns={columns}\n            refresh={refresh}\n          />\n        </FormikForm>\n      </Formik>\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default ListUsersComponent;\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport CreateUserComponent from './components/create-user';\nimport ListUsersComponent from './components/list-users';\n\nfunction UserContainer(): JSX.Element {\n  const [refresh, setRefresh] = useState(false);\n\n  return (\n    <React.Fragment>\n      <h3>Manage Users</h3>\n      <Row>\n        <Col md=\"7\">\n          <ListUsersComponent refresh={refresh} onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n        <Col md=\"5\">\n          <CreateUserComponent onUpdate={(): void => setRefresh(!refresh)} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default UserContainer;\n","import React from 'react';\n\nfunction WIP(): JSX.Element {\n  return <h3>Work in progress</h3>;\n}\n\nexport default WIP;\n","import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport * as FAR from '@fortawesome/free-regular-svg-icons';\nimport * as FAS from '@fortawesome/free-solid-svg-icons';\n\nimport ClientDashboard from '../../modules/client-dashboard/dashboard.container';\nimport ClientKeywordlistContainer from '../../modules/client-keywordlist/client-keywordlist.container';\nimport CreateClientKeywordlistComponent from '../../modules/client-keywordlist/components/create-keywordlist';\nimport ClientTagContainer from '../../modules/client-tag/client-tag.container';\nimport CreateClientTagComponent from '../../modules/client-tag/components/create-tag';\nimport ClientTargetContainer from '../../modules/client-target/client-target.container';\nimport ClientContainer from '../../modules/client/client.container';\nimport Dashboard from '../../modules/dashboard/dashboard.container';\nimport CreateKeywordlistComponent from '../../modules/keywordlist/components/create-keywordlist';\nimport KeywordlistContainer from '../../modules/keywordlist/keywordlist.container';\nimport PowerSearchQueryContainer from '../../modules/power-search/power-search-query.container';\nimport PowerSearchResultContainer from '../../modules/power-search/power-search-result.container';\nimport ReportContainer from '../../modules/report/report.container';\nimport CreateSearchQueryContainer from '../../modules/search-query/create-search-query.container';\nimport SearchQueryContainer from '../../modules/search-query/search-query.container';\nimport SuperUserContainer from '../../modules/super-user/super-user.container';\nimport CreateTagComponent from '../../modules/tag/components/create-tag';\nimport TagContainer from '../../modules/tag/tag.container';\nimport TargetContainer from '../../modules/target/target.container';\nimport UserClientContainer from '../../modules/user-client/user-client.container';\nimport UserSettingsContainer from '../../modules/user-settings/user-settings.container';\nimport UserContainer from '../../modules/user/user.container';\nimport WIP from '../../shared/components/WIP';\nimport { Session } from '../../shared/contexts/session';\n\nimport { UserRole, ClientRole } from './roles';\n\nexport type Route = {\n  component: (props?: any) => JSX.Element;\n  name: string;\n  url: string;\n  sidebar: boolean;\n  icon?: IconDefinition;\n  userRoles: UserRole[];\n  clientRoles?: ClientRole[];\n}\n\nconst routes: Route[] = [{\n  // Common\n  component: UserSettingsContainer,\n  name: 'Settings',\n  url: '/settings',\n  sidebar: false,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  // Super Admin only\n  component: Dashboard,\n  name: 'Dashboard',\n  url: '/dashboard',\n  sidebar: true,\n  icon: FAS.faTachometerAlt,\n  userRoles: [UserRole.ADMIN],\n}, {\n  component: ClientContainer,\n  name: 'Clients',\n  url: '/clients',\n  sidebar: true,\n  icon: FAS.faUsers,\n  userRoles: [UserRole.ADMIN],\n}, {\n  component: SuperUserContainer,\n  url: '/users',\n  name: 'Users',\n  sidebar: true,\n  icon: FAS.faUser,\n  userRoles: [UserRole.ADMIN],\n}, {\n  component: KeywordlistContainer,\n  url: '/keywordlists',\n  name: 'Keyword Lists',\n  sidebar: true,\n  icon: FAS.faListUl,\n  userRoles: [UserRole.ADMIN],\n}, {\n  component: CreateKeywordlistComponent,\n  url: '/keywordlists/edit/:editId',\n  name: 'Edit Keyword List',\n  sidebar: false,\n  userRoles: [UserRole.ADMIN],\n}, {\n  component: TargetContainer,\n  name: 'Targets',\n  url: '/targets',\n  sidebar: true,\n  icon: FAS.faBullseye,\n  userRoles: [UserRole.ADMIN],\n}, {\n  component: TagContainer,\n  name: 'Tags',\n  url: '/tags',\n  sidebar: true,\n  icon: FAS.faTags,\n  userRoles: [UserRole.ADMIN],\n}, {\n  component: CreateTagComponent,\n  url: '/tags/edit/:editId',\n  name: 'Edit Tag',\n  sidebar: false,\n  userRoles: [UserRole.ADMIN],\n},\n// Client specific\n{\n  component: UserClientContainer,\n  name: 'Choose User Group',\n  url: '/clients',\n  sidebar: false,\n  icon: FAS.faUsers,\n  userRoles: [UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: ClientDashboard,\n  name: 'Dashboard',\n  url: '/clients/:clientId/dashboard',\n  sidebar: true,\n  icon: FAS.faTachometerAlt,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: UserContainer,\n  url: '/clients/:clientId/users',\n  name: 'Users',\n  sidebar: true,\n  icon: FAS.faUser,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN],\n}, {\n  component: ClientKeywordlistContainer,\n  url: '/clients/:clientId/keywordlists',\n  name: 'Keyword Lists',\n  sidebar: true,\n  icon: FAS.faListUl,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  url: '/clients/:clientId/keywordlists/edit/:editId',\n  component: CreateClientKeywordlistComponent,\n  name: 'Edit Keyword List',\n  sidebar: false,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: ClientTargetContainer,\n  name: 'Targets',\n  url: '/clients/:clientId/targets',\n  sidebar: true,\n  icon: FAS.faBullseye,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: ClientTagContainer,\n  name: 'Tags',\n  url: '/clients/:clientId/tags',\n  sidebar: true,\n  icon: FAS.faTags,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: CreateClientTagComponent,\n  url: '/clients/:clientId/tags/edit/:editId',\n  name: 'Edit Tag',\n  sidebar: false,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: PowerSearchQueryContainer,\n  name: 'Power Search',\n  url: '/clients/:clientId/power-search',\n  sidebar: true,\n  icon: FAS.faSearch,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: PowerSearchResultContainer,\n  name: 'Power Search',\n  url: '/clients/:clientId/power-search-result',\n  sidebar: false,\n  icon: FAS.faSearch,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: ReportContainer,\n  name: 'Reports',\n  url: '/clients/:clientId/reports',\n  sidebar: true,\n  icon: FAR.faFolderOpen,\n  userRoles: [UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: SearchQueryContainer,\n  name: 'Alerts',\n  url: '/clients/:clientId/alerts',\n  sidebar: true,\n  icon: FAR.faBell,\n  userRoles: [UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: CreateSearchQueryContainer,\n  name: 'Edit Alert',\n  url: '/clients/:clientId/alerts/edit/:editId',\n  sidebar: false,\n  icon: FAR.faBell,\n  userRoles: [UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}, {\n  component: WIP,\n  name: 'Insights',\n  url: '/clients/:clientId/insights',\n  sidebar: true,\n  icon: FAR.faLightbulb,\n  userRoles: [UserRole.ADMIN, UserRole.CLIENT],\n  clientRoles: [ClientRole.ADMIN, ClientRole.ANALYST, ClientRole.VETTER],\n}];\n\nexport function getRoutes({ user, client }: Session): Route[] {\n  if (!user) {\n    return [];\n  }\n\n  let filteredRoutes = routes.filter((route) => route.userRoles.includes(user.role));\n\n  if (client && user.role === UserRole.CLIENT) {\n    filteredRoutes = filteredRoutes.filter((route) => route.clientRoles && client.role && route.clientRoles.includes(client.role));\n  }\n\n  return filteredRoutes;\n}\n","import React, { useContext } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport { User } from '../../services/api-services/user';\nimport { SessionContext } from '../../shared/contexts/session';\n\nimport ChangePassword from './components/change-password';\nimport EditProfile from './components/edit-profile';\n\nfunction UserSettingsContainer(): JSX.Element {\n  const [{ user }, dispatchSession] = useContext(SessionContext);\n\n  const onUpdate = (_user: User): void => {\n    const profile = {\n      id: _user.id,\n      email: _user.email,\n      firstName: _user.firstName,\n      lastName: _user.lastName,\n      role: _user.role,\n      invitationAccepted: _user.invitationAccepted,\n    };\n\n    dispatchSession({ type: 'SET_USER', user, profile });\n  };\n\n  return (\n    <React.Fragment>\n      <h3>Settings</h3>\n      <Row>\n        <Col md=\"6\">\n          <EditProfile onUpdate={onUpdate} />\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"6\">\n          <ChangePassword />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default UserSettingsContainer;\n","import * as FAR from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport './PageNotFound.scss';\n\nexport function PageNotFound(): JSX.Element {\n  return (\n    <div className=\"page-not-found\">\n      <FontAwesomeIcon icon={FAR.faSadCry} size=\"10x\" /><br />\n      <h1>404</h1>\n      <span>Page not found</span>\n    </div>\n  );\n}\n","import * as FAS from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useContext } from 'react';\nimport { Button, Form, FormControl, InputGroup, Navbar } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\n\nimport useOnClickOutside from '../../../hooks/on-click-outside';\nimport { UserRole, UserRoleText, ClientRoleText } from '../../../services/role-management/roles';\nimport { SessionContext } from '../../contexts/session';\n\nimport './header.scss';\n\nfunction Header(): JSX.Element {\n  const [state, dispatchSession] = useContext(SessionContext);\n  const { user, profile, client } = state;\n  if (!user || !profile) {\n    throw new Error('User expected');\n  }\n\n  const menuRef = React.useRef<HTMLHeadingElement>(null);\n  const [showDropdown, setShowDropdown] = React.useState(false);\n  const history = useHistory();\n\n  useOnClickOutside(menuRef, () => setShowDropdown(false));\n\n  const settings = (): void => {\n    history.push('/settings');\n    setShowDropdown(false);\n  };\n\n  const switchClient = (): void => {\n    history.push('/clients');\n    setShowDropdown(false);\n  };\n\n  const logout = (): void => {\n    dispatchSession({ type: 'LOGOUT' });\n    setShowDropdown(false);\n\n    history.push('/');\n  };\n\n  const userName = `${profile.firstName} ${profile.lastName}`;\n\n  let clientName = '';\n  if (user.role === UserRole.CLIENT && client && client.role) {\n    clientName = client.name;\n  }\n\n  let role = '';\n  if (user.role === UserRole.ADMIN) {\n    role = UserRoleText[user.role];\n  } else if (user.role === UserRole.CLIENT && client && client.role) {\n    role = ClientRoleText[client.role];\n  }\n\n  return (\n    <Navbar expand=\"lg\">\n      <Form inline>\n        <InputGroup className=\"border\">\n          <FormControl aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" placeholder=\"Search usernames\" />\n          <InputGroup.Prepend>\n            <Button>Search</Button>\n          </InputGroup.Prepend>\n        </InputGroup>\n      </Form>\n      <Navbar.Collapse className=\"justify-content-end\">\n        <div className=\"dropdown\" ref={menuRef}>\n          <div className=\"dropdown-btn\" onClick={(): void => setShowDropdown(!showDropdown)}>\n            <div className=\"user-name\">{userName}</div>\n            {user.role === UserRole.ADMIN && <div className=\"company\">{role}</div>}\n            {user.role === UserRole.CLIENT && <div className=\"company\">{clientName} - {role}</div>}\n          </div>\n          {showDropdown && (\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <button className=\"dropdown-item\" onClick={settings}>\n                <FontAwesomeIcon icon={FAS.faCogs} />\n                <span>Settings</span>\n              </button>\n              { user.role === UserRole.CLIENT && <button className=\"dropdown-item\" onClick={switchClient}>\n                <FontAwesomeIcon icon={FAS.faUsers} />\n                <span>Switch User Group</span>\n              </button>\n              }\n              <button className=\"dropdown-item\" onClick={logout}>\n                <FontAwesomeIcon icon={FAS.faSignOutAlt} />\n                <span>Logout</span>\n              </button>\n            </div>\n          )}\n        </div>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React, { CSSProperties } from 'react';\n\ntype SVGProps = {\n  style?: CSSProperties;\n}\nexport function Logo({ style = { fill: '#6c757c' } }: SVGProps): JSX.Element {\n  return (\n    <svg\n      style={style}\n      xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 130 30\" width=\"130\" height=\"30\"\n    >\n      <path id=\"square\" d=\"M10.63 8.03L24.13 8.03L24.13 21.56L10.63 21.56L10.63 8.03Z\" />\n      <path id=\"text\" d=\"M36.1 22.57Q35.49 22.57 35.14 22.24Q34.8 21.9 34.8 21.3L34.8 9.15Q34.8 8.55 35.14 8.22Q35.49 7.88 36.1 7.88L40.22 7.88Q43.82 7.88 45.8 9.82Q47.8 11.74 47.8 15.22Q47.8 18.72 45.8 20.65Q43.82 22.57 40.22 22.57L36.1 22.57ZM37.49 20.38L40.05 20.38Q45.12 20.38 45.12 15.22Q45.12 10.07 40.05 10.07L37.49 10.07L37.49 20.38ZM56.01 18.57Q55.35 18.57 54.91 18.13Q54.47 17.67 54.47 17.01Q54.47 16.34 54.91 15.9Q55.35 15.44 56.01 15.44Q56.68 15.44 57.12 15.9Q57.55 16.34 57.55 17.01Q57.55 17.67 57.12 18.13Q56.68 18.57 56.01 18.57ZM68.49 22.67Q67.87 22.67 67.49 22.32Q67.14 21.94 67.14 21.34L67.14 10.09L63.35 10.09Q62.1 10.09 62.1 8.99Q62.1 7.88 63.35 7.88L73.62 7.88Q74.87 7.88 74.87 8.99Q74.87 10.09 73.62 10.09L69.82 10.09L69.82 21.34Q69.82 21.94 69.45 22.32Q69.1 22.67 68.49 22.67ZM78.57 22.57Q77.97 22.57 77.62 22.24Q77.28 21.9 77.28 21.3L77.28 9.15Q77.28 8.55 77.62 8.22Q77.97 7.88 78.57 7.88L86.1 7.88Q86.7 7.88 87.03 8.15Q87.37 8.42 87.37 8.92Q87.37 9.44 87.03 9.74Q86.7 10.01 86.1 10.01L79.91 10.01L79.91 14.05L85.68 14.05Q86.28 14.05 86.62 14.32Q86.95 14.59 86.95 15.11Q86.95 15.61 86.62 15.88Q86.28 16.15 85.68 16.15L79.91 16.15L79.91 20.44L86.1 20.44Q86.7 20.44 87.03 20.74Q87.37 21.01 87.37 21.53Q87.37 22.03 87.03 22.3Q86.7 22.57 86.1 22.57L78.57 22.57ZM96.91 22.76Q94.78 22.76 93.18 21.84Q91.6 20.92 90.74 19.22Q89.89 17.51 89.89 15.22Q89.89 12.92 90.74 11.24Q91.6 9.53 93.18 8.61Q94.78 7.69 96.91 7.69Q98.28 7.69 99.49 8.11Q100.7 8.51 101.64 9.28Q101.91 9.49 102.01 9.72Q102.12 9.94 102.12 10.28Q102.12 10.74 101.87 11.05Q101.62 11.36 101.26 11.36Q100.85 11.36 100.41 11.07Q99.51 10.4 98.74 10.15Q97.97 9.88 97.03 9.88Q94.87 9.88 93.74 11.24Q92.64 12.59 92.64 15.22Q92.64 17.86 93.74 19.22Q94.87 20.57 97.03 20.57Q97.93 20.57 98.68 20.3Q99.45 20.03 100.41 19.38Q100.62 19.26 100.82 19.17Q101.03 19.09 101.26 19.09Q101.62 19.09 101.87 19.4Q102.12 19.72 102.12 20.17Q102.12 20.49 102.01 20.74Q101.91 20.97 101.64 21.17Q100.7 21.94 99.49 22.36Q98.28 22.76 96.91 22.76ZM116.78 7.78Q117.39 7.78 117.74 8.15Q118.1 8.51 118.1 9.11L118.1 21.34Q118.1 21.94 117.72 22.32Q117.37 22.69 116.78 22.69Q116.18 22.69 115.82 22.32Q115.47 21.94 115.47 21.34L115.47 16.19L107.95 16.19L107.95 21.34Q107.95 21.94 107.57 22.32Q107.22 22.69 106.62 22.69Q106.03 22.69 105.66 22.32Q105.3 21.94 105.3 21.34L105.3 9.11Q105.3 8.51 105.66 8.15Q106.01 7.78 106.62 7.78Q107.22 7.78 107.57 8.15Q107.95 8.51 107.95 9.11L107.95 14.03L115.47 14.03L115.47 9.11Q115.47 8.51 115.82 8.15Q116.18 7.78 116.78 7.78Z\" />\n    </svg>\n  );\n}\n","import * as fonts from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useContext } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport { UserRole } from '../../../services/role-management/roles';\nimport { getRoutes, Route } from '../../../services/role-management/routes';\nimport { SessionContext } from '../../contexts/session';\nimport { Logo } from '../Logo';\n\nimport './sidebar.scss';\n\ninterface NavSectionProps {\n  title: string;\n  routes: Route[];\n}\n\nfunction NavSection(props: NavSectionProps): JSX.Element {\n  const { title, routes } = props;\n  const [{ client }] = useContext(SessionContext);\n\n  return (\n    <React.Fragment>\n      <Nav.Item className=\"role-head\">{title}</Nav.Item>\n      {routes.map((route, key) => {\n        let url = route.url;\n        if (url.indexOf('/:clientId') !== -1) {\n          const clientId = client ? client.id : 'unknown';\n\n          url = url.replace('/:clientId', `/${clientId}`);\n        }\n\n        return (\n          <Nav.Link as={NavLink} to={url} key={key}>\n            <FontAwesomeIcon icon={route.icon ? route.icon : fonts.faCircle} size=\"sm\" className=\"icon\" />\n            {route.name}\n          </Nav.Link>\n        );\n      }\n      )}\n    </React.Fragment>\n  );\n}\n\nfunction Sidebar(): JSX.Element {\n  const [{ user, client }] = useContext(SessionContext);\n  if (!user) {\n    throw new Error('User expected');\n  }\n\n  const routes = getRoutes({ user, client }).filter(route => route.sidebar);\n  const adminRoutes = routes.filter(route => route.userRoles.length === 1 && route.userRoles.includes(UserRole.ADMIN));\n  const clientRoutes = routes.filter(route => route.userRoles.includes(UserRole.CLIENT));\n\n  let adminNav = null;\n  if (user.role === UserRole.ADMIN) {\n    adminNav = <NavSection title=\"Administrator\" routes={adminRoutes} />;\n  }\n\n  let clientNav = null;\n  if (client) {\n    clientNav = (\n      <NavSection title={client.name} routes={clientRoutes.filter(route => {\n        if (user.role === UserRole.ADMIN && route.userRoles.includes(UserRole.ADMIN)) {\n          return true;\n        }\n\n        if (!client.role) {\n          return false;\n        }\n\n        return route.clientRoles?.includes(client.role);\n      })}\n      />\n    );\n  }\n\n  return (\n    <nav className=\"col-sm-2 d-sm-block sidebar\">\n      <div className=\"company-logo\"><Logo style={{ fill: 'white' }} /></div>\n      <div className=\"sidebar-sticky\" />\n      <Nav className=\"nav flex-column\">\n        {adminNav}\n        {clientNav}\n      </Nav>\n    </nav>\n  );\n}\n\nexport default Sidebar;\n","import React, { useContext } from 'react';\n\nimport Header from '../shared/components/layout/header';\nimport Sidebar from '../shared/components/layout/sidebar';\nimport { SessionContext } from '../shared/contexts/session';\n\nimport './PrivateSection.scss';\n\nfunction PrivateSection(props: React.PropsWithChildren<{}>): JSX.Element | null {\n  const [{ user }] = useContext(SessionContext);\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"private-layout\">\n      <Sidebar />\n      <div className=\"container-layout\">\n        <Header />\n        <div className=\"container-fluid\">{props.children}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default PrivateSection;\n","import React, { useContext } from 'react';\n\nimport './PublicSection.scss';\n\nimport { Logo } from '../shared/components/Logo';\nimport { SessionContext } from '../shared/contexts/session';\n\nfunction PublicSection(props: React.PropsWithChildren<{}>): JSX.Element | null {\n  const [{ user }] = useContext(SessionContext);\n  if (user) {\n    return null;\n  }\n\n  return (\n    <div className=\"floating-container\">\n      <div className=\"box\">\n        <Logo />\n        <hr />\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default PublicSection;\n","import React, { useContext } from 'react';\nimport { Redirect, Router, Switch, Route } from 'react-router-dom';\n\nimport history from '../helpers/history';\nimport AcceptUserInvitation from '../modules/accept-user-invitation/accept-user-invitation';\nimport LandingContainer from '../modules/landing/landing.container';\nimport LoginForm from '../modules/login-form/login-form';\nimport { Route as CustomRoute, getRoutes } from '../services/role-management/routes';\nimport { PageNotFound } from '../shared/components/PageNotFound/PageNotFound';\nimport { SessionContext } from '../shared/contexts/session';\n\nimport PrivateSection from './PrivateSection';\nimport PublicSection from './PublicSection';\n\nexport default function AppRoute(): JSX.Element {\n  const [state] = useContext(SessionContext);\n  const routes: CustomRoute[] = getRoutes(state);\n\n  return (\n    <Router history={history}>\n      <PublicSection>\n        <Switch>\n          <Redirect path=\"/\" exact to=\"/login\" />\n          <Route path=\"/login\" render={(): JSX.Element => <LoginForm />} />\n          <Route path=\"/accept-invitation\" render={(): JSX.Element => <AcceptUserInvitation />} />\n          <Redirect path=\"*\" exact to=\"/login\" />\n        </Switch>\n      </PublicSection>\n      <PrivateSection>\n        <Switch>\n          <Redirect path=\"/\" exact to=\"/landing\" />\n          <Route path=\"/landing\" render={(): JSX.Element => <LandingContainer />} />\n          {routes.map((route, key) => (\n            <Route path={route.url} key={key} exact render={(): JSX.Element => <route.component />} />\n          ))}\n          <Route path=\"*\" render={(): React.ReactNode => <PageNotFound />} />\n        </Switch>\n      </PrivateSection>\n    </Router>\n  );\n}\n","import React from 'react';\n\nimport SessionContextProvider from '../shared/contexts/session';\nimport ToastContextProvider from '../shared/contexts/toast';\n\nimport AppRoute from './App.Route';\n\nfunction App(): JSX.Element {\n  return (\n    <SessionContextProvider>\n      <ToastContextProvider>\n        <AppRoute />\n      </ToastContextProvider>\n    </SessionContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}